{"version":3,"sources":["logo.svg","components/utils.js","components/configDashboards/SliderInput.js","actions.js","components/CustomCard.js","components/configDashboards/NormalConfig.js","components/configDashboards/PoissonConfig.js","components/randomDataGenerator.js","components/NormalChart.js","components/PoissonChart.js","components/Tag.js","stats.js","components/NavigationBar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Poisson","lambda","x","Math","pow","exp","factorial","BoxMuller","mu","sigma","u","v","random","sqrt","log","cos","PI","InverseTransformSampling","Error","p","s","createHistogram","data","console","time","positives","negatives","hist","keys","Object","slice","length","forEach","item","key","sign","others","timeEnd","logToLin","y","floor","log10","round","SliderInput","className","Typography","id","gutterBottom","this","props","label","Grid","container","spacing","alignItems","icon","xs","Slider","value","onChange","event","newValue","sliderChange","valueName","name","onChangeCommitted","toggleUpdateData","aria-labelledby","max","Input","margin","inputChange","onBlur","handleBlur","inputProps","React","Component","type","clip","togglePerformanceChart","CustomCard","useState","expanded","setExpanded","Card","CardHeader","disableTypography","title","variant","IconButton","onClick","aria-expanded","aria-label","classNames","ExpandMore","avatar","Collapse","in","CardContent","children","NormalConfig","Tune","mean","normal","GraphicEq","stDev","BlurOn","samples","ScatterPlot","FormControl","component","FormGroup","FormControlLabel","control","Checkbox","checked","performanceChart","FormHelperText","mapDispatchToProps","connect","state","PoissonConfig","poisson","generateChartData","countries","undefined","rules","slope","isStatic","independent","dependent","chartData","startingDataPoint","firstDate","Date","setDate","getDate","index","prevDataPoint","newDataPoint","i","newDate","date","includes","push","NormalChart","chart","am4core","commercialLicense","prevPerf","createChart","d","utils","randomDataGenerator","positiveData","positiveKeys","negativeData","negativeKeys","sort","a","b","Number","concat","dummy","dataPoint","parseInt","hasZero","dark","animated","refs","normal_chart","am4charts","categoryField","createData","xAxis","xAxes","dataFields","category","renderer","grid","strokeDasharray","range","axisRanges","create","paddingTop","fontSize","stroke","strokeWidth","strokeOpacity","yAxes","colorSet","yAxis2","template","disabled","line","getIndex","opposite","normalBM","series","valueY","categoryX","fillOpacity","tensionX","columns","width","uniform","hidden","cfdBM","yAxis","cursor","legend","markers","height","itemContainers","paddingRight","paddingLeft","paddingBottom","updateData","queue","minPolylineStep","BarChart","ref","PoissonChart","poisson_chart","poissonITS","cfd","Tag","classes","makeStyles","theme","tag","position","right","toString","top","Stats","Paper","align","Link","target","href","NavigationBar","HideOnScroll","AppBar","Tabs","centered","selectedTab","setTab","Tab","window","trigger","useScrollTrigger","Slide","appear","direction","App","src","logo","alt","Boolean","location","hostname","match","createMuiTheme","palette","secondary","main","initialState","store","createStore","action","produce","draft","linToLog","ReactDOM","render","MuiThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c0bcf9e5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","/**\r\n * Analytically calculates the Normal distribution\r\n * @return {number}\r\n */\r\nexport function Gaussian(mu, sigma, x) {\r\n  return (1 / (sigma * Math.sqrt(2 * Math.PI))) * Math.exp(-0.5 * Math.pow((x - mu) / sigma, 2));\r\n}\r\n\r\n\r\n/**\r\n * Analytically calculates the Poisson distribution\r\n * @return {number}\r\n */\r\nexport function Poisson(lambda, x) {\r\n  if (x < 0) {\r\n    return 0\r\n  }\r\n  return (Math.pow(lambda, x) * Math.exp(-lambda)) / (factorial(x))\r\n}\r\n\r\n/**\r\n * Helper function to calculate the factorial of a number recursively\r\n * @return {number}\r\n */\r\nfunction factorial(x) {\r\n  if (x === 0) {\r\n    return 1\r\n  }\r\n  else {\r\n    return x*factorial(x-1);\r\n  }\r\n}\r\n\r\n/**\r\n * Box-Muller transform on the uniform distribution from the built-in Math.random() method\r\n * @param mu - the mean of the distribution\r\n * @param sigma - the variance of the distribution\r\n * @return {number}\r\n */\r\nexport function BoxMuller(mu = 0, sigma = 1) {\r\n  let u = 0, v = 0;\r\n  while (u === 0) u = Math.random();\r\n  while (v === 0) v = Math.random();\r\n  let z1 = Math.sqrt(-2.0 * Math.log(u)) * Math.cos(2.0 * Math.PI * v);\r\n  return z1 * sigma + mu;\r\n}\r\n\r\n/**\r\n * Inverse transform sampling on the formula e^-x to get a Poisson distribution\r\n * @return {number}\r\n */\r\nexport function InverseTransformSampling(lambda = 0) {\r\n  if (lambda > 1000) {\r\n    throw new Error('Value of Lambda too large')\r\n  }\r\n  let x = 0, p = Math.exp(-lambda), s = p, u = Math.random();\r\n  while (s < u) {\r\n    x++;\r\n    p *= lambda / x;\r\n    s += p;\r\n  }\r\n  return x;\r\n}\r\n\r\n/**\r\n * Converts data from generator to histogram\r\n */\r\nexport function createHistogram(data) {\r\n  console.time('histogram');\r\n  let positives = [];\r\n  let negatives = [];\r\n  let hist = [];\r\n  let keys = Object.keys(data[0]).slice(1, data.length);\r\n  data.forEach(item => {\r\n    keys.forEach(key => {\r\n      if (Math.sign(item[key]) === -1) {\r\n        hist = negatives\r\n      }\r\n      else {\r\n        hist = positives\r\n      }\r\n      if (!hist[item[key]]) {\r\n        hist[item[key]] = {};\r\n        keys.forEach(others => {\r\n          hist[item[key]][others] = 0;\r\n        });\r\n        hist[item[key]][key] = 1;\r\n      }\r\n      else {\r\n        hist[item[key]][key] += 1;\r\n      }\r\n    });\r\n  });\r\n  console.timeEnd('histogram');\r\n  return [positives, negatives];\r\n}\r\n\r\n/**\r\n * Converts linear scale to logarithmic scale\r\n * @param x\r\n * @returns {number}\r\n */\r\nexport function linToLog(x) {\r\n  const y = Math.floor((x + Math.floor(x / 10)) / 10);\r\n  return ((x + y) % 10) * Math.pow(10, y);\r\n}\r\n\r\n/**\r\n * Converts logarithmic scale to linear scale\r\n * @param x\r\n * @returns {number}\r\n */\r\nexport function logToLin(x) {\r\n  const y = Math.floor(Math.log10(x === 0 ? 1 : x));\r\n  return (y === 0 ? x : Math.round(x / Math.pow(10, y))) + y * 9;\r\n}\r\n","import React from 'react';\r\nimport {Slider, Input, Grid, Typography} from '@material-ui/core';\r\nimport {logToLin} from '../utils';\r\n\r\nexport default class SliderInput extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"slider__container\">\r\n        <Typography id=\"input-slider\" gutterBottom>\r\n          {this.props.label}\r\n        </Typography>\r\n        <Grid container spacing={2} alignItems=\"center\">\r\n          <Grid item>{this.props.icon}</Grid>\r\n          <Grid item xs>\r\n            <Slider\r\n              value={logToLin(this.props.value)}\r\n              onChange={(event, newValue) => this.props.sliderChange(event, newValue, this.props.valueName, this.props.name)}\r\n              onChangeCommitted={() => this.props.toggleUpdateData(this.props.name)}\r\n              aria-labelledby=\"input-slider\"\r\n              max={logToLin(this.props.max)}\r\n              className={'slider'}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Input\r\n              className=\"slider__input\"\r\n              value={this.props.value}\r\n              margin=\"dense\"\r\n              onChange={event => this.props.inputChange(event, this.props.valueName, this.props.name)}\r\n              onBlur={() => this.props.handleBlur(this.props.valueName, this.props.max, this.props.name)}\r\n              inputProps={{\r\n                'aria-labelledby': 'input-slider'\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export const SLIDER_CHANGE = 'SLIDER_CHANGE';\r\nexport const INPUT_CHANGE = 'INPUT_CHANGE';\r\nexport const CLIP = 'CLIP';\r\nexport const TOGGLE_UPDATE_DATA = 'TOGGLE_UPDATE_DATA';\r\nexport const SET_TAB = 'SET_TAB';\r\nexport const TOGGLE_PERFORMANCE_CHART = 'TOGGLE_PERFORMANCE_CHART';\r\n\r\nexport const sliderChange = (event, newValue, value, name) => ({type: SLIDER_CHANGE, newValue: newValue, value: value, event: event, name: name});\r\nexport const inputChange = (event, value, name) => ({type: INPUT_CHANGE, event: event, value: value, name: name});\r\nexport const clip = (max, value, name) => ({type: CLIP, max: max, value: value, name: name});\r\nexport const toggleUpdateData = name => ({type: TOGGLE_UPDATE_DATA, name: name});\r\nexport const setTab = (event, value) => ({type: SET_TAB, value: value});\r\nexport const togglePerformanceChart = name => ({type: TOGGLE_PERFORMANCE_CHART, name: name});\r\n","import {Card, CardContent, CardHeader, Collapse, IconButton, Typography} from '@material-ui/core';\r\nimport classNames from 'classnames';\r\nimport {ExpandMore} from '@material-ui/icons';\r\nimport React from 'react';\r\n\r\nexport default function CustomCard(props) {\r\n  const [expanded, setExpanded] = React.useState(true);\r\n\r\n  function handleExpandClick() {\r\n    setExpanded(!expanded);\r\n  }\r\n  return (\r\n    <Card className={props.className}>\r\n      <CardHeader\r\n        className={'card__header'}\r\n        disableTypography={true}\r\n        title={\r\n          <div className={'card__header__content'}>\r\n            <Typography variant={'h5'} className={'card__header__title'}>\r\n              {props.title}\r\n            </Typography>\r\n            <IconButton\r\n              onClick={handleExpandClick}\r\n              aria-expanded={expanded}\r\n              aria-label=\"show more\"\r\n              className={classNames('card__header__expand', expanded ? 'card__header__expand--open' : '')}\r\n            >\r\n              <ExpandMore />\r\n            </IconButton>\r\n          </div>\r\n        }\r\n        avatar={props.avatar}\r\n      />\r\n      <Collapse in={expanded}>\r\n        <CardContent>{props.children}</CardContent>\r\n      </Collapse>\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {Grid, Checkbox, FormControlLabel, FormHelperText, FormControl, FormGroup} from '@material-ui/core';\r\nimport SliderInput from './SliderInput';\r\nimport {clip, inputChange, sliderChange, toggleUpdateData, togglePerformanceChart} from '../../actions';\r\nimport {GraphicEq, ScatterPlot, BlurOn, Tune} from '@material-ui/icons';\r\nimport {connect} from 'react-redux';\r\nimport CustomCard from '../CustomCard';\r\n\r\nclass NormalConfig extends React.Component {\r\n  handleBlur = (valueName, max, name) => {\r\n    this.props.clip(max, valueName, name);\r\n    this.props.toggleUpdateData(name);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <CustomCard title={'Graph Configuration'} avatar={<Tune />}>\r\n        <Grid container>\r\n          <Grid item xs={6}>\r\n            <SliderInput\r\n              label={'Mean'}\r\n              name={'normal'}\r\n              valueName={'mean'}\r\n              value={this.props.mean.normal}\r\n              inputChange={this.props.inputChange}\r\n              sliderChange={this.props.sliderChange}\r\n              toggleUpdateData={this.props.toggleUpdateData}\r\n              handleBlur={this.handleBlur}\r\n              max={100000}\r\n              icon={<GraphicEq />}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <SliderInput\r\n              label={'Standard Deviation'}\r\n              name={'normal'}\r\n              valueName={'stDev'}\r\n              value={this.props.stDev.normal}\r\n              inputChange={this.props.inputChange}\r\n              sliderChange={this.props.sliderChange}\r\n              toggleUpdateData={this.props.toggleUpdateData}\r\n              handleBlur={this.handleBlur}\r\n              max={1000}\r\n              icon={<BlurOn />}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <SliderInput\r\n              label={'Samples'}\r\n              name={'normal'}\r\n              valueName={'samples'}\r\n              value={this.props.samples.normal}\r\n              inputChange={this.props.inputChange}\r\n              sliderChange={this.props.sliderChange}\r\n              toggleUpdateData={this.props.toggleUpdateData}\r\n              handleBlur={this.handleBlur}\r\n              max={1000000}\r\n              icon={<ScatterPlot />}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <FormControl component=\"fieldset\" className={'stats__performance-chart'}>\r\n              <FormGroup>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox checked={this.props.performanceChart.normal} onChange={() => this.props.togglePerformanceChart('normal')} />\r\n                  }\r\n                  label=\"Performance Chart\"\r\n                />\r\n              </FormGroup>\r\n              <FormHelperText margin=\"dense\">Tick for faster rendering (recommended at high variances)</FormHelperText>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n      </CustomCard>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    mean: state.mean,\r\n    stDev: state.stDev,\r\n    samples: state.samples,\r\n    performanceChart: state.performanceChart\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  sliderChange,\r\n  inputChange,\r\n  clip,\r\n  toggleUpdateData,\r\n  togglePerformanceChart\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(NormalConfig);\r\n","import React from 'react';\r\nimport {Grid, Checkbox, FormControlLabel, FormHelperText, FormControl, FormGroup} from '@material-ui/core';\r\nimport SliderInput from './SliderInput';\r\nimport {clip, inputChange, sliderChange, toggleUpdateData, togglePerformanceChart} from '../../actions';\r\nimport {GraphicEq, ScatterPlot, Tune} from '@material-ui/icons';\r\nimport {connect} from 'react-redux';\r\nimport CustomCard from '../CustomCard';\r\n\r\nclass PoissonConfig extends React.Component {\r\n  handleBlur = (valueName, max, name) => {\r\n    this.props.clip(max, valueName, name);\r\n    this.props.toggleUpdateData(name);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <CustomCard title={'Graph Configuration'} avatar={<Tune />}>\r\n        <Grid container>\r\n          <Grid item xs={6}>\r\n            <SliderInput\r\n              label={'Lambda'}\r\n              name={'poisson'}\r\n              valueName={'lambda'}\r\n              value={this.props.lambda.poisson}\r\n              inputChange={this.props.inputChange}\r\n              sliderChange={this.props.sliderChange}\r\n              toggleUpdateData={this.props.toggleUpdateData}\r\n              handleBlur={this.handleBlur}\r\n              max={745}\r\n              icon={<GraphicEq />}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <SliderInput\r\n              label={'Samples'}\r\n              name={'poisson'}\r\n              valueName={'samples'}\r\n              value={this.props.samples.poisson}\r\n              inputChange={this.props.inputChange}\r\n              sliderChange={this.props.sliderChange}\r\n              toggleUpdateData={this.props.toggleUpdateData}\r\n              handleBlur={this.handleBlur}\r\n              max={1000000}\r\n              icon={<ScatterPlot />}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <FormControl component=\"fieldset\" className={'stats__performance-chart'}>\r\n              <FormGroup>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox checked={this.props.performanceChart.poisson} onChange={() => this.props.togglePerformanceChart('poisson')} />\r\n                  }\r\n                  label=\"Performance Chart\"\r\n                />\r\n              </FormGroup>\r\n              <FormHelperText margin=\"dense\">Tick for faster rendering (recommended at high variances)</FormHelperText>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n      </CustomCard>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    lambda: state.lambda,\r\n    samples: state.samples,\r\n    performanceChart: state.performanceChart\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  sliderChange,\r\n  inputChange,\r\n  clip,\r\n  toggleUpdateData,\r\n  togglePerformanceChart\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PoissonConfig);\r\n","import {BoxMuller, InverseTransformSampling} from './utils';\r\n\r\n/**\r\n * Function to generate data object to use in amcharts4 charts\r\n * @param samples - how many samples should be displayed\r\n * @param countries - specifies which countries to include if independent is countries\r\n * @param rules - global rules applied to all data:\r\n *        - positive, ensure all data is positive (caps to zero)\r\n * @param slope - value between -0.5 and 0.5, the higher the more upward the graph will slope if isStatic is set to\r\n *                false (higher values will also mean less variance)\r\n * @param isStatic - if set, data will not accumulate\r\n * @param independent - name for the independent variable\r\n *        - date, sets x-axis to be a dateSeries\r\n *        - id, sets x-axis to be a numerical series\r\n *        - countries, sets x-axis to be a category axis with countries specified in the countries parameter (map chart)\r\n * @param dependent - list of dependent variables with properties\r\n *        - name, specifies name of variable\r\n *        - mean, specifies the mean value around which the data should vary\r\n *        - stDev, specifies standard deviation to indicate variance of data\r\n *        - rules, specific rules for this data series:\r\n *                -- positive, ensure all data is positive (caps to zero)\r\n *                -- uniform, applies Math.random() to get uniform distribution\r\n *                -- poisson, generated data using Poisson distribution (mean is the value for lambda)\r\n * @returns {Array}\r\n */\r\nfunction generateChartData({\r\n  samples = 100,\r\n  countries = undefined,\r\n  rules = [],\r\n  slope = 0.1,\r\n  isStatic = true,\r\n  independent = 'id',\r\n  dependent = [\r\n    {\r\n      name: 'column-1',\r\n      mean: 200,\r\n      stDev: 20,\r\n      rules: ['']\r\n    },\r\n    {\r\n      name: 'column-2',\r\n      mean: 50,\r\n      stDev: 5,\r\n      rules: ['']\r\n    }\r\n  ]\r\n} = {}) {\r\n  //Initialising\r\n  let chartData = [];\r\n  let startingDataPoint = {};\r\n  //Sets initial date for data charts\r\n  if (independent === 'date') {\r\n    let firstDate = new Date();\r\n    firstDate.setDate(firstDate.getDate() - samples);\r\n    startingDataPoint['date'] = firstDate;\r\n  }\r\n  //Initialised normal x-axis values\r\n  else if (independent === 'id') {\r\n    startingDataPoint['id'] = 1;\r\n  }\r\n  //Sets up country data for map chart\r\n  else if (independent === 'country') {\r\n    if (countries) {\r\n      startingDataPoint['id'] = countries[0];\r\n    } else {\r\n      throw new Error('Countries parameter needs to be defined');\r\n    }\r\n  }\r\n  //Set initial independent variables\r\n  dependent.forEach((item, index) => {\r\n    startingDataPoint[item.name] = Math.round(\r\n      BoxMuller(item.mean, item.stDev)\r\n    );\r\n  });\r\n  let prevDataPoint = startingDataPoint;\r\n  let newDataPoint = {};\r\n  //Loop through time range or 100 data points if unspecified\r\n  for (let i = 0; i < (countries ? countries.length : samples); i++) {\r\n    newDataPoint = {};\r\n    //Add independent variable\r\n    switch(independent) {\r\n      case 'date':\r\n        let newDate = new Date();\r\n        newDate.setDate(startingDataPoint.date.getDate() + i);\r\n        newDataPoint['date'] = newDate;\r\n        break;\r\n      case 'id':\r\n        newDataPoint['id'] = startingDataPoint.id + i;\r\n        break;\r\n      case 'country':\r\n        newDataPoint['id'] = countries[i];\r\n        break;\r\n      default:\r\n        throw new Error('Independent variable not valid');\r\n    }\r\n    //Add dependent variables\r\n    dependent.forEach((item, index) => {\r\n      if (item.rules.includes('uniform')) {\r\n        newDataPoint[item.name] = Math.round(\r\n          Math.random() * (6 * (item.stDev)) +\r\n          (item.mean - 3 * (item.stDev))\r\n        );\r\n      }\r\n      else if (item.rules.includes('poisson')) {\r\n        newDataPoint[item.name] = Math.round(InverseTransformSampling(item.mean));\r\n      }\r\n      else {\r\n        newDataPoint[item.name] = Math.round(BoxMuller(item.mean, item.stDev));\r\n      }\r\n      if ((rules.includes('positive') || item.rules.includes('positive')) &&\r\n          newDataPoint[item.name] < 0) {\r\n        newDataPoint[item.name] = 0;\r\n      }\r\n      if (!isStatic) {\r\n        newDataPoint[item.name] = prevDataPoint[item.name] +\r\n          Math.round((Math.random() < 0.5 + slope ? 1 : -1) * newDataPoint[item.name]);\r\n        prevDataPoint = newDataPoint;\r\n      }\r\n    });\r\n    chartData.push(newDataPoint);\r\n  }\r\n  return chartData;\r\n}\r\n\r\nexport default generateChartData;\r\n","import React from 'react';\r\nimport * as am4core from '@amcharts/amcharts4/core';\r\nimport * as am4charts from '@amcharts/amcharts4/charts';\r\nimport dark from '@amcharts/amcharts4/themes/dark';\r\nimport animated from '@amcharts/amcharts4/themes/animated';\r\nimport randomDataGenerator from './randomDataGenerator';\r\nimport * as utils from './utils';\r\nimport {connect} from 'react-redux';\r\nimport {toggleUpdateData} from '../actions';\r\nimport CustomCard from './CustomCard';\r\nimport {BarChart} from '@material-ui/icons';\r\n\r\nclass NormalChart extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.chart = null;\r\n    am4core.options.commercialLicense = true;\r\n    this.prevPerf = false;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.createChart();\r\n  }\r\n\r\n  createData() {\r\n    const samples = this.props.samples.normal;\r\n    const mean = this.props.mean.normal;\r\n    const stDev = this.props.stDev.normal;\r\n    let chart_data = randomDataGenerator({\r\n      samples: samples,\r\n      dependent: [\r\n        {\r\n          name: 'column-1',\r\n          mean: mean,\r\n          stDev: stDev,\r\n          rules: []\r\n        },\r\n        {\r\n          name: 'column-3',\r\n          mean: mean,\r\n          stDev: stDev,\r\n          rules: ['uniform']\r\n        }\r\n      ]\r\n    });\r\n    let d = utils.createHistogram(chart_data);\r\n    //Dealing with negatives is not as easy as it may seem\r\n    let positiveData = d[0];\r\n    let positiveKeys =Object.keys(positiveData);\r\n    let negativeData = d[1];\r\n    let negativeKeys = Object.keys(negativeData).sort((a, b) => {\r\n      return Number(a) - Number(b)\r\n    });\r\n    let keys = negativeKeys.concat(positiveKeys);\r\n    let dummy = [];\r\n    let data = [];\r\n    /**\r\n     * Converts to data object that is readable by amcharts and add analytical and CFD functions\r\n     */\r\n    keys.forEach((item, index) => {\r\n      if (Math.sign(Number(item)) === -1) {\r\n        data = negativeData;\r\n      }\r\n      else {\r\n        data = positiveData;\r\n      }\r\n      let dataPoint = {};\r\n      dataPoint['id'] = Number(item);\r\n      dataPoint['column-1'] = data[item]['column-1'];\r\n      dataPoint['column-2'] = Math.round(utils.Gaussian(mean, stDev, parseInt(item, 10)) * samples);\r\n      dataPoint['column-3'] = data[item]['column-3'];\r\n      if (!dummy[0]) {\r\n        dataPoint['column-4'] = dataPoint['column-1'];\r\n      } else {\r\n        dataPoint['column-4'] = dummy[index - 1]['column-4'] + data[item]['column-1'];\r\n      }\r\n      dummy.push(dataPoint);\r\n    });\r\n    let hasZero = false;\r\n    if (negativeKeys.length !== 0) {\r\n      hasZero = true;\r\n    }\r\n    return [dummy, hasZero];\r\n  }\r\n\r\n  createChart() {\r\n    /* Chart code */\r\n    // Themes begin\r\n    am4core.useTheme(dark);\r\n    if (this.props.performanceChart.normal) {\r\n      am4core.unuseTheme(animated);\r\n    } else {\r\n      am4core.useTheme(animated);\r\n    }\r\n    // Themes end\r\n\r\n    // Create chart instance\r\n    this.chart = am4core.create(this.refs.normal_chart, am4charts.XYChart);\r\n    let chart = this.chart;\r\n    chart.categoryField = 'category';\r\n\r\n    // Add data\r\n    let dummy = this.createData();\r\n    chart.data = dummy[0];\r\n    let hasZero = dummy[1];\r\n\r\n    // Create axes\r\n    let xAxis = chart.xAxes.push(new am4charts.CategoryAxis());\r\n    xAxis.dataFields.category = 'id';\r\n    xAxis.renderer.grid.strokeDasharray = 3;\r\n    // Zero line\r\n    this.range = xAxis.axisRanges.create();\r\n    this.range.category = hasZero ? 0 : undefined;\r\n    this.range.label.paddingTop = 2;\r\n    this.range.label.fontSize = 12;\r\n    this.range.grid.stroke = am4core.color(\"grey\");\r\n    this.range.grid.strokeWidth = 1;\r\n    this.range.grid.strokeOpacity = 0.7;\r\n\r\n    let yAxis1 = chart.yAxes.push(new am4charts.ValueAxis());\r\n    yAxis1.renderer.grid.strokeDasharray = 3;\r\n\r\n    let colorSet = new am4core.ColorSet();\r\n    let yAxis2 = chart.yAxes.push(new am4charts.ValueAxis());\r\n    yAxis2.renderer.grid.template.disabled = true;\r\n    yAxis2.renderer.line.strokeOpacity = 1;\r\n    yAxis2.renderer.line.stroke = colorSet.getIndex(3);\r\n    yAxis2.renderer.line.strokeWidth = 2;\r\n    yAxis2.renderer.opposite = true;\r\n\r\n    // Create series\r\n    let normalBM = chart.series.push(\r\n      this.props.performanceChart.normal ? new am4charts.StepLineSeries() : new am4charts.ColumnSeries()\r\n    );\r\n    normalBM.name = 'Normal (artificial, Box-Muller)';\r\n    normalBM.dataFields.valueY = 'column-1';\r\n    normalBM.dataFields.categoryX = 'id';\r\n    normalBM.strokeWidth = 1;\r\n    normalBM.fillOpacity = 1;\r\n    normalBM.tensionX = 1;\r\n    if (!this.props.performanceChart.normal) {\r\n      normalBM.columns.template.width = am4core.percent(80);\r\n      normalBM.fillOpacity = 0;\r\n    }\r\n\r\n    let normal = chart.series.push(new am4charts.LineSeries());\r\n    normal.name = 'Normal (analytical)';\r\n    normal.dataFields.valueY = 'column-2';\r\n    normal.dataFields.categoryX = 'id';\r\n    normal.strokeWidth = 1;\r\n    normal.tensionX = 1;\r\n\r\n    let uniform = chart.series.push(new am4charts.LineSeries());\r\n    uniform.name = 'Uniform';\r\n    uniform.dataFields.valueY = 'column-3';\r\n    uniform.dataFields.categoryX = 'id';\r\n    uniform.strokeWidth = 1;\r\n    uniform.tensionX = 1;\r\n    uniform.hidden = true;\r\n\r\n    let cfdBM = chart.series.push(new am4charts.LineSeries());\r\n    cfdBM.name = 'CDF (Box-Muller)';\r\n    cfdBM.dataFields.valueY = 'column-4';\r\n    cfdBM.dataFields.categoryX = 'id';\r\n    cfdBM.strokeWidth = 1;\r\n    cfdBM.tensionX = 1;\r\n    cfdBM.yAxis = yAxis2;\r\n\r\n    // Add cursor\r\n    chart.cursor = new am4charts.XYCursor();\r\n\r\n    // Create legend\r\n    chart.legend = new am4charts.Legend();\r\n    let markers = chart.legend.markers.template;\r\n    markers.width = 12;\r\n    markers.height = 12;\r\n    let container = chart.legend.itemContainers.template;\r\n    container.paddingRight = 5;\r\n    container.paddingLeft = 5;\r\n    container.paddingTop = 0;\r\n    container.paddingBottom = 0;\r\n\r\n    // Add padding\r\n    chart.paddingBottom = 20;\r\n    chart.paddingTop = 40;\r\n  }\r\n\r\n  render() {\r\n    if (this.props.updateData.normal) {\r\n      if (this.props.performanceChart.normal && this.prevPerf !== this.props.performanceChart.normal) {\r\n        am4core.options.queue = true;\r\n        am4core.options.minPolylineStep = 5;\r\n        this.prevPerf = !this.prevPerf;\r\n        this.createChart();\r\n      } else if (!this.props.performanceChart.normal && this.prevPerf !== this.props.performanceChart.normal) {\r\n        am4core.options.queue = false;\r\n        am4core.options.minPolylineStep = 0.5;\r\n        this.prevPerf = !this.prevPerf;\r\n        this.createChart();\r\n      } else if (this.props.updateData.normal) {\r\n        // Resets zero line if zero not in view\r\n        let dummy = this.createData();\r\n        this.chart.data = dummy[0];\r\n        let hasZero = dummy[1];\r\n        this.range.category = hasZero ? 0 : undefined;\r\n        this.range.grid.strokeOpacity = hasZero ? 0.7 : 0;\r\n      }\r\n      this.props.toggleUpdateData('normal');\r\n    }\r\n    return (\r\n      <CustomCard title={'Normal Probability Distribution Histograms'} avatar={<BarChart />}>\r\n        <div className={'stats__chart'} ref={'normal_chart'} />\r\n      </CustomCard>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    mean: state.mean,\r\n    stDev: state.stDev,\r\n    samples: state.samples,\r\n    updateData: state.updateData,\r\n    performanceChart: state.performanceChart\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  toggleUpdateData\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(NormalChart);\r\n","import React from 'react';\r\nimport * as am4core from '@amcharts/amcharts4/core';\r\nimport * as am4charts from '@amcharts/amcharts4/charts';\r\nimport dark from '@amcharts/amcharts4/themes/dark';\r\nimport animated from '@amcharts/amcharts4/themes/animated';\r\nimport randomDataGenerator from './randomDataGenerator';\r\nimport * as utils from './utils';\r\nimport {connect} from 'react-redux';\r\nimport {toggleUpdateData} from '../actions';\r\nimport CustomCard from './CustomCard';\r\nimport {BarChart} from '@material-ui/icons';\r\n\r\nclass PoissonChart extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.chart = null;\r\n    am4core.options.commercialLicense = true;\r\n    this.prevPerf = false;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.createChart();\r\n  }\r\n\r\n  createData() {\r\n    const lambda = this.props.lambda.poisson;\r\n    const samples = this.props.samples.poisson;\r\n    let chart_data = randomDataGenerator({\r\n      samples: samples,\r\n      dependent: [\r\n        {\r\n          name: 'column-1',\r\n          mean: lambda,\r\n          rules: ['poisson', 'positive']\r\n        }\r\n      ]\r\n    });\r\n    let d = utils.createHistogram(chart_data);\r\n    //Dealing with negatives is not as easy as it may seem\r\n    let positiveData = d[0];\r\n    let positiveKeys =Object.keys(positiveData);\r\n    let negativeData = d[1];\r\n    let negativeKeys = Object.keys(negativeData).sort((a, b) => {\r\n      return Number(a) - Number(b)\r\n    });\r\n    let keys = negativeKeys.concat(positiveKeys);\r\n    let dummy = [];\r\n    let data = [];\r\n    /**\r\n     * Converts to data object that is readable by amcharts and add analytical and CFD functions\r\n     */\r\n    keys.forEach((item, index) => {\r\n      if (Math.sign(Number(item)) === -1) {\r\n        data = negativeData;\r\n      }\r\n      else {\r\n        data = positiveData;\r\n      }\r\n      let dataPoint = {};\r\n      dataPoint['id'] = Number(item);\r\n      dataPoint['column-1'] = data[item]['column-1'];\r\n      dataPoint['column-2'] = Math.round(utils.Poisson(lambda, parseInt(item, 10)) * samples);\r\n      if (!dummy[0]) {\r\n        dataPoint['column-4'] = dataPoint['column-2'];\r\n      } else {\r\n        dataPoint['column-4'] = dummy[index - 1]['column-4'] + dataPoint['column-2'];\r\n      }\r\n      dummy.push(dataPoint);\r\n    });\r\n    let hasZero = false;\r\n    if (negativeKeys.length !== 0) {\r\n      hasZero = true;\r\n    }\r\n    return [dummy, hasZero];\r\n  }\r\n\r\n  createChart() {\r\n    /* Chart code */\r\n    // Themes begin\r\n    am4core.useTheme(dark);\r\n    if (this.props.performanceChart.poisson) {\r\n      am4core.unuseTheme(animated);\r\n    } else {\r\n      am4core.useTheme(animated);\r\n    }\r\n    // Themes end\r\n\r\n    // Create chart instance\r\n    this.chart = am4core.create(this.refs.poisson_chart, am4charts.XYChart);\r\n    let chart = this.chart;\r\n    chart.categoryField = 'category';\r\n\r\n    // Add data\r\n    let dummy = this.createData();\r\n    chart.data = dummy[0];\r\n    let hasZero = dummy[1];\r\n\r\n    // Create axes\r\n    let xAxis = chart.xAxes.push(new am4charts.CategoryAxis());\r\n    xAxis.id = 'xAxis';\r\n    xAxis.dataFields.category = 'id';\r\n    xAxis.renderer.grid.strokeDasharray = 3;\r\n    // Zero line\r\n    this.range = xAxis.axisRanges.create();\r\n    this.range.category = hasZero ? 0 : undefined;\r\n    this.range.label.paddingTop = 2;\r\n    this.range.label.fontSize = 12;\r\n    this.range.grid.stroke = am4core.color(\"grey\");\r\n    this.range.grid.strokeWidth = 1;\r\n    this.range.grid.strokeOpacity = 0.7;\r\n    let yAxis1 = chart.yAxes.push(new am4charts.ValueAxis());\r\n    yAxis1.renderer.grid.strokeDasharray = 3;\r\n\r\n    let colorSet = new am4core.ColorSet();\r\n    let yAxis2 = chart.yAxes.push(new am4charts.ValueAxis());\r\n    yAxis2.renderer.grid.template.disabled = true;\r\n    yAxis2.renderer.line.strokeOpacity = 1;\r\n    yAxis2.renderer.line.stroke = colorSet.getIndex(3);\r\n    yAxis2.renderer.line.strokeWidth = 2;\r\n    yAxis2.renderer.opposite = true;\r\n\r\n    // Create series\r\n    let poissonITS = chart.series.push(\r\n      this.props.performanceChart.poisson ? new am4charts.StepLineSeries() : new am4charts.ColumnSeries()\r\n    );\r\n    poissonITS.name = 'Poisson (inverse transform sampling)';\r\n    poissonITS.dataFields.valueY = 'column-1';\r\n    poissonITS.dataFields.categoryX = 'id';\r\n    poissonITS.strokeWidth = 1;\r\n    poissonITS.fillOpacity = 1;\r\n    poissonITS.tensionX = 1;\r\n    if (!this.props.performanceChart.poisson) {\r\n      poissonITS.columns.template.width = am4core.percent(80);\r\n      poissonITS.fillOpacity = 0;\r\n    }\r\n\r\n    let poisson = chart.series.push(new am4charts.LineSeries());\r\n    poisson.name = 'Poisson (analytical)';\r\n    poisson.dataFields.valueY = 'column-2';\r\n    poisson.dataFields.categoryX = 'id';\r\n    poisson.strokeWidth = 1;\r\n    poisson.tensionX = 1;\r\n\r\n    let cfd = chart.series.push(new am4charts.LineSeries());\r\n    cfd.name = 'CDF (analytical)';\r\n    cfd.dataFields.valueY = 'column-4';\r\n    cfd.dataFields.categoryX = 'id';\r\n    cfd.strokeWidth = 1;\r\n    cfd.tensionX = 1;\r\n    cfd.yAxis = yAxis2;\r\n\r\n    // Add cursor\r\n    chart.cursor = new am4charts.XYCursor();\r\n\r\n    // Create legend\r\n    chart.legend = new am4charts.Legend();\r\n    let markers = chart.legend.markers.template;\r\n    markers.width = 12;\r\n    markers.height = 12;\r\n    let container = chart.legend.itemContainers.template;\r\n    container.paddingRight = 5;\r\n    container.paddingLeft = 5;\r\n    container.paddingTop = 0;\r\n    container.paddingBottom = 0;\r\n\r\n    // Add padding\r\n    chart.paddingBottom = 20;\r\n    chart.paddingTop = 40;\r\n  }\r\n\r\n  render() {\r\n    if (this.props.updateData.poisson) {\r\n      if (this.props.performanceChart.poisson && this.prevPerf !== this.props.performanceChart.poisson) {\r\n        am4core.options.queue = true;\r\n        am4core.options.minPolylineStep = 5;\r\n        this.prevPerf = !this.prevPerf;\r\n        this.createChart();\r\n      } else if (!this.props.performanceChart.poisson && this.prevPerf !== this.props.performanceChart.poisson) {\r\n        am4core.options.queue = false;\r\n        am4core.options.minPolylineStep = 0.5;\r\n        this.prevPerf = !this.prevPerf;\r\n        this.createChart();\r\n      } else if (this.props.updateData.poisson) {\r\n        // Resets zero line if zero not in view\r\n        let dummy = this.createData();\r\n        this.chart.data = dummy[0];\r\n        let hasZero = dummy[1];\r\n        this.range.category = hasZero ? 0 : undefined;\r\n        this.range.grid.strokeOpacity = hasZero ? 0.7 : 0;\r\n      }\r\n      this.props.toggleUpdateData('poisson');\r\n    }\r\n    return (\r\n      <CustomCard title={'Poisson Probability Distribution Histograms'} avatar={<BarChart />}>\r\n        <div className={'stats__chart'} ref={'poisson_chart'} />\r\n      </CustomCard>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    lambda: state.lambda,\r\n    samples: state.samples,\r\n    updateData: state.updateData,\r\n    performanceChart: state.performanceChart\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  toggleUpdateData\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PoissonChart);\r\n","import {InlineMath} from 'react-katex';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport React from 'react';\r\n\r\nexport default function Tag(props) {\r\n  const classes = makeStyles(theme => ({\r\n    tag: {\r\n      position: 'absolute',\r\n      right: props.right.toString() + 'rem',\r\n      top: props.top.toString() + 'rem'\r\n    }\r\n  }))();\r\n\r\n  return (\r\n    <div className={classes.tag}><InlineMath>{'(' + props.children + ')'}</InlineMath></div>\r\n  )\r\n}\r\n\r\n","import React from 'react';\r\nimport NormalConfig from './components/configDashboards/NormalConfig';\r\nimport PoissonConfig from './components/configDashboards/PoissonConfig';\r\nimport {Paper, Grid, Typography, Link} from '@material-ui/core';\r\nimport {InlineMath, BlockMath} from 'react-katex';\r\nimport 'katex/dist/katex.min.css';\r\nimport NormalChart from './components/NormalChart';\r\nimport PoissonChart from './components/PoissonChart';\r\nimport Tag from './components/Tag';\r\n\r\nfunction Stats() {\r\n  return (\r\n    <div>\r\n      <Grid container spacing={3} className={'stats__grid'}>\r\n        <Grid item xs={12}>\r\n          <Paper className={'stats__text'}>\r\n            <Typography variant={'h4'} align={'center'} gutterBottom={true}>\r\n              Transforming Random Variable Distributions\r\n            </Typography>\r\n            <Typography variant={'h6'} align={'center'} gutterBottom={true}>\r\n              Normal distributions\r\n            </Typography>\r\n            <Typography>\r\n              This section compares the performance of an artificially created normal distribution from the uniform\r\n              distribution provided by Javascript's <code>Math.random()</code>\r\n              &nbsp;function. In order to achieve this, a method called the&nbsp;\r\n              <Link className={'link'} target=\"_blank\" href={'https://en.wikipedia.org/wiki/Box%E2%80%93Muller_transform'}>\r\n                Box-Muller transform\r\n              </Link>\r\n              &nbsp; was used. If we have two uniformly distributed random variables\r\n              <InlineMath>{'U_1'}</InlineMath> and <InlineMath>{'U_2'}</InlineMath>, then:\r\n              <BlockMath>{'Z_0 = R \\\\cos{(\\\\Theta)}'}</BlockMath>\r\n              <BlockMath>{'Z_1 = R \\\\sin{(\\\\Theta)}'}</BlockMath>\r\n              where <InlineMath>{'Z_0'}</InlineMath> and <InlineMath>{'Z_1'}</InlineMath> are normally distributed\r\n              random variables and\r\n              <BlockMath>{'R^2 = -2 \\\\ln{U_1}'}</BlockMath>\r\n              <BlockMath>{'\\\\Theta = 2\\\\pi U_2'}</BlockMath>\r\n              this leads to the final two equations:\r\n              <BlockMath>{'Z_0 = \\\\sqrt{-2\\\\ln{U_1}} \\\\cos{(2\\\\pi U_2)}'}</BlockMath>\r\n              <Tag right={7.5} top={29.1}>1</Tag>\r\n              <BlockMath>{'Z_1 = \\\\sqrt{-2\\\\ln{U_1}} \\\\sin{(2\\\\pi U_2)}'}</BlockMath>\r\n              <Tag right={7.5} top={31.8}>2</Tag>\r\n              In the graph below, we can see its performance in a histogram compared to the analytic\r\n              function of the normal distribution:\r\n              <BlockMath>\r\n                {'\\\\large{\\\\mathcal{N}(x \\\\hspace{2pt} ; \\\\hspace{2pt} \\\\mu,\\\\sigma) =' +\r\n                  ' \\\\frac{1}{\\\\sqrt{2\\\\pi\\\\sigma^2}}e^{-\\\\frac{(x-\\\\mu)^2}{2\\\\sigma^2}}}'}\r\n              </BlockMath>\r\n              There is also an option to show the source of the random variable by ticking the 'Uniform' legend which\r\n              will show raw output from <code>Math.random()</code>\r\n              . The CDF of our transformed distribution is also shown to further our comparison.\r\n              <br />\r\n              Below the graph, there is a panel that allows you to change the three parameters that define the graph:\r\n              the mean, variance and number of samples.\r\n            </Typography>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <NormalChart />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <NormalConfig />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Paper className={'stats__text'}>\r\n            <Typography variant={'h6'} align={'center'} gutterBottom={true}>\r\n              Poisson distributions\r\n            </Typography>\r\n            <Typography>\r\n              We now turn to the Poisson distribution, another very prominent distribution that describes random events\r\n              happening at a constant rate independently of time. The analytic function is:\r\n              <BlockMath>\r\n                {'\\\\large{\\\\text{Po}(x\\\\hspace{2pt} ; \\\\hspace{2pt} \\\\lambda) = \\\\frac{\\\\lambda^x}{x!}e^{-\\\\lambda}}'}\r\n              </BlockMath>\r\n              To transform our uniform distribution to a Poisson one, we can use the Knuth algorithm or we can use\r\n              inverse transform sampling to obtain a practical estimate to the analytic distribution (\r\n              <Link className={'link'} target=\"_blank\" href={'https://en.wikipedia.org/wiki/Poisson_distribution#Generating_Poisson-distributed_random_variables'}>\r\n                source\r\n              </Link>). Since the Knuth algorithm can have underflow errors at high <InlineMath>{'\\\\lambda'}</InlineMath>\r\n              &nbsp; due to the very small <InlineMath>{'e^{\\\\lambda}'}</InlineMath>, another algorithm is also used that\r\n              uses a smallest value of <InlineMath>{'e^{-\\\\lambda}'}</InlineMath> using a separate parameter &nbsp;\r\n              <InlineMath>{'{\\\\footnotesize{\\\\text{STEP}}}'}</InlineMath>.\r\n            </Typography>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <PoissonChart />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <PoissonConfig />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Stats;\r\n","import {AppBar, Slide, Tab, Tabs, useScrollTrigger} from '@material-ui/core';\r\nimport React from 'react';\r\nimport {setTab} from '../actions';\r\nimport {connect} from 'react-redux';\r\n\r\nclass NavigationBar extends React.Component {\r\n  render() {\r\n    return (\r\n      <HideOnScroll>\r\n        <AppBar>\r\n          <Tabs centered value={this.props.selectedTab} onChange={this.props.setTab}>\r\n            <Tab label=\"Home\" value={'home'} />\r\n            <Tab label=\"Stats\" value={'stats'} />\r\n            <Tab label=\"Spike Trains\" value={'spikeTrains'} />\r\n          </Tabs>\r\n        </AppBar>\r\n      </HideOnScroll>\r\n    );\r\n  }\r\n}\r\n\r\nfunction HideOnScroll(props) {\r\n  const {children, window} = props;\r\n  const trigger = useScrollTrigger({target: window ? window() : undefined});\r\n\r\n  return (\r\n    <Slide appear={false} direction=\"down\" in={!trigger}>\r\n      {children}\r\n    </Slide>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    selectedTab: state.selectedTab\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setTab\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(NavigationBar);\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Stats from './stats';\r\nimport {Switch, Route} from 'react-router-dom';\r\nimport NavigationBar from './components/NavigationBar';\r\nimport {connect} from 'react-redux';\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavigationBar />\r\n        <div className={this.props.selectedTab === 'home' ? '' : 'invisible'}>\r\n          <header className={'App-header'}>\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n            Data Visualisation\r\n          </header>\r\n        </div>\r\n        <div className={this.props.selectedTab === 'stats' ? '' : 'invisible'}>\r\n          <Stats />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // return (\r\n  //   <Switch>\r\n  //     <Route exact path=\"/\" component={Header} />\r\n  //     <Route path=\"/stats\" component={Stats} />\r\n  //   </Switch>\r\n  // );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    selectedTab: state.selectedTab\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport {createStore} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport produce from 'immer';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport {linToLog} from './components/utils';\r\nimport {createMuiTheme, MuiThemeProvider} from '@material-ui/core';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: 'dark',\r\n    secondary: {\r\n      main: '#FFFFFF'\r\n    }\r\n  }\r\n});\r\n\r\nconst initialState = {\r\n  mean: {\r\n    normal: 1,\r\n    poisson: 100\r\n  },\r\n  stDev: {\r\n    normal: 10,\r\n    poisson: 10\r\n  },\r\n  lambda : {\r\n    poisson: 5\r\n  },\r\n  samples: {\r\n    normal: 1000,\r\n    poisson: 1000\r\n  },\r\n  updateData: {\r\n    normal: false,\r\n    poisson: false\r\n  },\r\n  performanceChart: {\r\n    normal: false,\r\n    poisson: false\r\n  },\r\n  selectedTab: 'home',\r\n};\r\n\r\nfunction reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'SLIDER_CHANGE':\r\n      return produce(state, draft => {\r\n        draft[action.value][action.name] = linToLog(action.newValue);\r\n      });\r\n    case 'INPUT_CHANGE':\r\n      return produce(state, draft => {\r\n        draft[action.value][action.name] = action.event.target.value === '' ? '' : Number(action.event.target.value);\r\n      });\r\n    case 'CLIP':\r\n      if (state[action.value][action.name] > action.max) {\r\n        return produce(state, draft => {\r\n          draft[action.value][action.name] = action.max;\r\n        });\r\n      } else if (state[action.value][action.name] < 0) {\r\n        return produce(state, draft => {\r\n          draft[action.value][action.name] = 0;\r\n        });\r\n      } else {\r\n        return state;\r\n      }\r\n    case 'TOGGLE_UPDATE_DATA':\r\n      return produce(state, draft => {\r\n        draft.updateData[action.name] = !state.updateData[action.name];\r\n      });\r\n    case 'TOGGLE_PERFORMANCE_CHART':\r\n      return produce(state, draft => {\r\n        draft.updateData[action.name] = !state.updateData[action.name];\r\n        draft.performanceChart[action.name] = !state.performanceChart[action.name];\r\n      });\r\n    case 'SET_TAB':\r\n      return {\r\n        ...state,\r\n        selectedTab: action.value\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nconst store = createStore(reducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <MuiThemeProvider theme={theme}>\r\n      <App />\r\n    </MuiThemeProvider>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}