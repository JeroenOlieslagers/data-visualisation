{"version":3,"sources":["logo.svg","actions.js","components/NavigationBar.js","components/utils.js","components/configDashboards/SliderInput.js","components/CustomCard.js","components/configDashboards/NormalConfig.js","components/randomDataGenerator.js","components/NormalChart.js","components/Tag.js","Normal.js","components/configDashboards/PoissonConfig.js","components/PoissonChart.js","Poisson.js","spikeTrain.js","ipython.js","rayTracing.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","sliderChange","event","newValue","value","name","type","inputChange","clip","max","toggleUpdateData","togglePerformanceChart","NavigationBar","handleOpen","stopPropagation","setState","anchorEl","currentTarget","changeStatsTab","props","setTab","handleClose","statsTab","state","open","Boolean","this","HideOnScroll","AppBar","Tabs","centered","selectedTab","onChange","Tab","label","classes","wrapper","icon","ArrowDropDown","onClick","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","className","React","Component","children","window","trigger","useScrollTrigger","target","undefined","Slide","appear","direction","in","mapDispatchToProps","connect","Poisson","lambda","x","Math","pow","exp","factorial","BoxMuller","mu","sigma","u","v","random","sqrt","log","cos","PI","InverseTransformSampling","Error","p","s","createHistogram","data","console","time","positives","negatives","hist","keys","Object","slice","length","forEach","item","key","sign","others","timeEnd","logToLin","y","floor","log10","round","Vector","l2","l22","SliderInput","Typography","id","gutterBottom","Grid","container","spacing","alignItems","xs","Slider","valueName","onChangeCommitted","aria-labelledby","Input","margin","onBlur","handleBlur","inputProps","CustomCard","useState","expanded","setExpanded","Card","CardHeader","disableTypography","title","variant","IconButton","aria-expanded","aria-label","classNames","ExpandMore","avatar","Collapse","CardContent","NormalConfig","Tune","mean","normal","GraphicEq","stDev","BlurOn","samples","ScatterPlot","FormControl","component","FormGroup","FormControlLabel","control","Checkbox","checked","performanceChart","FormHelperText","generateChartData","countries","rules","slope","isStatic","independent","dependent","chartData","startingDataPoint","firstDate","Date","setDate","getDate","index","prevDataPoint","newDataPoint","i","newDate","date","includes","push","NormalChart","chart","am4core","commercialLicense","prevPerf","createChart","d","utils","randomDataGenerator","positiveData","positiveKeys","negativeData","negativeKeys","sort","a","b","Number","concat","dummy","dataPoint","parseInt","hasZero","dark","animated","refs","normal_chart","am4charts","categoryField","createData","xAxis","xAxes","dataFields","category","renderer","grid","strokeDasharray","range","axisRanges","create","paddingTop","fontSize","stroke","strokeWidth","strokeOpacity","yAxes","colorSet","yAxis2","template","disabled","line","getIndex","opposite","normalBM","series","valueY","categoryX","fillOpacity","tensionX","columns","width","uniform","hidden","cfdBM","yAxis","cursor","legend","markers","height","itemContainers","paddingRight","paddingLeft","paddingBottom","updateData","queue","minPolylineStep","BarChart","ref","Tag","makeStyles","theme","tag","position","right","toString","top","Normal","Paper","align","Link","href","PoissonConfig","poisson","PoissonChart","poisson_chart","poissonITS","cfd","SpikeTrain","variance_divisor","typical","spikes","IPython","RayTracing","recursiveReflection","start","n","intersections","objects","j","calculateIntersect","frame","minDist","nearestIntersectIndex","dist","vMinus","drawLine","numberOfRays","normals","frame_normals","drawCircle","reflectedRay","reflect","vPlus","shootMode","setTimeout","shootDelay","refraction","refractedRay","refract","refractiveIndex","clicked","rect","cvs","getBoundingClientRect","addMode","polyDraw","poly","drawPolygon","left","polyRadius","polyN","polyAngle","objectsText","innerHTML","edgesText","addedFirstVertex","calculateNormal","draw","source","set","onScroll","deltaY","polyDrawText","multiRayMode","multiRayN","multiRayText","onMouseMove","view","addObject","keyCode","pop","frame_on","frameText","recursionDepth","recursionDepthText","refractionText","showNormals","normalsText","popped","shootModeText","document","getElementById","ctx","getContext","addEventListener","raysText","c","q","r","mult","dot","normalise","cosi","min","etai","etat","N","temp","eta","k","beginPath","moveTo","lineTo","closePath","strokeStyle","arc","fillStyle","fill","t","angle","atan2","head1","sin","head2","getVector","theta","segment","phi","polyVector","polyNormals","clearRect","lineWidth","strokeRect","drawArrow","ray","draw_border","fillRect","drawObjects","drawNormals","drawMultiRays","style","innerWidth","innerHeight","htmlFor","placeholder","App","src","logo","alt","location","hostname","match","createMuiTheme","palette","secondary","main","initialState","store","createStore","action","produce","draft","linToLog","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uHAAAA,EAAOC,QAAU,IAA0B,kC,kTCO9BC,EAAe,SAACC,EAAOC,EAAUC,EAAOC,GAAzB,MAAmC,CAACC,KAPnC,gBAOwDH,SAAUA,EAAUC,MAAOA,EAAOF,MAAOA,EAAOG,KAAMA,IAC9HE,EAAc,SAACL,EAAOE,EAAOC,GAAf,MAAyB,CAACC,KAPzB,eAO6CJ,MAAOA,EAAOE,MAAOA,EAAOC,KAAMA,IAC9FG,EAAO,SAACC,EAAKL,EAAOC,GAAb,MAAuB,CAACC,KAPxB,OAOoCG,IAAKA,EAAKL,MAAOA,EAAOC,KAAMA,IACzEK,EAAmB,SAAAL,GAAI,MAAK,CAACC,KAPR,qBAOkCD,KAAMA,IAE7DM,EAAyB,SAAAN,GAAI,MAAK,CAACC,KAPR,2BAOwCD,KAAMA,I,iBCNhFO,E,YACJ,aAAe,IAAD,8BACZ,+CAMFC,WAAa,SAACX,GACZA,EAAMY,kBACN,EAAKC,SAAS,CACZC,SAAUd,EAAMe,iBAVN,EAcdC,eAAiB,SAAChB,EAAOE,GACvB,EAAKe,MAAMC,OAAOlB,EAAOE,GACzB,EAAKiB,YAAYnB,GACjB,EAAKa,SAAS,CACZO,SAAUlB,KAlBA,EAsBdiB,YAAc,WACZ,EAAKN,SAAS,CACZC,SAAU,QAtBZ,EAAKO,MAAQ,CACXD,SAAU,UAHA,E,sEA4BJ,IAAD,OACHE,EAAOC,QAAQC,KAAKH,MAAMP,UAC9B,OACE,kBAACW,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMC,UAAQ,EAAC1B,MAAOsB,KAAKP,MAAMY,YAAaC,SAAUN,KAAKP,MAAMC,QACjE,kBAACa,EAAA,EAAD,CAAKC,MAAM,OAAO9B,MAAO,SACzB,kBAAC6B,EAAA,EAAD,CAAKE,QAAS,CAACC,QAAS,cAAeF,MAAM,QAAQ9B,MAAOsB,KAAKH,MAAMD,SAAUe,KAAM,kBAACC,EAAA,EAAD,MAAmBC,QAASb,KAAKb,aACxH,kBAACoB,EAAA,EAAD,CAAKC,MAAM,eAAe9B,MAAO,gBACjC,kBAAC6B,EAAA,EAAD,CAAKC,MAAM,cAAc9B,MAAO,eAChC,kBAAC6B,EAAA,EAAD,CAAKC,MAAM,oBAAoB9B,MAAO,aAExC,kBAACoC,EAAA,EAAD,CACEhB,KAAMA,EACNR,SAAUU,KAAKH,MAAMP,SACrByB,QAASf,KAAKL,YACdqB,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdC,gBAAiB,CACfF,SAAU,MACVC,WAAY,SAGd,kBAACE,EAAA,EAAD,CAAUC,UAAW,cAAeR,QAAS,SAAArC,GAAK,OAAI,EAAKgB,eAAehB,EAAO,YAAjF,UAGA,kBAAC4C,EAAA,EAAD,CAAUC,UAAW,cAAeR,QAAS,SAAArC,GAAK,OAAI,EAAKgB,eAAehB,EAAO,aAAjF,kB,GAzDgB8C,IAAMC,WAmElC,SAAStB,EAAaR,GAAQ,IACrB+B,EAAoB/B,EAApB+B,SAAUC,EAAUhC,EAAVgC,OACXC,EAAUC,YAAiB,CAACC,OAAQH,EAASA,SAAWI,IAE9D,OACE,kBAACC,EAAA,EAAD,CAAOC,QAAQ,EAAOC,UAAU,OAAOC,IAAKP,GACzCF,GAWP,IAAMU,EAAqB,CACzBxC,ODhFoB,SAAClB,EAAOE,GAAR,MAAmB,CAACE,KAPnB,UAOkCF,MAAOA,KCmFjDyD,eAVf,SAAyBtC,GACvB,MAAO,CACLQ,YAAaR,EAAMQ,eAUrB6B,EAFaC,CAGbjD,G,iFCpFK,SAASkD,EAAQC,EAAQC,GAC9B,OAAIA,EAAI,EACC,EAEDC,KAAKC,IAAIH,EAAQC,GAAKC,KAAKE,KAAKJ,GAO1C,SAASK,EAAUJ,GACjB,OAAU,IAANA,EACK,EAGAA,EAAEI,EAAUJ,EAAE,GAZ6BI,CAAUJ,GAsBzD,SAASK,IAEd,IAF4C,IAApBC,EAAmB,uDAAd,EAAGC,EAAW,uDAAH,EACpCC,EAAI,EAAGC,EAAI,EACF,IAAND,GAASA,EAAIP,KAAKS,SACzB,KAAa,IAAND,GAASA,EAAIR,KAAKS,SAEzB,OADST,KAAKU,MAAM,EAAMV,KAAKW,IAAIJ,IAAMP,KAAKY,IAAI,EAAMZ,KAAKa,GAAKL,GACtDF,EAAQD,EAOf,SAASS,IAAsC,IAAbhB,EAAY,uDAAH,EAChD,GAAIA,EAAS,IACX,MAAM,IAAIiB,MAAM,6BAGlB,IADA,IAAIhB,EAAI,EAAGiB,EAAIhB,KAAKE,KAAKJ,GAASmB,EAAID,EAAGT,EAAIP,KAAKS,SAC3CQ,EAAIV,GAGTU,GADAD,GAAKlB,IADLC,EAIF,OAAOA,EAMF,SAASmB,EAAgBC,GAC9BC,QAAQC,KAAK,aACb,IAAIC,EAAY,GACZC,EAAY,GACZC,EAAO,GACPC,EAAOC,OAAOD,KAAKN,EAAK,IAAIQ,MAAM,EAAGR,EAAKS,QAsB9C,OArBAT,EAAKU,SAAQ,SAAAC,GACXL,EAAKI,SAAQ,SAAAE,IAETP,GAD4B,IAA1BxB,KAAKgC,KAAKF,EAAKC,IACVR,EAGAD,GAECQ,EAAKC,IAQbP,EAAKM,EAAKC,IAAMA,IAAQ,GAPxBP,EAAKM,EAAKC,IAAQ,GAClBN,EAAKI,SAAQ,SAAAI,GACXT,EAAKM,EAAKC,IAAME,GAAU,KAE5BT,EAAKM,EAAKC,IAAMA,GAAO,SAO7BX,QAAQc,QAAQ,aACT,CAACZ,EAAWC,GAkBd,SAASY,EAASpC,GACvB,IAAMqC,EAAIpC,KAAKqC,MAAMrC,KAAKsC,MAAY,IAANvC,EAAU,EAAIA,IAC9C,OAAc,IAANqC,EAAUrC,EAAIC,KAAKuC,MAAMxC,EAAIC,KAAKC,IAAI,GAAImC,KAAW,EAAJA,EAgBpD,IAAMI,EAAb,WACE,WAAYzC,EAAGqC,GAAG,oBAChB3E,KAAKsC,EAAIA,EACTtC,KAAK2E,EAAIA,EAHb,mDAKS/C,GACL,OAAO,IAAImD,EAAO/E,KAAKsC,EAAIV,EAAOU,EAAGtC,KAAK2E,EAAI/C,EAAO+C,KANzD,4BAQQ/C,GACJ,OAAO,IAAImD,EAAO/E,KAAKsC,EAAIV,EAAOU,EAAGtC,KAAK2E,EAAI/C,EAAO+C,KATzD,2BAWO/C,GACH,OAAO,IAAImD,EAAO/E,KAAKsC,EAAIV,EAAQ5B,KAAK2E,EAAI/C,KAZhD,0BAcMA,GACF,OAAO5B,KAAKsC,EAAIV,EAAOU,EAAItC,KAAK2E,EAAI/C,EAAO+C,IAf/C,0BAiBMrC,EAAGqC,GACL3E,KAAKsC,EAAIA,EACTtC,KAAK2E,EAAIA,IAnBb,kCAsBI,IAAIK,EAAKzC,KAAKU,KAAKjD,KAAKiF,KACxBjF,KAAKsC,EAAItC,KAAKsC,EAAI0C,EAClBhF,KAAK2E,EAAI3E,KAAK2E,EAAIK,IAxBtB,wBA2BI,MAAO,CAAChF,KAAKsC,EAAGtC,KAAK2E,KA3BzB,0BA8BI,OAAOpC,KAAKC,IAAIxC,KAAKsC,EAAG,GAAKC,KAAKC,IAAIxC,KAAK2E,EAAG,OA9BlD,KC9HqBO,E,iLACT,IAAD,OACP,OACE,yBAAK7D,UAAU,qBACb,kBAAC8D,EAAA,EAAD,CAAYC,GAAG,eAAeC,cAAY,GACvCrF,KAAKP,MAAMe,OAEd,kBAAC8E,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,WAAW,UACrC,kBAACH,EAAA,EAAD,CAAMjB,MAAI,GAAErE,KAAKP,MAAMkB,MACvB,kBAAC2E,EAAA,EAAD,CAAMjB,MAAI,EAACqB,IAAE,GACX,kBAACC,EAAA,EAAD,CACEjH,MAAOgG,EAAS1E,KAAKP,MAAMf,OAC3B4B,SAAU,SAAC9B,EAAOC,GAAR,OAAqB,EAAKgB,MAAMlB,aAAaC,EAAOC,EAAU,EAAKgB,MAAMmG,UAAW,EAAKnG,MAAMd,OACzGkH,kBAAmB,kBAAM,EAAKpG,MAAMT,iBAAiB,EAAKS,MAAMd,OAChEmH,kBAAgB,eAChB/G,IAAK2F,EAAS1E,KAAKP,MAAMV,KACzBsC,UAAW,YAGf,kBAACiE,EAAA,EAAD,CAAMjB,MAAI,GACR,kBAAC0B,EAAA,EAAD,CACE1E,UAAU,gBACV3C,MAAOsB,KAAKP,MAAMf,MAClBsH,OAAO,QACP1F,SAAU,SAAA9B,GAAK,OAAI,EAAKiB,MAAMZ,YAAYL,EAAO,EAAKiB,MAAMmG,UAAW,EAAKnG,MAAMd,OAClFsH,OAAQ,kBAAM,EAAKxG,MAAMyG,WAAW,EAAKzG,MAAMmG,UAAW,EAAKnG,MAAMV,IAAK,EAAKU,MAAMd,OACrFwH,WAAY,CACV,kBAAmB,yB,GA3BM7E,IAAMC,W,6HCChC,SAAS6E,GAAW3G,GAAQ,IAAD,EACR6B,IAAM+E,UAAS,GADP,mBACjCC,EADiC,KACvBC,EADuB,KAMxC,OACE,kBAACC,GAAA,EAAD,CAAMnF,UAAW5B,EAAM4B,WACrB,kBAACoF,GAAA,EAAD,CACEpF,UAAW,eACXqF,mBAAmB,EACnBC,MACE,yBAAKtF,UAAW,yBACd,kBAAC8D,EAAA,EAAD,CAAYyB,QAAS,KAAMvF,UAAW,uBACnC5B,EAAMkH,OAET,kBAACE,GAAA,EAAD,CACEhG,QAdZ,WACE0F,GAAaD,IAcHQ,gBAAeR,EACfS,aAAW,YACX1F,UAAW2F,KAAW,uBAAwBV,EAAW,6BAA+B,KAExF,kBAACW,GAAA,EAAD,QAINC,OAAQzH,EAAMyH,SAEhB,kBAACC,GAAA,EAAD,CAAUlF,GAAIqE,GACZ,kBAACc,GAAA,EAAD,KAAc3H,EAAM+B,Y,IC1BtB6F,G,2MACJnB,WAAa,SAACN,EAAW7G,EAAKJ,GAC5B,EAAKc,MAAMX,KAAKC,EAAK6G,EAAWjH,GAChC,EAAKc,MAAMT,iBAAiBL,I,wEAGpB,IAAD,OACP,OACE,kBAACyH,GAAD,CAAYO,MAAO,sBAAuBO,OAAQ,kBAACI,EAAA,EAAD,OAChD,kBAAChC,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAMjB,MAAI,EAACqB,GAAI,GACb,kBAAC,EAAD,CACElF,MAAO,OACP7B,KAAM,SACNiH,UAAW,OACXlH,MAAOsB,KAAKP,MAAM8H,KAAKC,OACvB3I,YAAamB,KAAKP,MAAMZ,YACxBN,aAAcyB,KAAKP,MAAMlB,aACzBS,iBAAkBgB,KAAKP,MAAMT,iBAC7BkH,WAAYlG,KAAKkG,WACjBnH,IAAK,IACL4B,KAAM,kBAAC8G,EAAA,EAAD,SAGV,kBAACnC,EAAA,EAAD,CAAMjB,MAAI,EAACqB,GAAI,GACb,kBAAC,EAAD,CACElF,MAAO,qBACP7B,KAAM,SACNiH,UAAW,QACXlH,MAAOsB,KAAKP,MAAMiI,MAAMF,OACxB3I,YAAamB,KAAKP,MAAMZ,YACxBN,aAAcyB,KAAKP,MAAMlB,aACzBS,iBAAkBgB,KAAKP,MAAMT,iBAC7BkH,WAAYlG,KAAKkG,WACjBnH,IAAK,IACL4B,KAAM,kBAACgH,EAAA,EAAD,SAGV,kBAACrC,EAAA,EAAD,CAAMjB,MAAI,EAACqB,GAAI,GACb,kBAAC,EAAD,CACElF,MAAO,UACP7B,KAAM,SACNiH,UAAW,UACXlH,MAAOsB,KAAKP,MAAMmI,QAAQJ,OAC1B3I,YAAamB,KAAKP,MAAMZ,YACxBN,aAAcyB,KAAKP,MAAMlB,aACzBS,iBAAkBgB,KAAKP,MAAMT,iBAC7BkH,WAAYlG,KAAKkG,WACjBnH,IAAK,IACL4B,KAAM,kBAACkH,EAAA,EAAD,SAGV,kBAACvC,EAAA,EAAD,CAAMjB,MAAI,EAACqB,GAAI,GACb,kBAACoC,EAAA,EAAD,CAAaC,UAAU,WAAW1G,UAAW,4BAC3C,kBAAC2G,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,QACE,kBAACC,EAAA,EAAD,CAAUC,QAASpI,KAAKP,MAAM4I,iBAAiBb,OAAQlH,SAAU,kBAAM,EAAKb,MAAMR,uBAAuB,aAE3GuB,MAAM,uBAGV,kBAAC8H,EAAA,EAAD,CAAgBtC,OAAO,SAAvB,qE,GA9Da1E,IAAMC,WAgFjC,IAAMW,GAAqB,CACzB3D,eACAM,cACAC,OACAE,mBACAC,0BAGakD,gBAjBf,SAAyBtC,GACvB,MAAO,CACL0H,KAAM1H,EAAM0H,KACZG,MAAO7H,EAAM6H,MACbE,QAAS/H,EAAM+H,QACfS,iBAAkBxI,EAAMwI,oBAc1BnG,GAFaC,CAGbkF,I,2ECyBakB,OAnGf,WAqBS,IAAD,yDAAJ,GAAI,IApBNX,eAoBM,MApBI,IAoBJ,MAnBNY,iBAmBM,WAnBM3G,EAmBN,MAlBN4G,aAkBM,MAlBE,GAkBF,MAjBNC,aAiBM,MAjBE,GAiBF,MAhBNC,gBAgBM,aAfNC,mBAeM,MAfQ,KAeR,MAdNC,iBAcM,MAdM,CACV,CACElK,KAAM,WACN4I,KAAM,IACNG,MAAO,GACPe,MAAO,CAAC,KAEV,CACE9J,KAAM,WACN4I,KAAM,GACNG,MAAO,EACPe,MAAO,CAAC,MAGN,EAEFK,EAAY,GACZC,EAAoB,GAExB,GAAoB,SAAhBH,EAAwB,CAC1B,IAAII,EAAY,IAAIC,KACpBD,EAAUE,QAAQF,EAAUG,UAAYvB,GACxCmB,EAAiB,KAAWC,OAGzB,GAAoB,OAAhBJ,EACPG,EAAiB,GAAS,OAGvB,GAAoB,YAAhBH,EAA2B,CAClC,IAAIJ,EAGF,MAAM,IAAIlF,MAAM,2CAFhByF,EAAiB,GAASP,EAAU,GAMxCK,EAAUzE,SAAQ,SAACC,EAAM+E,GACvBL,EAAkB1E,EAAK1F,MAAQ4D,KAAKuC,MAClCnC,EAAU0B,EAAKkD,KAAMlD,EAAKqD,WAM9B,IAHA,IAAI2B,EAAgBN,EAChBO,EAAe,GAEVC,EAAI,EAAGA,GAAKf,EAAYA,EAAUrE,OAASyD,GAAU2B,IAAK,CAGjE,OAFAD,EAAe,GAERV,GACL,IAAK,OACH,IAAIY,EAAU,IAAIP,KAClBO,EAAQN,QAAQH,EAAkBU,KAAKN,UAAYI,GACnDD,EAAY,KAAWE,EACvB,MACF,IAAK,KACHF,EAAY,GAASP,EAAkB3D,GAAKmE,EAC5C,MACF,IAAK,UACHD,EAAY,GAASd,EAAUe,GAC/B,MACF,QACE,MAAM,IAAIjG,MAAM,kCAGpBuF,EAAUzE,SAAQ,SAACC,EAAM+E,GACnB/E,EAAKoE,MAAMiB,SAAS,WACtBJ,EAAajF,EAAK1F,MAAQ4D,KAAKuC,MAC7BvC,KAAKS,UAAY,EAAKqB,EAAKqD,QAC1BrD,EAAKkD,KAAO,EAAKlD,EAAKqD,QAGlBrD,EAAKoE,MAAMiB,SAAS,WAC3BJ,EAAajF,EAAK1F,MAAQ4D,KAAKuC,MAAMzB,EAAyBgB,EAAKkD,OAGnE+B,EAAajF,EAAK1F,MAAQ4D,KAAKuC,MAAMnC,EAAU0B,EAAKkD,KAAMlD,EAAKqD,SAE5De,EAAMiB,SAAS,aAAerF,EAAKoE,MAAMiB,SAAS,cACnDJ,EAAajF,EAAK1F,MAAQ,IAC5B2K,EAAajF,EAAK1F,MAAQ,GAEvBgK,IACHW,EAAajF,EAAK1F,MAAQ0K,EAAchF,EAAK1F,MAC3C4D,KAAKuC,OAAOvC,KAAKS,SAAW,GAAM0F,EAAQ,GAAK,GAAKY,EAAajF,EAAK1F,OACxE0K,EAAgBC,MAGpBR,EAAUa,KAAKL,GAEjB,OAAOR,G,UC7GHc,G,YACJ,aAAe,IAAD,8BACZ,+CACKC,MAAQ,KACbC,KAAgBC,mBAAoB,EACpC,EAAKC,UAAW,EAJJ,E,iFAQZhK,KAAKiK,gB,mCAIL,IAAMrC,EAAU5H,KAAKP,MAAMmI,QAAQJ,OAC7BD,EAAOvH,KAAKP,MAAM8H,KAAKC,OACvBE,EAAQ1H,KAAKP,MAAMiI,MAAMF,OAkB3B0C,EAAIC,EAjBSC,GAAoB,CACnCxC,QAASA,EACTiB,UAAW,CACT,CACElK,KAAM,WACN4I,KAAMA,EACNG,MAAOA,EACPe,MAAO,IAET,CACE9J,KAAM,WACN4I,KAAMA,EACNG,MAAOA,EACPe,MAAO,CAAC,gBAMV4B,EAAeH,EAAE,GACjBI,EAAcrG,OAAOD,KAAKqG,GAC1BE,EAAeL,EAAE,GACjBM,EAAevG,OAAOD,KAAKuG,GAAcE,MAAK,SAACC,EAAGC,GACpD,OAAOC,OAAOF,GAAKE,OAAOD,MAExB3G,EAAOwG,EAAaK,OAAOP,GAC3BQ,EAAQ,GACRpH,EAAO,GAIXM,EAAKI,SAAQ,SAACC,EAAM+E,GAEhB1F,GAD+B,IAA7BnB,KAAKgC,KAAKqG,OAAOvG,IACZkG,EAGAF,EAET,IL9DmBzH,EAAIC,EAAOP,EK8D1ByI,EAAY,GAChBA,EAAS,GAASH,OAAOvG,GACzB0G,EAAU,YAAcrH,EAAKW,GAAM,YACnC0G,EAAU,YAAcxI,KAAKuC,OLjEVlC,EKiE+B2E,ELjE3B1E,EKiEiC6E,ELjE1BpF,EKiEiC0I,SAAS3G,EAAM,ILhE1E,GAAKxB,EAAQN,KAAKU,KAAK,EAAIV,KAAKa,KAAQb,KAAKE,KAAK,GAAMF,KAAKC,KAAKF,EAAIM,GAAMC,EAAO,IKgEF+E,IACrFmD,EAAU,YAAcrH,EAAKW,GAAM,YAC9ByG,EAAM,GAGTC,EAAU,YAAcD,EAAM1B,EAAQ,GAAG,YAAc1F,EAAKW,GAAM,YAFlE0G,EAAU,YAAcA,EAAU,YAIpCD,EAAMnB,KAAKoB,MAEb,IAAIE,GAAU,EAId,OAH4B,IAAxBT,EAAarG,SACf8G,GAAU,GAEL,CAACH,EAAOG,K,oCAMfnB,KAAiBoB,MACblL,KAAKP,MAAM4I,iBAAiBb,OAC9BsC,KAAmBqB,MAEnBrB,KAAiBqB,MAKnBnL,KAAK6J,MAAQC,KAAe9J,KAAKoL,KAAKC,aAAcC,MACpD,IAAIzB,EAAQ7J,KAAK6J,MACjBA,EAAM0B,cAAgB,WAGtB,IAAIT,EAAQ9K,KAAKwL,aACjB3B,EAAMnG,KAAOoH,EAAM,GACnB,IAAIG,EAAUH,EAAM,GAGhBW,EAAQ5B,EAAM6B,MAAM/B,KAAK,IAAI2B,MACjCG,EAAME,WAAWC,SAAW,KAC5BH,EAAMI,SAASC,KAAKC,gBAAkB,EAEtC/L,KAAKgM,MAAQP,EAAMQ,WAAWC,SAC9BlM,KAAKgM,MAAMJ,SAAWX,EAAU,OAAIpJ,EACpC7B,KAAKgM,MAAMxL,MAAM2L,WAAa,EAC9BnM,KAAKgM,MAAMxL,MAAM4L,SAAW,GAC5BpM,KAAKgM,MAAMF,KAAKO,OAASvC,KAAc,QACvC9J,KAAKgM,MAAMF,KAAKQ,YAAc,EAC9BtM,KAAKgM,MAAMF,KAAKS,cAAgB,GAEnB1C,EAAM2C,MAAM7C,KAAK,IAAI2B,MAC3BO,SAASC,KAAKC,gBAAkB,EAEvC,IAAIU,EAAW,IAAI3C,KACf4C,EAAS7C,EAAM2C,MAAM7C,KAAK,IAAI2B,MAClCoB,EAAOb,SAASC,KAAKa,SAASC,UAAW,EACzCF,EAAOb,SAASgB,KAAKN,cAAgB,EACrCG,EAAOb,SAASgB,KAAKR,OAASI,EAASK,SAAS,GAChDJ,EAAOb,SAASgB,KAAKP,YAAc,EACnCI,EAAOb,SAASkB,UAAW,EAG3B,IAAIC,EAAWnD,EAAMoD,OAAOtD,KAC1B3J,KAAKP,MAAM4I,iBAAiBb,OAAS,IAAI8D,KAA6B,IAAIA,MAE5E0B,EAASrO,KAAO,kCAChBqO,EAASrB,WAAWuB,OAAS,WAC7BF,EAASrB,WAAWwB,UAAY,KAChCH,EAASV,YAAc,EACvBU,EAASI,YAAc,EACvBJ,EAASK,SAAW,EACfrN,KAAKP,MAAM4I,iBAAiBb,SAC/BwF,EAASM,QAAQX,SAASY,MAAQzD,KAAgB,IAClDkD,EAASI,YAAc,GAGzB,IAAI5F,EAASqC,EAAMoD,OAAOtD,KAAK,IAAI2B,MACnC9D,EAAO7I,KAAO,sBACd6I,EAAOmE,WAAWuB,OAAS,WAC3B1F,EAAOmE,WAAWwB,UAAY,KAC9B3F,EAAO8E,YAAc,EACrB9E,EAAO6F,SAAW,EAElB,IAAIG,EAAU3D,EAAMoD,OAAOtD,KAAK,IAAI2B,MACpCkC,EAAQ7O,KAAO,UACf6O,EAAQ7B,WAAWuB,OAAS,WAC5BM,EAAQ7B,WAAWwB,UAAY,KAC/BK,EAAQlB,YAAc,EACtBkB,EAAQH,SAAW,EACnBG,EAAQC,QAAS,EAEjB,IAAIC,EAAQ7D,EAAMoD,OAAOtD,KAAK,IAAI2B,MAClCoC,EAAM/O,KAAO,mBACb+O,EAAM/B,WAAWuB,OAAS,WAC1BQ,EAAM/B,WAAWwB,UAAY,KAC7BO,EAAMpB,YAAc,EACpBoB,EAAML,SAAW,EACjBK,EAAMC,MAAQjB,EAGd7C,EAAM+D,OAAS,IAAItC,KAGnBzB,EAAMgE,OAAS,IAAIvC,KACnB,IAAIwC,EAAUjE,EAAMgE,OAAOC,QAAQnB,SACnCmB,EAAQP,MAAQ,GAChBO,EAAQC,OAAS,GACjB,IAAIxI,EAAYsE,EAAMgE,OAAOG,eAAerB,SAC5CpH,EAAU0I,aAAe,EACzB1I,EAAU2I,YAAc,EACxB3I,EAAU4G,WAAa,EACvB5G,EAAU4I,cAAgB,EAG1BtE,EAAMsE,cAAgB,GACtBtE,EAAMsC,WAAa,K,+BAInB,GAAInM,KAAKP,MAAM2O,WAAW5G,OAAQ,CAChC,GAAIxH,KAAKP,MAAM4I,iBAAiBb,QAAUxH,KAAKgK,WAAahK,KAAKP,MAAM4I,iBAAiBb,OACtFsC,KAAgBuE,OAAQ,EACxBvE,KAAgBwE,gBAAkB,EAClCtO,KAAKgK,UAAYhK,KAAKgK,SACtBhK,KAAKiK,mBACA,GAAKjK,KAAKP,MAAM4I,iBAAiBb,QAAUxH,KAAKgK,WAAahK,KAAKP,MAAM4I,iBAAiBb,QAKzF,GAAIxH,KAAKP,MAAM2O,WAAW5G,OAAQ,CAEvC,IAAIsD,EAAQ9K,KAAKwL,aACjBxL,KAAK6J,MAAMnG,KAAOoH,EAAM,GACxB,IAAIG,EAAUH,EAAM,GACpB9K,KAAKgM,MAAMJ,SAAWX,EAAU,OAAIpJ,EACpC7B,KAAKgM,MAAMF,KAAKS,cAAgBtB,EAAU,GAAM,QAVhDnB,KAAgBuE,OAAQ,EACxBvE,KAAgBwE,gBAAkB,GAClCtO,KAAKgK,UAAYhK,KAAKgK,SACtBhK,KAAKiK,cASPjK,KAAKP,MAAMT,iBAAiB,UAE9B,OACE,kBAACoH,GAAD,CAAYO,MAAO,6CAA8CO,OAAQ,kBAACqH,GAAA,EAAD,OACvE,yBAAKlN,UAAW,eAAgBmN,IAAK,sB,GAvMnBlN,IAAMC,WAuNhC,IAAMW,GAAqB,CACzBlD,oBAGamD,gBAdf,SAAyBtC,GACvB,MAAO,CACL0H,KAAM1H,EAAM0H,KACZG,MAAO7H,EAAM6H,MACbE,QAAS/H,EAAM+H,QACfwG,WAAYvO,EAAMuO,WAClB/F,iBAAkBxI,EAAMwI,oBAU1BnG,GAFaC,CAGbyH,I,UCtOa,SAAS6E,GAAIhP,GAC1B,IAAMgB,EAAUiO,cAAW,SAAAC,GAAK,MAAK,CACnCC,IAAK,CACHC,SAAU,WACVC,MAAOrP,EAAMqP,MAAMC,WAAa,KAChCC,IAAKvP,EAAMuP,IAAID,WAAa,KAC5BhB,OAAQ,MALIW,GAShB,OACE,yBAAKrN,UAAWZ,EAAQmO,KAAK,kBAAC,cAAD,KAAa,IAAMnP,EAAM+B,SAAW,MCiDtDyN,OAxDf,WACE,OACE,kBAAC3J,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGnE,UAAW,eACrC,kBAACiE,EAAA,EAAD,CAAMjB,MAAI,EAACqB,GAAI,IACb,kBAACwJ,GAAA,EAAD,CAAO7N,UAAW,eAChB,kBAAC8D,EAAA,EAAD,CAAYyB,QAAS,KAAMuI,MAAO,SAAU9J,cAAc,GAA1D,8CAC6C,6BAD7C,SAGA,kBAACF,EAAA,EAAD,CAAYyB,QAAS,KAAMuI,MAAO,SAAU9J,cAAc,GAA1D,wBAGA,kBAACF,EAAA,EAAD,oJAEwC,+CAFxC,kEAIE,kBAACiK,GAAA,EAAD,CAAM/N,UAAW,OAAQO,OAAO,SAASyN,KAAM,8DAA/C,wBAJF,uEAQE,kBAAC,cAAD,KAAa,OARf,QAQuC,kBAAC,cAAD,KAAa,OARpD,UASE,kBAAC,aAAD,KAAY,4BACZ,kBAAC,aAAD,KAAY,4BAVd,SAWQ,kBAAC,cAAD,KAAa,OAXrB,QAW6C,kBAAC,cAAD,KAAa,OAX1D,iDAaE,kBAAC,aAAD,KAAY,sBACZ,kBAAC,aAAD,KAAY,uBAdd,yCAgBE,kBAAC,aAAD,KAAY,gDACZ,kBAACZ,GAAD,CAAKK,OAAQ,GAAIE,KAAM,GAAvB,KACA,kBAAC,aAAD,KAAY,gDACZ,kBAACP,GAAD,CAAKK,OAAQ,GAAIE,KAAM,GAAvB,KAnBF,8HAsBE,kBAAC,aAAD,KACG,8IAvBL,qIA2B4B,+CA3B5B,qFA6BE,6BA7BF,uJAmCJ,kBAAC1J,EAAA,EAAD,CAAMjB,MAAI,EAACqB,GAAI,IACb,kBAAC,GAAD,OAEF,kBAACJ,EAAA,EAAD,CAAMjB,MAAI,EAACqB,GAAI,IACb,kBAAC,GAAD,SClDF4J,G,2MACJpJ,WAAa,SAACN,EAAW7G,EAAKJ,GAC5B,EAAKc,MAAMX,KAAKC,EAAK6G,EAAWjH,GAChC,EAAKc,MAAMT,iBAAiBL,I,wEAGpB,IAAD,OACP,OACE,kBAACyH,GAAD,CAAYO,MAAO,sBAAuBO,OAAQ,kBAACI,EAAA,EAAD,OAChD,kBAAChC,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAMjB,MAAI,EAACqB,GAAI,GACb,kBAAC,EAAD,CACElF,MAAO,SACP7B,KAAM,UACNiH,UAAW,SACXlH,MAAOsB,KAAKP,MAAM4C,OAAOkN,QACzB1Q,YAAamB,KAAKP,MAAMZ,YACxBN,aAAcyB,KAAKP,MAAMlB,aACzBS,iBAAkBgB,KAAKP,MAAMT,iBAC7BkH,WAAYlG,KAAKkG,WACjBnH,IAAK,IACL4B,KAAM,kBAAC8G,EAAA,EAAD,SAGV,kBAACnC,EAAA,EAAD,CAAMjB,MAAI,EAACqB,GAAI,GACb,kBAAC,EAAD,CACElF,MAAO,UACP7B,KAAM,UACNiH,UAAW,UACXlH,MAAOsB,KAAKP,MAAMmI,QAAQ2H,QAC1B1Q,YAAamB,KAAKP,MAAMZ,YACxBN,aAAcyB,KAAKP,MAAMlB,aACzBS,iBAAkBgB,KAAKP,MAAMT,iBAC7BkH,WAAYlG,KAAKkG,WACjBnH,IAAK,IACL4B,KAAM,kBAACkH,EAAA,EAAD,SAGV,kBAACvC,EAAA,EAAD,CAAMjB,MAAI,EAACqB,GAAI,GACb,kBAACoC,EAAA,EAAD,CAAaC,UAAU,WAAW1G,UAAW,4BAC3C,kBAAC2G,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,QACE,kBAACC,EAAA,EAAD,CAAUC,QAASpI,KAAKP,MAAM4I,iBAAiBkH,QAASjP,SAAU,kBAAM,EAAKb,MAAMR,uBAAuB,cAE5GuB,MAAM,uBAGV,kBAAC8H,EAAA,EAAD,CAAgBtC,OAAO,SAAvB,qE,GAhDc1E,IAAMC,WAiElC,IAAMW,GAAqB,CACzB3D,eACAM,cACAC,OACAE,mBACAC,0BAGakD,gBAhBf,SAAyBtC,GACvB,MAAO,CACLwC,OAAQxC,EAAMwC,OACduF,QAAS/H,EAAM+H,QACfS,iBAAkBxI,EAAMwI,oBAc1BnG,GAFaC,CAGbmN,ICxEIE,G,YACJ,aAAe,IAAD,8BACZ,+CACK3F,MAAQ,KACbC,KAAgBC,mBAAoB,EACpC,EAAKC,UAAW,EAJJ,E,iFAQZhK,KAAKiK,gB,mCAIL,IAAM5H,EAASrC,KAAKP,MAAM4C,OAAOkN,QAC3B3H,EAAU5H,KAAKP,MAAMmI,QAAQ2H,QAW/BrF,EAAIC,EAVSC,GAAoB,CACnCxC,QAASA,EACTiB,UAAW,CACT,CACElK,KAAM,WACN4I,KAAMlF,EACNoG,MAAO,CAAC,UAAW,iBAMrB4B,EAAeH,EAAE,GACjBI,EAAcrG,OAAOD,KAAKqG,GAC1BE,EAAeL,EAAE,GACjBM,EAAevG,OAAOD,KAAKuG,GAAcE,MAAK,SAACC,EAAGC,GACpD,OAAOC,OAAOF,GAAKE,OAAOD,MAExB3G,EAAOwG,EAAaK,OAAOP,GAC3BQ,EAAQ,GACRpH,EAAO,GAIXM,EAAKI,SAAQ,SAACC,EAAM+E,GAEhB1F,GAD+B,IAA7BnB,KAAKgC,KAAKqG,OAAOvG,IACZkG,EAGAF,EAET,IAAIU,EAAY,GAChBA,EAAS,GAASH,OAAOvG,GACzB0G,EAAU,YAAcrH,EAAKW,GAAM,YACnC0G,EAAU,YAAcxI,KAAKuC,MAAMqF,EAAc9H,EAAQ2I,SAAS3G,EAAM,KAAOuD,GAC1EkD,EAAM,GAGTC,EAAU,YAAcD,EAAM1B,EAAQ,GAAG,YAAc2B,EAAU,YAFjEA,EAAU,YAAcA,EAAU,YAIpCD,EAAMnB,KAAKoB,MAEb,IAAIE,GAAU,EAId,OAH4B,IAAxBT,EAAarG,SACf8G,GAAU,GAEL,CAACH,EAAOG,K,oCAMfnB,KAAiBoB,MACblL,KAAKP,MAAM4I,iBAAiBkH,QAC9BzF,KAAmBqB,MAEnBrB,KAAiBqB,MAKnBnL,KAAK6J,MAAQC,KAAe9J,KAAKoL,KAAKqE,cAAenE,MACrD,IAAIzB,EAAQ7J,KAAK6J,MACjBA,EAAM0B,cAAgB,WAGtB,IAAIT,EAAQ9K,KAAKwL,aACjB3B,EAAMnG,KAAOoH,EAAM,GACnB,IAAIG,EAAUH,EAAM,GAGhBW,EAAQ5B,EAAM6B,MAAM/B,KAAK,IAAI2B,MACjCG,EAAMrG,GAAK,QACXqG,EAAME,WAAWC,SAAW,KAC5BH,EAAMI,SAASC,KAAKC,gBAAkB,EAEtC/L,KAAKgM,MAAQP,EAAMQ,WAAWC,SAC9BlM,KAAKgM,MAAMJ,SAAWX,EAAU,OAAIpJ,EACpC7B,KAAKgM,MAAMxL,MAAM2L,WAAa,EAC9BnM,KAAKgM,MAAMxL,MAAM4L,SAAW,GAC5BpM,KAAKgM,MAAMF,KAAKO,OAASvC,KAAc,QACvC9J,KAAKgM,MAAMF,KAAKQ,YAAc,EAC9BtM,KAAKgM,MAAMF,KAAKS,cAAgB,GACnB1C,EAAM2C,MAAM7C,KAAK,IAAI2B,MAC3BO,SAASC,KAAKC,gBAAkB,EAEvC,IAAIU,EAAW,IAAI3C,KACf4C,EAAS7C,EAAM2C,MAAM7C,KAAK,IAAI2B,MAClCoB,EAAOb,SAASC,KAAKa,SAASC,UAAW,EACzCF,EAAOb,SAASgB,KAAKN,cAAgB,EACrCG,EAAOb,SAASgB,KAAKR,OAASI,EAASK,SAAS,GAChDJ,EAAOb,SAASgB,KAAKP,YAAc,EACnCI,EAAOb,SAASkB,UAAW,EAG3B,IAAI2C,EAAa7F,EAAMoD,OAAOtD,KAC5B3J,KAAKP,MAAM4I,iBAAiBkH,QAAU,IAAIjE,KAA6B,IAAIA,MAE7EoE,EAAW/Q,KAAO,uCAClB+Q,EAAW/D,WAAWuB,OAAS,WAC/BwC,EAAW/D,WAAWwB,UAAY,KAClCuC,EAAWpD,YAAc,EACzBoD,EAAWtC,YAAc,EACzBsC,EAAWrC,SAAW,EACjBrN,KAAKP,MAAM4I,iBAAiBkH,UAC/BG,EAAWpC,QAAQX,SAASY,MAAQzD,KAAgB,IACpD4F,EAAWtC,YAAc,GAG3B,IAAImC,EAAU1F,EAAMoD,OAAOtD,KAAK,IAAI2B,MACpCiE,EAAQ5Q,KAAO,uBACf4Q,EAAQ5D,WAAWuB,OAAS,WAC5BqC,EAAQ5D,WAAWwB,UAAY,KAC/BoC,EAAQjD,YAAc,EACtBiD,EAAQlC,SAAW,EAEnB,IAAIsC,EAAM9F,EAAMoD,OAAOtD,KAAK,IAAI2B,MAChCqE,EAAIhR,KAAO,mBACXgR,EAAIhE,WAAWuB,OAAS,WACxByC,EAAIhE,WAAWwB,UAAY,KAC3BwC,EAAIrD,YAAc,EAClBqD,EAAItC,SAAW,EACfsC,EAAIhC,MAAQjB,EAGZ7C,EAAM+D,OAAS,IAAItC,KAGnBzB,EAAMgE,OAAS,IAAIvC,KACnB,IAAIwC,EAAUjE,EAAMgE,OAAOC,QAAQnB,SACnCmB,EAAQP,MAAQ,GAChBO,EAAQC,OAAS,GACjB,IAAIxI,EAAYsE,EAAMgE,OAAOG,eAAerB,SAC5CpH,EAAU0I,aAAe,EACzB1I,EAAU2I,YAAc,EACxB3I,EAAU4G,WAAa,EACvB5G,EAAU4I,cAAgB,EAG1BtE,EAAMsE,cAAgB,GACtBtE,EAAMsC,WAAa,K,+BAInB,GAAInM,KAAKP,MAAM2O,WAAWmB,QAAS,CACjC,GAAIvP,KAAKP,MAAM4I,iBAAiBkH,SAAWvP,KAAKgK,WAAahK,KAAKP,MAAM4I,iBAAiBkH,QACvFzF,KAAgBuE,OAAQ,EACxBvE,KAAgBwE,gBAAkB,EAClCtO,KAAKgK,UAAYhK,KAAKgK,SACtBhK,KAAKiK,mBACA,GAAKjK,KAAKP,MAAM4I,iBAAiBkH,SAAWvP,KAAKgK,WAAahK,KAAKP,MAAM4I,iBAAiBkH,SAK1F,GAAIvP,KAAKP,MAAM2O,WAAWmB,QAAS,CAExC,IAAIzE,EAAQ9K,KAAKwL,aACjBxL,KAAK6J,MAAMnG,KAAOoH,EAAM,GACxB,IAAIG,EAAUH,EAAM,GACpB9K,KAAKgM,MAAMJ,SAAWX,EAAU,OAAIpJ,EACpC7B,KAAKgM,MAAMF,KAAKS,cAAgBtB,EAAU,GAAM,QAVhDnB,KAAgBuE,OAAQ,EACxBvE,KAAgBwE,gBAAkB,GAClCtO,KAAKgK,UAAYhK,KAAKgK,SACtBhK,KAAKiK,cASPjK,KAAKP,MAAMT,iBAAiB,WAE9B,OACE,kBAACoH,GAAD,CAAYO,MAAO,8CAA+CO,OAAQ,kBAACqH,GAAA,EAAD,OACxE,yBAAKlN,UAAW,eAAgBmN,IAAK,uB,GAtLlBlN,IAAMC,WAqMjC,IAAMW,GAAqB,CACzBlD,oBAGamD,gBAbf,SAAyBtC,GACvB,MAAO,CACLwC,OAAQxC,EAAMwC,OACduF,QAAS/H,EAAM+H,QACfwG,WAAYvO,EAAMuO,WAClB/F,iBAAkBxI,EAAMwI,oBAU1BnG,GAFaC,CAGbqN,IC1KapN,OAtCf,WACE,OACE,kBAACkD,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGnE,UAAW,eACrC,kBAACiE,EAAA,EAAD,CAAMjB,MAAI,EAACqB,GAAI,IACb,kBAACwJ,GAAA,EAAD,CAAO7N,UAAW,eAChB,kBAAC8D,EAAA,EAAD,CAAYyB,QAAS,KAAMuI,MAAO,SAAU9J,cAAc,GAA1D,8CAC6C,6BAD7C,SAGA,kBAACF,EAAA,EAAD,CAAYyB,QAAS,KAAMuI,MAAO,SAAU9J,cAAc,GAA1D,yBAGA,kBAACF,EAAA,EAAD,+LAGE,kBAAC,aAAD,KACG,sGAJL,gMAQE,kBAACiK,GAAA,EAAD,CAAM/N,UAAW,OAAQO,OAAO,SAASyN,KAAM,sGAA/C,UARF,kEAUwE,kBAAC,cAAD,KAAa,YAVrF,8BAW+B,kBAAC,cAAD,KAAa,gBAX5C,kEAY2B,kBAAC,cAAD,KAAa,iBAZxC,mCAaE,kBAAC,cAAD,KAAa,kCAbf,OAiBJ,kBAAC/J,EAAA,EAAD,CAAMjB,MAAI,EAACqB,GAAI,IACb,kBAAC,GAAD,OAEF,kBAACJ,EAAA,EAAD,CAAMjB,MAAI,EAACqB,GAAI,IACb,kBAAC,GAAD,SC7BakK,G,YACnB,aAAe,IAAD,8BACZ,+CACK/F,MAAQ,KACbC,KAAgBC,mBAAoB,EAHxB,E,iFAOZ/J,KAAKiK,gB,mCAeL,OARiBG,GAAoB,CACnCxC,QAJc,GAKdiI,iBAAkBtI,EAClBoB,UAAU,EACVC,YAAa,KACbH,MAAO,CAAC,YACRI,UAAW,CAAC,CAAClK,KAAM,WAAYmR,QARpB,GAQmCrH,MAAO,S,oCAQvDqB,KAAiBoB,MACjBpB,KAAiBqB,MAIjB,IAAItB,EAAQC,KAAe9J,KAAKoL,KAAKvB,MAAOyB,MAC5CzB,EAAM0B,cAAgB,WAGtB1B,EAAMnG,KAAO1D,KAAKwL,aAGlB,IAAIC,EAAQ5B,EAAM6B,MAAM/B,KAAK,IAAI2B,MACjCG,EAAMrG,GAAK,QACXqG,EAAME,WAAWC,SAAW,KAC5BH,EAAMI,SAASC,KAAKC,gBAAkB,EAEzBlC,EAAM2C,MAAM7C,KAAK,IAAI2B,MAC3BO,SAASC,KAAKC,gBAAkB,EAGvC,IAAIgE,EAASlG,EAAMoD,OAAOtD,KAAK,IAAI2B,MACnCyE,EAAOpR,KAAO,cACdoR,EAAOpE,WAAWuB,OAAS,WAC3B6C,EAAOpE,WAAWwB,UAAY,KAC9B4C,EAAOzC,QAAQX,SAASY,MAAQzD,KAAgB,GAChDiG,EAAOzD,YAAc,EACrByD,EAAO1C,SAAW,EAClB0C,EAAO3C,YAAc,EACrB2C,EAAO1D,OAASvC,KAAc,WAG9BD,EAAM+D,OAAS,IAAItC,KAGnBzB,EAAMgE,OAAS,IAAIvC,KACnB,IAAIwC,EAAUjE,EAAMgE,OAAOC,QAAQnB,SACnCmB,EAAQP,MAAQ,GAChBO,EAAQC,OAAS,GACjB,IAAIxI,EAAYsE,EAAMgE,OAAOG,eAAerB,SAC5CpH,EAAU0I,aAAe,EACzB1I,EAAU2I,YAAc,EACxB3I,EAAU4G,WAAa,EACvB5G,EAAU4I,cAAgB,EAG1BtE,EAAMsC,WAAa,K,+BAInB,OACE,kBAAC7G,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGnE,UAAW,eACrC,kBAACiE,EAAA,EAAD,CAAMjB,MAAI,EAACqB,GAAI,IACb,kBAACwJ,GAAA,EAAD,CAAO7N,UAAW,eAChB,kBAAC8D,EAAA,EAAD,CAAYyB,QAAS,KAAMuI,MAAO,SAAU9J,cAAc,GAA1D,gBACe,6BADf,SAGA,kBAACF,EAAA,EAAD,CAAYgK,MAAO,SAAU9J,cAAc,GAA3C,8CAKJ,kBAACC,EAAA,EAAD,CAAMjB,MAAI,EAACqB,GAAI,IACb,kBAACU,GAAD,CAAYO,MAAO,cAAeO,OAAQ,kBAACqH,GAAA,EAAD,OACxC,yBAAKlN,UAAU,eAAemN,IAAK,iB,GA7FPlN,IAAMC,WCRzByO,G,iLAEjB,OACE,kBAAC1K,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGnE,UAAW,eACrC,kBAACiE,EAAA,EAAD,CAAMjB,MAAI,EAACqB,GAAI,IACb,kBAACwJ,GAAA,EAAD,CAAO7N,UAAW,eAChB,kBAAC8D,EAAA,EAAD,CAAYyB,QAAS,KAAMuI,MAAO,SAAU9J,cAAc,GAA1D,2BAC0B,6BAD1B,IACgC,8BAEhC,kBAACF,EAAA,EAAD,CAAYyB,QAAS,KAAMuI,MAAO,SAAU9J,cAAc,GACxD,kBAAC+J,GAAA,EAAD,CAAM/N,UAAW,OAAQO,OAAO,SAASyN,KAAM,yBAA/C,wCAGA,6BACA,kBAACD,GAAA,EAAD,CAAM/N,UAAW,OAAQO,OAAO,SAASyN,KAAM,yBAA/C,oCAGA,6BACA,kBAACD,GAAA,EAAD,CAAM/N,UAAW,OAAQO,OAAO,SAASyN,KAAM,yBAA/C,8B,GAlBuB/N,IAAMC,W,SCCtB0O,G,YACnB,WAAYxQ,GAAQ,IAAD,8BACjB,4CAAMA,KAqLRyQ,oBAAsB,SAACC,EAAOvO,EAAQwO,GAIpC,GAAU,IAANA,EACF,OAAO,EAKT,IADA,IAAIC,EAAgB,GACX9G,EAAE,EAAGA,EAAE,EAAK+G,QAAQnM,OAAQoF,IAAI,CACvC,IAAK,IAAIgH,EAAE,EAAGA,EAAE,EAAKD,QAAQ/G,GAAGpF,OAAQoM,IACtCF,EAAc1G,KAAK,EAAK6G,mBAAmBL,EAAOvO,EAAQ,EAAK0O,QAAQ/G,GAAGgH,EAAE,GAAI,EAAKD,QAAQ/G,GAAGgH,KAG9F,EAAKD,QAAQ/G,GAAGpF,OAAS,GAC3BkM,EAAc1G,KAAK,EAAK6G,mBAAmBL,EAAOvO,EAAQ,EAAK0O,QAAQ/G,GAAG,EAAK+G,QAAQ/G,GAAGpF,OAAO,GAAI,EAAKmM,QAAQ/G,GAAG,KAGzH,GAAI,EAAKkH,MAAMtM,OAAS,EAAG,CACzB,IAAK,IAAIoF,EAAI,EAAGA,EAAI,EAAKkH,MAAMtM,OAAQoF,IACrC8G,EAAc1G,KAAK,EAAK6G,mBAAmBL,EAAOvO,EAAQ,EAAK6O,MAAMlH,EAAI,GAAI,EAAKkH,MAAMlH,KAE1F8G,EAAc1G,KAAK,EAAK6G,mBAAmBL,EAAOvO,EAAQ,EAAK6O,MAAM,EAAKA,MAAMtM,OAAO,GAAI,EAAKsM,MAAM,KAOxG,IAHA,IAAIC,EAAU,IACVC,GAAyB,EACzBC,EAAO,EACFrH,EAAE,EAAGA,EAAE8G,EAAclM,OAAQoF,IAChC8G,EAAc9G,KAChBqH,EAAOP,EAAc9G,GAAGsH,OAAOV,GAAOlL,KAC3ByL,IACTC,EAAwBpH,EACxBmH,EAAUE,GAIhB,GAAID,GAAyB,EAAG,CAE9B,EAAKG,SAASX,EAAOE,EAAcM,IACnC,EAAKI,eACL,IAAIvJ,EAAS,IAAIzC,EAAO,KAAM,OAE5ByC,EADEmJ,GAAyB,EAAKK,QAAQ7M,OAC/B,EAAK8M,cAAcN,EAAwB,EAAKK,QAAQ7M,QAGxD,EAAK6M,QAAQL,MAGtBnJ,EAAS,EAAKyJ,cAAcN,EAAwB,EAAKK,QAAQ7M,OAAS,IAE5E,EAAK+M,WAAWb,EAAcM,GAAwB,GACtD,IAAIQ,EAAe,EAAKC,QAAQf,EAAcM,GAAuBE,OAAOV,GAC1E3I,GAAQ6J,MAAMhB,EAAcM,IAC9B,GAAI,EAAKW,WAIP,GAHAC,YAAY,WACV,EAAKrB,oBAAoBG,EAAcM,GAAwBQ,EAAcf,EAAI,KAChF,EAAKvQ,MAAM2R,YACV,EAAKC,WAAY,CACnB,IAAIC,EAAe,EAAKC,QAAQtB,EAAcM,GAAuBE,OAAOV,GAC1E3I,EAAO,EAAK3H,MAAM+R,iBAAiBP,MAAMhB,EAAcM,IACzDY,YAAa,WACX,EAAKrB,oBAAoBG,EAAcM,GAAwBe,EAActB,EAAI,KAChF,EAAKvQ,MAAM2R,kBAKhB,GADA,EAAKtB,oBAAoBG,EAAcM,GAAwBQ,EAAcf,EAAI,GAC7E,EAAKqB,WAAY,CACnB,IAAIC,EAAe,EAAKC,QAAQtB,EAAcM,GAAuBE,OAAOV,GAC1E3I,EAAO,EAAK3H,MAAM+R,iBAAiBP,MAAMhB,EAAcM,IACzD,EAAKT,oBAAoBG,EAAcM,GAAwBe,EAActB,EAAI,MA/PtE,EA+QnByB,QAAU,SAACrT,GACT,IAAIsT,EAAO,EAAKC,IAAIC,wBACpB,GAAK,EAAKC,SAAY,EAAKC,SAItB,GAAI,EAAKA,SAAU,CAAC,IAAD,EAClBC,EAAO,EAAKC,YAAY,IAAIrN,EAAOvG,EAAM8D,EAAIwP,EAAKO,KAAM7T,EAAMmG,EAAImN,EAAK9C,KAAM,EAAKsD,WAAY,EAAKC,MAAO,EAAKC,WAAW,GAC9H,EAAKlC,QAAQ3G,KAAKwI,EAAK,KACvB,IAAKnB,SAAQrH,KAAb,qBAAqBwI,EAAK,KAC1B,EAAKM,YAAYC,UAAY,sBAAwB,EAAKpC,QAAQnM,OAAO4K,WACzE,EAAK4D,UAAUD,UAAY,oBAAsB,EAAK1B,QAAQ7M,OAAO4K,gBAGhE,EAAK6D,mBACR,EAAKtC,QAAQ3G,KAAK,IAClB,EAAKiJ,kBAAmB,GAE1B,EAAKtC,QAAQ,EAAKA,QAAQnM,OAAS,GAAGwF,KAAK,IAAI5E,EAAOvG,EAAM8D,EAAIwP,EAAKO,KAAM7T,EAAMmG,EAAImN,EAAK9C,MACtF,EAAKsB,QAAQ,EAAKA,QAAQnM,OAAS,GAAGA,OAAS,IACjD,EAAK6M,QAAQrH,KAAK,EAAKkJ,gBAAgB,EAAKvC,QAAQ,EAAKA,QAAQnM,OAAS,GAAG,EAAKmM,QAAQ,EAAKA,QAAQnM,OAAS,GAAGA,OAAS,GAC1H,EAAKmM,QAAQ,EAAKA,QAAQnM,OAAS,GAAG,EAAKmM,QAAQ,EAAKA,QAAQnM,OAAS,GAAGA,OAAS,KACvF,EAAKwO,UAAUD,UAAY,oBAAsB,EAAK1B,QAAQ7M,OAAO4K,YAEvE,EAAK+D,YArBL,EAAKC,OAAOC,IAAIxU,EAAM8D,EAAIwP,EAAKO,KAAM7T,EAAMmG,EAAImN,EAAK9C,KACpD,EAAK8D,QAnRU,EA2SnBG,SAAW,SAACzU,GACN,EAAK0T,WACc,IAAf,EAAKK,OAAe/T,EAAM0U,OAAS,IACvC,EAAKX,OAAS/T,EAAM0U,OAAS,IAC7B,EAAKC,aAAaT,UAAY,2BAA6B,EAAKR,SAC9D,SAAS,EAAKK,MAAMxD,WAAW,OAAO,EAAKuD,WAAWvD,WAAW,YAC3D,EAAKjK,MAAO,EAAK0N,WAAW,IAAIjQ,KAAKa,IAAI,IAAM,GAAI2L,WAAW,QAAQ,OAC9E,EAAK+D,SAGL,EAAKM,eACkB,IAAnB,EAAKC,WAAmB7U,EAAM0U,OAAS,IAC3C,EAAKG,WAAa7U,EAAM0U,OAAS,IACjC,EAAKI,aAAaZ,UAAY,wBAA0B,EAAKU,aAAe,SAAS,EAAKC,UAAUtE,WAAW,IAAM,OACrH,EAAK+D,UAzTQ,EA8TnBS,YAAc,SAAC/U,GACb,IAAM,EAAKyT,SAAY,EAAKC,SAAW,CACrC,IAAIJ,EAAO,EAAKC,IAAIC,wBACpB,EAAKwB,KAAKR,IAAIxU,EAAM8D,EAAIwP,EAAKO,KAAO7T,EAAMmG,EAAImN,EAAK9C,KAC9C,EAAKsC,WACR,EAAKwB,SAnUQ,EAwUnBW,UAAY,SAACjV,GACW,KAAlBA,EAAMkV,UACR,EAAKzB,SAAW,EAAKA,QACjB,EAAKA,UACP,EAAKW,kBAAmB,EACxB,EAAKE,QAEF,EAAKb,UACJ,EAAK3B,QAAQnM,OAAS,IACpB,EAAKmM,QAAQ,EAAKA,QAAQnM,OAAS,GAAGA,OAAS,GACjD,EAAK6M,QAAQrH,KAAK,EAAKkJ,gBAAgB,EAAKvC,QAAQ,EAAKA,QAAQnM,OAAS,GAAG,GAC3E,EAAKmM,QAAQ,EAAKA,QAAQnM,OAAS,GAAG,EAAKmM,QAAQ,EAAKA,QAAQnM,OAAS,GAAGA,OAAS,KACvF,EAAKwO,UAAUD,UAAY,oBAAsB,EAAK1B,QAAQ7M,OAAO4K,WACrE,EAAK0D,YAAYC,UAAY,sBAAwB,EAAKpC,QAAQnM,OAAO4K,YACf,IAAjD,EAAKuB,QAAQ,EAAKA,QAAQnM,OAAS,GAAGA,OAC/C,EAAKsO,YAAYC,UAAY,sBAAwB,EAAKpC,QAAQnM,OAAO4K,WAGzE,EAAKuB,QAAQqD,OAGjB,EAAKb,SAGa,KAAlBtU,EAAMkV,UACJ,EAAKE,UACP,EAAKnD,MAAQ,GACb,EAAKQ,cAAgB,KAGrB,EAAKR,MAAM9G,KAAK,IAAI5E,EAAO,EAAG,GAAI,IAAIA,EAAO,EAAG,EAAKgN,IAAIhE,QACvD,IAAIhJ,EAAO,EAAKgN,IAAIxE,MAAO,EAAKwE,IAAIhE,QAAS,IAAIhJ,EAAO,EAAKgN,IAAIxE,MAAO,IAC1E,EAAK0D,cAActH,KAAK,IAAI5E,EAAO,EAAG,GAAI,IAAIA,EAAO,EAAG,GACtD,IAAIA,GAAQ,EAAG,GAAI,IAAIA,EAAO,GAAI,KAEtC,EAAK6O,UAAY,EAAKA,SACtB,EAAKC,UAAUnB,UAAY,eAAiB,EAAKkB,SAAW,KAAO,OACnE,EAAKd,QAEe,KAAlBtU,EAAMkV,UACJ,EAAKxB,WACP,EAAKM,WAAajQ,KAAKa,GAAK,GAC5B,EAAK+P,aAAaT,UAAY,2BAA6B,EAAKR,SAC9D,SAAS,EAAKK,MAAMxD,WAAW,OAAO,EAAKuD,WAAWvD,WAAW,YAC3D,EAAKjK,MAAO,EAAK0N,WAAW,IAAIjQ,KAAKa,IAAI,IAAM,GAAI2L,WAAW,QAAQ,QAEhF,EAAK+D,QAEe,KAAlBtU,EAAMkV,UACJ,EAAKxB,UACP,EAAKI,YAAc,GACnB,EAAKa,aAAaT,UAAY,2BAA6B,EAAKR,SAC9D,SAAS,EAAKK,MAAMxD,WAAW,OAAO,EAAKuD,WAAWvD,WAAW,YAC3D,EAAKjK,MAAO,EAAK0N,WAAW,IAAIjQ,KAAKa,IAAI,IAAM,GAAI2L,WAAW,QAAQ,SAG9E,EAAK+E,iBACL,EAAKC,mBAAmBrB,UAAY,oBAAsB,EAAKoB,eAAe/E,YAEhF,EAAK+D,QAEe,KAAlBtU,EAAMkV,UACJ,EAAKxB,WACP,EAAKM,WAAajQ,KAAKa,GAAK,GAC5B,EAAK+P,aAAaT,UAAY,2BAA6B,EAAKR,SAC9D,SAAS,EAAKK,MAAMxD,WAAW,OAAO,EAAKuD,WAAWvD,WAAW,YAC3D,EAAKjK,MAAO,EAAK0N,WAAW,IAAIjQ,KAAKa,IAAI,IAAM,GAAI2L,WAAW,QAAQ,QAEhF,EAAK+D,QAEe,KAAlBtU,EAAMkV,UACJ,EAAKxB,SACH,EAAKI,YAAc,KACrB,EAAKA,YAAc,GACnB,EAAKa,aAAaT,UAAY,2BAA6B,EAAKR,SAC9D,SAAS,EAAKK,MAAMxD,WAAW,OAAO,EAAKuD,WAAWvD,WAAW,YAC3D,EAAKjK,MAAO,EAAK0N,WAAW,IAAIjQ,KAAKa,IAAI,IAAM,GAAI2L,WAAW,QAAQ,QAIpD,IAAxB,EAAK+E,iBACP,EAAKA,iBACL,EAAKC,mBAAmBrB,UAAY,oBAAsB,EAAKoB,eAAe/E,YAGlF,EAAK+D,QAEe,KAAlBtU,EAAMkV,UACJ,EAAKxB,UACP,EAAKI,WAAa,GAClB,EAAKC,MAAQ,EACb,EAAKC,UAAY,EACjB,EAAKW,aAAaT,UAAY,2BAA6B,EAAKR,SAC9D,SAAS,EAAKK,MAAMxD,WAAW,OAAO,EAAKuD,WAAWvD,WAAW,YAC3D,EAAKjK,MAAO,EAAK0N,WAAW,IAAIjQ,KAAKa,IAAI,IAAM,GAAI2L,WAAW,QAAQ,SAG9E,EAAK+E,eAAiB,EACtB,EAAKC,mBAAmBrB,UAAY,oBAAsB,EAAKoB,eAAe/E,WAC9E,EAAKsE,UAAY,GACjB,EAAKC,aAAaZ,UAAY,wBAA0B,EAAKU,aAAe,SAAS,EAAKC,UAAUtE,WAAW,IAAM,QAEvH,EAAK+D,QAEe,KAAlBtU,EAAMkV,UACR,EAAKpD,QAAU,GACf,EAAKU,QAAU,GACf,EAAKyB,YAAYC,UAAY,sBAAwB,EAAKpC,QAAQnM,OAAO4K,WACzE,EAAK4D,UAAUD,UAAY,oBAAsB,EAAK1B,QAAQ7M,OAAO4K,WACrE,EAAK+D,QAEe,KAAlBtU,EAAMkV,UACR,EAAKjC,YAAc,EAAKA,WACxB,EAAKuC,eAAetB,UAAY,oBAAsB,EAAKjB,WAAa,KAAO,OAC/E,EAAKqB,QAEe,KAAlBtU,EAAMkV,UACR,EAAKO,aAAe,EAAKA,YACzB,EAAKC,YAAYxB,UAAY,yBAA2B,EAAKuB,YAAc,KAAO,QAC9E,EAAKhC,SAAc,EAAK3B,QAAQnM,OAAS,GAAQ,EAAKmM,QAAQ,EAAKA,QAAQnM,OAAS,GAAGA,OAAS,IAClG,EAAKmM,QAAQqD,MACb,EAAKQ,QAAU,EAAKA,QAEtB,EAAKrB,QAEe,KAAlBtU,EAAMkV,UACR,EAAKxB,UAAY,EAAKA,SACtB,EAAKiB,aAAaT,UAAY,2BAA6B,EAAKR,SAC9D,SAAS,EAAKK,MAAMxD,WAAW,OAAO,EAAKuD,WAAWvD,WAAW,YAC3D,EAAKjK,MAAO,EAAK0N,WAAW,IAAIjQ,KAAKa,IAAI,IAAM,GAAI2L,WAAW,QAAQ,OAC9E,EAAK+D,QAEe,KAAlBtU,EAAMkV,UACR,EAAKN,cAAgB,EAAKA,aAC1B,EAAKE,aAAaZ,UAAY,wBAA0B,EAAKU,aAAe,SAAS,EAAKC,UAAUtE,WAAW,IAAM,OACrH,EAAK+D,QAEe,KAAlBtU,EAAMkV,UACR,EAAKpC,WAAa,EAAKA,UACvB,EAAK8C,cAAc1B,UAAY,oBAAsB,EAAKpB,UAAY,KAAO,OAC7E,EAAKwB,QAEe,KAAlBtU,EAAMkV,SACJ,EAAKpC,WACP,EAAKwB,QAtdT,EAAKjT,MAAQ,CACX+R,gBAAiB,KACjBJ,WAAY,KAEd,EAAKuB,OAAS,IAAIhO,EAAO,KAAM,MAC/B,EAAKyO,KAAO,IAAIzO,EAAO,KAAM,MAC7B,EAAKkN,SAAU,EACf,EAAK3B,QAAU,GACf,EAAKU,QAAU,GACf,EAAK4C,UAAW,EAChB,EAAKhD,KAAO,EACZ,EAAKkD,eAAiB,EACtB,EAAK/C,aAAe,EACpB,EAAKU,YAAa,EAClB,EAAKwC,aAAc,EACnB,EAAKE,QAAS,EACd,EAAKjC,UAAW,EAChB,EAAKU,kBAAmB,EACxB,EAAKQ,cAAe,EACpB,EAAKd,WAAa,GAClB,EAAKC,MAAQ,EACb,EAAKC,UAAY,EACjB,EAAKa,UAAY,GACjB,EAAK/B,WAAY,EAzBA,E,iFA6BjBtR,KAAK+R,IAAMsC,SAASC,eAAe,UACnCtU,KAAKuU,IAAMvU,KAAK+R,IAAIyC,WAAW,MAE/BxU,KAAKyQ,MAAQ,CAAC,IAAI1L,EAAO,EAAG,GAAI,IAAIA,EAAO,EAAG/E,KAAK+R,IAAIhE,QACrD,IAAIhJ,EAAO/E,KAAK+R,IAAIxE,MAAOvN,KAAK+R,IAAIhE,QAAS,IAAIhJ,EAAO/E,KAAK+R,IAAIxE,MAAO,IAC1EvN,KAAKiR,cAAgB,CAAC,IAAIlM,EAAO,EAAG,GAAI,IAAIA,EAAO,EAAG,GACpD,IAAIA,GAAQ,EAAG,GAAI,IAAIA,EAAO,GAAI,IAEpC/E,KAAK+R,IAAI0C,iBAAiB,YAAazU,KAAK6R,SAC5C7R,KAAK+R,IAAI0C,iBAAiB,YAAazU,KAAKuT,aAC5Cc,SAASI,iBAAiB,UAAWzU,KAAKyT,WAC1CY,SAASI,iBAAiB,QAASzU,KAAKiT,UAExCjT,KAAK+T,mBAAqBM,SAASC,eAAe,kBAClDtU,KAAKyS,YAAc4B,SAASC,eAAe,WAC3CtU,KAAK2S,UAAY0B,SAASC,eAAe,SACzCtU,KAAK6T,UAAYQ,SAASC,eAAe,SACzCtU,KAAK0U,SAAWL,SAASC,eAAe,QACxCtU,KAAKgU,eAAiBK,SAASC,eAAe,cAC9CtU,KAAKkU,YAAcG,SAASC,eAAe,WAC3CtU,KAAKmT,aAAekB,SAASC,eAAe,YAC5CtU,KAAKsT,aAAee,SAASC,eAAe,YAC5CtU,KAAKoU,cAAgBC,SAASC,eAAe,aAE7CtU,KAAK+T,mBAAmBrB,UAAY,oBAAsB1S,KAAK8T,eAAe/E,WAC9E/O,KAAKyS,YAAYC,UAAY,sBAAwB1S,KAAKsQ,QAAQnM,OAAO4K,WACzE/O,KAAK2S,UAAUD,UAAY,oBAAsB1S,KAAKgR,QAAQ7M,OAAO4K,WACrE/O,KAAK6T,UAAUnB,UAAY,eAAiB1S,KAAK4T,SAAW,KAAO,OACnE5T,KAAK0U,SAAShC,UAAY,mBAAqB1S,KAAK+Q,aAAahC,WACjE/O,KAAKgU,eAAetB,UAAY,oBAAsB1S,KAAKyR,WAAa,KAAO,OAC/EzR,KAAKkU,YAAYxB,UAAY,yBAA2B1S,KAAKiU,YAAc,KAAO,OAClFjU,KAAKmT,aAAaT,UAAY,2BAA6B1S,KAAKkS,SAC9D,SAASlS,KAAKuS,MAAMxD,WAAW,OAAO/O,KAAKsS,WAAWvD,WAAW,YAC3D/O,KAAK8E,MAAO9E,KAAKwS,WAAW,IAAIjQ,KAAKa,IAAI,IAAM,GAAI2L,WAAW,QAAQ,OAC9E/O,KAAKsT,aAAaZ,UAAY,wBAA0B1S,KAAKoT,aAAe,SAASpT,KAAKqT,UAAUtE,WAAW,IAAM,OACrH/O,KAAKoU,cAAc1B,UAAY,oBAAsB1S,KAAKsR,UAAY,KAAO,S,yCAG5D5G,EAAGC,EAAGgK,EAAGzK,GAC1B,IAAI3G,EAAIoH,EAAEkG,OAAOnG,GACbkK,EAAID,EAAE9D,OAAOnG,GACbmK,EAAI3K,EAAE2G,OAAO8D,GAEb/R,EAAK5C,KAAK8E,OAAOvB,EAAEoB,EAAEiQ,EAAEtS,EAAIiB,EAAEjB,EAAEsS,EAAEjQ,IAAMpB,EAAEjB,EAAEuS,EAAElQ,EAAIpB,EAAEoB,EAAEkQ,EAAEvS,GAAI,GAC3DD,EAAS,EAOb,GALEA,EADU,IAARkB,EAAEoB,EACK3E,KAAK8E,OAAO8P,EAAEtS,EAAIuS,EAAEvS,EAAEM,GAAMW,EAAEjB,EAAG,GAGjCtC,KAAK8E,OAAO8P,EAAEjQ,EAAIkQ,EAAElQ,EAAE/B,GAAMW,EAAEoB,EAAG,GAExC/B,GAAM,GAAKA,GAAM,GAAKP,EAAS,EACjC,OAAOsS,EAAEtD,MAAMwD,EAAEC,KAAKlS,M,4BAIpBN,EAAG4H,GACP,OAAO3H,KAAKuC,MAAMxC,EAAEC,KAAKC,IAAI,GAAI0H,IAAI3H,KAAKC,IAAI,GAAI0H,K,8BAK5CQ,EAAGC,GACT,OAAOD,EAAEmG,OAAOlG,EAAEmK,KAAK,EAAEpK,EAAEqK,IAAIpK,O,8BAGzBD,EAAGC,EAAGyF,GACZ1F,EAAEsK,YAEF,IAAIC,EAAO1S,KAAK2S,IAAI3S,KAAKxD,IAAI2L,EAAEqK,IAAIpK,IAAK,GAAI,GACxCwK,EAAO,EACPC,EAAOhF,EACPiF,EAAI1K,EACR,GAAIsK,EAAO,EACTA,GAAQA,MAEL,CACH,IAAIK,EAAOH,EACXA,EAAOC,EACPA,EAAOE,EACPD,EAAI1K,EAAEmK,MAAM,GAEd,IAAIS,EAAMJ,EAAOC,EACbI,EAAI,EAAKD,EAAMA,GAAQ,EAAKN,EAAOA,GACvC,OAAIO,GAAK,EACA,IAAIzQ,EAAO,EAAG,GAGd2F,EAAEoK,KAAKS,GAAKlE,MAAMgE,EAAEP,KAAMS,EAAMN,EAAQ1S,KAAKU,KAAKuS,O,+BAIpD9K,EAAGC,GAAG,IAAD,IACZ3K,KAAKuU,IAAIkB,aACT,EAAAzV,KAAKuU,KAAImB,OAAT,qBAAmBhL,EAAEnH,KACrB,EAAAvD,KAAKuU,KAAIoB,OAAT,qBAAmBhL,EAAEpH,IACrBvD,KAAKuU,IAAIqB,YACT5V,KAAKuU,IAAIsB,YAAc,qBACvB7V,KAAKuU,IAAIlI,W,iCAGA3B,EAAGmK,GAAG,IAAD,EACd7U,KAAKuU,IAAIkB,aACT,EAAAzV,KAAKuU,KAAIuB,IAAT,qBAAgBpL,EAAEnH,GAAlB,QAAqBsR,EAAG,EAAG,EAAItS,KAAKa,MACpCpD,KAAKuU,IAAIwB,UAAY,iBACrB/V,KAAKuU,IAAIyB,S,gCAGDtL,EAAGmK,EAAG3K,GAAG,IAAD,WAChB,EAAAlK,KAAKuU,KAAImB,OAAT,qBAAmBhL,EAAEnH,IACrBsR,EAAEG,YAEF,IAAIiB,GADJpB,EAAIA,EAAEC,KAAK5K,IACDmH,MAAM3G,IAChB,EAAA1K,KAAKuU,KAAIoB,OAAT,qBAAmBM,EAAE1S,IACrB,IAAI2S,EAAQ3T,KAAK4T,MAAMF,EAAEtR,EAAI+F,EAAE/F,EAAGsR,EAAE3T,EAAIoI,EAAEpI,GACtC8T,EAAQ,IAAIrR,EAAOxC,KAAKY,IAAI+S,EAAQ3T,KAAKa,GAAK,GAAIb,KAAK8T,IAAIH,EAAQ3T,KAAKa,GAAK,IAAI0R,KAAK5K,EAAE,GACxFoM,EAAQ,IAAIvR,EAAOxC,KAAKY,IAAI+S,EAAQ3T,KAAKa,GAAK,GAAIb,KAAK8T,IAAIH,EAAQ3T,KAAKa,GAAK,IAAI0R,KAAK5K,EAAE,IAC5F,EAAAlK,KAAKuU,KAAIoB,OAAT,qBAAmBM,EAAEpF,OAAOuF,GAAO7S,KACnC,EAAAvD,KAAKuU,KAAImB,OAAT,qBAAmBO,EAAE1S,KACrB,EAAAvD,KAAKuU,KAAIoB,OAAT,qBAAmBM,EAAEpF,OAAOyF,GAAO/S,M,kCAGzBmH,EAAGmK,EAAGzE,EAAG8F,EAAOK,GAC1BvW,KAAKuU,IAAIkB,YACT,IAAIe,EAAQjU,KAAKa,IAAM,EAAIgN,GAEvBqG,EAAU,EAAE5B,EAAEtS,KAAK8T,IAAIH,EAAM,GAC7BQ,EAAOnU,KAAKa,GAAK,EAAM8S,EAAQ,EAC/BhM,EAAI,EAAE2K,EAAEtS,KAAK8T,IAAIG,EAAM,GACvBlU,EAAIoI,EAAEpI,EAAI4H,EAAE,EAAIuM,EAAQlU,KAAKY,IAAIuT,GACjC/R,EAAI+F,EAAE/F,EAAIkQ,EAAI4B,EAAQlU,KAAK8T,IAAIK,GAC/BC,EAAa,CAAC,IAAI5R,EAAOzC,EAAGqC,IAC5BiS,EAAc,GAClB5W,KAAKuU,IAAImB,OAAOpT,EAAGqC,GACnB,IAAK,IAAI4E,EAAE,EAAGA,EAAE6G,EAAE,EAAG7G,IACnBjH,GAAK4H,EAAI3H,KAAKY,IAAIoG,EAAEiN,EAAQN,GAC5BvR,GAAKuF,EAAI3H,KAAK8T,IAAK9M,EAAEiN,EAAQN,GACzBK,GACFI,EAAWhN,KAAK,IAAI5E,EAAOzC,EAAGqC,IAC9BiS,EAAYjN,KAAK3J,KAAK6S,gBAAgB8D,EAAWA,EAAWxS,OAAO,GAAIwS,EAAWA,EAAWxS,OAAO,MAGpGnE,KAAKuU,IAAIoB,OAAOrT,EAAGqC,GAKvB,GAFA3E,KAAKuU,IAAIqB,YACT5V,KAAKuU,IAAIlI,SACLkK,EAEF,OADAK,EAAYjN,KAAK3J,KAAK6S,gBAAgB8D,EAAWA,EAAWxS,OAAO,GAAIwS,EAAW,KAC3E,CAACA,EAAYC,K,sCAsFRlM,EAAGC,GACjB,IAAIgK,EAAIhK,EAAEkG,OAAOnG,GACb0F,EAAI,IAAIrL,EAAO4P,EAAEhQ,GAAIgQ,EAAErS,GAE3B,OADA8N,EAAE4E,YACK5E,I,oCAoNP,GAFApQ,KAAKuU,IAAIsC,UAAU,EAAG,EAAG7W,KAAK+R,IAAIxE,MAAOvN,KAAK+R,IAAIhE,QAE9C/N,KAAKyQ,MAAMtM,OAAS,EAAG,CAAC,IAAD,EACzBnE,KAAKuU,IAAIkB,aACT,EAAAzV,KAAKuU,KAAImB,OAAT,qBAAmB1V,KAAKyQ,MAAM,GAAGlN,IACjC,IAAK,IAAIgG,EAAI,EAAGA,EAAIvJ,KAAKyQ,MAAMtM,OAAQoF,IAAK,CAAC,IAAD,GAC1C,EAAAvJ,KAAKuU,KAAIoB,OAAT,qBAAmB3V,KAAKyQ,MAAMlH,GAAGhG,IAEnCvD,KAAKuU,IAAIqB,YACT5V,KAAKuU,IAAIsB,YAAc,iBACvB7V,KAAKuU,IAAIuC,UAAY,EACrB9W,KAAKuU,IAAIlI,SACTrM,KAAKuU,IAAIsB,YAAc,eACvB7V,KAAKuU,IAAIuC,UAAY,OAGrB9W,KAAKuU,IAAIuC,UAAY,EACrB9W,KAAKuU,IAAIsB,YAAc,qBACvB7V,KAAKuU,IAAIwC,WAAW,EAAG,EAAG/W,KAAK+R,IAAIxE,MAAOvN,KAAK+R,IAAIhE,QACnD/N,KAAKuU,IAAIuC,UAAY,I,oCAKvB,IAAItB,EAAI,EACRxV,KAAKuU,IAAIkB,YACT,IAAK,IAAIlM,EAAI,EAAGA,EAAIvJ,KAAKsQ,QAAQnM,OAAQoF,IAAK,CAC5C,IAAK,IAAIgH,EAAI,EAAGA,EAAIvQ,KAAKsQ,QAAQ/G,GAAGpF,OAAQoM,IAC1CvQ,KAAKgX,UAAUhX,KAAKsQ,QAAQ/G,GAAGgH,GAAGc,MAAMrR,KAAKsQ,QAAQ/G,GAAGgH,EAAE,IAAIuE,KAAK,IAAM9U,KAAKgR,QAAQwE,GAAI,IAC1FA,IAEExV,KAAKsQ,QAAQ/G,GAAGpF,OAAS,IACtBnE,KAAKgR,QAAQwE,GAKhBxV,KAAKgX,UAAUhX,KAAKsQ,QAAQ/G,GAAG,GAAG8H,MAAMrR,KAAKsQ,QAAQ/G,GAAGvJ,KAAKsQ,QAAQ/G,GAAGpF,OAAO,IAAI2Q,KAAK,IAAM9U,KAAKgR,QAAQwE,GAAI,IAJ/GxV,KAAKgX,UAAUhX,KAAKsQ,QAAQ/G,GAAG,GAAG8H,MAAMrR,KAAKsQ,QAAQ/G,GAAGvJ,KAAKsQ,QAAQ/G,GAAGpF,OAAO,IAAI2Q,KAAK,IACtF9U,KAAK6S,gBAAgB7S,KAAKsQ,QAAQ/G,GAAG,GAAIvJ,KAAKsQ,QAAQ/G,GAAGvJ,KAAKsQ,QAAQ/G,GAAGpF,OAAS,IAAK,IAK3FqR,KAGJxV,KAAKuU,IAAIqB,YACT5V,KAAKuU,IAAIsB,YAAc,qBACvB7V,KAAKuU,IAAIlI,W,oCAIT,GAAIrM,KAAKsQ,QAAQnM,OAAS,GACpBnE,KAAKsQ,QAAQtQ,KAAKsQ,QAAQnM,OAAS,GAAGA,OAAS,EACjD,IAAK,IAAIoF,EAAI,EAAGA,EAAIvJ,KAAKsQ,QAAQnM,OAAQoF,IAAK,CAAC,IAAD,EAC5CvJ,KAAKuU,IAAIkB,aACT,EAAAzV,KAAKuU,KAAImB,OAAT,qBAAmB1V,KAAKsQ,QAAQ/G,GAAG,GAAGhG,IACtC,IAAK,IAAIgN,EAAI,EAAGA,EAAIvQ,KAAKsQ,QAAQ/G,GAAGpF,OAAQoM,IAAK,CAAC,IAAD,GAC/C,EAAAvQ,KAAKuU,KAAIoB,OAAT,qBAAmB3V,KAAKsQ,QAAQ/G,GAAGgH,GAAGhN,IAExCvD,KAAKuU,IAAIqB,YACT5V,KAAKuU,IAAIsB,YAAc,qBACvB7V,KAAKuU,IAAIlI,SACLrM,KAAKyR,aACPzR,KAAKuU,IAAIwB,UAAY,uBACrB/V,KAAKuU,IAAIyB,W,sCAUjB,IAFA,IAAIiB,EAAM,IAAIlS,EAAO,EAAG,GACpBmR,EAAQ3T,KAAKa,IAAM,EAAIpD,KAAKqT,WACvB9J,EAAE,EAAGA,EAAEvJ,KAAKqT,UAAW9J,IAC9B0N,EAAM,IAAIlS,EAAO/E,KAAK8E,MAAMvC,KAAK8T,IAAI9M,EAAE2M,GAAQ,IAAKlW,KAAK8E,MAAMvC,KAAKY,IAAIoG,EAAE2M,GAAQ,IAClFlW,KAAKkQ,oBAAoBlQ,KAAKwT,KAAMxT,KAAKwT,KAAKnC,MAAM4F,GAAMjX,KAAK8T,kB,6BAKjE9T,KAAKkX,cACLlX,KAAK+Q,aAAe,EAEhB/Q,KAAKiS,UACPjS,KAAKuU,IAAIwB,UAAY,sBACrB/V,KAAKuU,IAAI4C,SAAS,EAAG,EAAGnX,KAAK+R,IAAIxE,MAAM,EAAGvN,KAAK+R,IAAIhE,OAAO,IAGvD/N,KAAKoT,cACRpT,KAAKkR,WAAWlR,KAAK+S,OAAQ,GAG3B/S,KAAKkS,UACPlS,KAAKoS,YAAYpS,KAAKwT,KAAMxT,KAAKsS,WAAYtS,KAAKuS,MAAOvS,KAAKwS,WAAW,GAI3ExS,KAAKoX,cAEDpX,KAAKiU,aACPjU,KAAKqX,cAEHrX,KAAKmU,SACPnU,KAAKsQ,QAAQ3G,KAAK,IAClB3J,KAAKmU,QAAUnU,KAAKmU,QAEhBnU,KAAKkS,WACLlS,KAAKoT,aACPpT,KAAKsX,gBAGLtX,KAAKkQ,oBAAoBlQ,KAAK+S,OAAQ/S,KAAKwT,KAAMxT,KAAK8T,iBAG1D9T,KAAK0U,SAAShC,UAAY,mBAAqB1S,KAAK+Q,aAAahC,a,+BAIzD,IAAD,OACP,OACE,kBAACG,GAAA,EAAD,CAAO7N,UAAW,YAChB,yBAAKkW,MAAO,CAACxJ,OAAQ,SACrB,4BAAQ3I,GAAG,SAASmI,MAAO,IAAK9L,OAAO+V,WAAYzJ,OAAQ,IAAKtM,OAAOgW,cACvE,6BAASpW,UAAU,QACjB,yBAAKA,UAAU,OACb,yBAAKA,UAAU,SAAS+D,GAAG,mBAC3B,yBAAK/D,UAAU,SAAS+D,GAAG,YAC3B,yBAAK/D,UAAU,SAAS+D,GAAG,WAE7B,yBAAK/D,UAAU,OACb,yBAAKA,UAAU,SAAS+D,GAAG,UAC3B,yBAAK/D,UAAU,SAAS+D,GAAG,eAC3B,yBAAK/D,UAAU,SAAS+D,GAAG,aAE7B,yBAAK/D,UAAU,OACb,yBAAKA,UAAU,SAAS+D,GAAG,aAC3B,yBAAK/D,UAAU,QACb,2BAAOqW,QAAQ,mBAAf,sBACA,2BAAOhZ,MAAOsB,KAAKH,MAAM+R,gBAAiB+F,YAAY,OAAOvS,GAAG,kBACzD9E,SAAU,SAAA9B,GAAQ,EAAKa,SAAS,CAACuS,gBAAiBpT,EAAMoD,OAAOlD,YAExE,yBAAK2C,UAAU,SAAS+D,GAAG,UAE7B,yBAAK/D,UAAU,OACb,yBAAKA,UAAU,SAAS+D,GAAG,aAC3B,yBAAK/D,UAAU,QACb,yBAAK+D,GAAG,cACR,2BAAO1G,MAAOsB,KAAKH,MAAM2R,WAAYmG,YAAY,MAAMvS,GAAG,aACnD9E,SAAU,SAAA9B,GAAQ,EAAKa,SAAS,CAACmS,WAAYhT,EAAMoD,OAAOlD,mB,GAjnBvC4C,IAAMC,WCQxCqW,G,iLAEF,OACE,6BACE,kBAAC,EAAD,MACA,yBAAKvW,UAAsC,SAA3BrB,KAAKP,MAAMY,YAAyB,GAAK,aACvD,4BAAQgB,UAAW,cACjB,yBAAKwW,IAAKC,IAAMzW,UAAU,WAAW0W,IAAI,SAD3C,uBAKF,yBAAK1W,UAAsC,WAA3BrB,KAAKP,MAAMY,YAA2B,GAAK,aACzD,kBAAC,GAAD,OAEF,yBAAKgB,UAAsC,YAA3BrB,KAAKP,MAAMY,YAA4B,GAAK,aAC1D,kBAAC,GAAD,OAEF,yBAAKgB,UAAsC,gBAA3BrB,KAAKP,MAAMY,YAAgC,GAAK,aAC9D,kBAAC,GAAD,OAEF,yBAAKgB,UAAsC,eAA3BrB,KAAKP,MAAMY,YAA+B,GAAK,aAC7D,kBAAC,GAAD,OAEF,yBAAKgB,UAAsC,YAA3BrB,KAAKP,MAAMY,YAA4B,GAAK,aAC1D,kBAAC,GAAD,Y,GAxBQiB,IAAMC,WA4CTY,oBANf,SAAyBtC,GACvB,MAAO,CACLQ,YAAaR,EAAMQ,eAIR8B,CAAyByV,I,UC5CpB7X,QACW,cAA7B0B,OAAOuW,SAASC,UAEe,UAA7BxW,OAAOuW,SAASC,UAEhBxW,OAAOuW,SAASC,SAASC,MAAM,2D,iQCLnC,IAAMvJ,GAAQwJ,aAAe,CAC3BC,QAAS,CACPxZ,KAAM,OACNyZ,UAAW,CACTC,KAAM,cAKNC,GAAe,CACnBhR,KAAM,CACJC,OAAQ,EACR+H,QAAS,KAEX7H,MAAO,CACLF,OAAQ,GACR+H,QAAS,IAEXlN,OAAS,CACPkN,QAAS,GAEX3H,QAAS,CACPJ,OAAQ,IACR+H,QAAS,KAEXnB,WAAY,CACV5G,QAAQ,EACR+H,SAAS,GAEXlH,iBAAkB,CAChBb,QAAQ,EACR+H,SAAS,GAEXlP,YAAa,QA2Cf,IAAMmY,GAAQC,cAxCd,WAAgD,IAA/B5Y,EAA8B,uDAAtB0Y,GAAcG,EAAQ,uCAC7C,OAAQA,EAAO9Z,MACb,IAAK,gBACH,OAAO+Z,aAAQ9Y,GAAO,SAAA+Y,GACpBA,EAAMF,EAAOha,OAAOga,EAAO/Z,MhBkD5B,SAAkB2D,GACvB,IAAMqC,EAAIpC,KAAKqC,OAAOtC,EAAIC,KAAKqC,MAAMtC,EAAI,KAAO,IAChD,OAASA,EAAIqC,GAAK,GAAMpC,KAAKC,IAAI,GAAImC,GgBpDIkU,CAASH,EAAOja,aAEvD,IAAK,eACH,OAAOka,aAAQ9Y,GAAO,SAAA+Y,GACpBA,EAAMF,EAAOha,OAAOga,EAAO/Z,MAAsC,KAA9B+Z,EAAOla,MAAMoD,OAAOlD,MAAe,GAAKkM,OAAO8N,EAAOla,MAAMoD,OAAOlD,UAE1G,IAAK,OACH,OAAImB,EAAM6Y,EAAOha,OAAOga,EAAO/Z,MAAQ+Z,EAAO3Z,IACrC4Z,aAAQ9Y,GAAO,SAAA+Y,GACpBA,EAAMF,EAAOha,OAAOga,EAAO/Z,MAAQ+Z,EAAO3Z,OAEnCc,EAAM6Y,EAAOha,OAAOga,EAAO/Z,MAAQ,EACrCga,aAAQ9Y,GAAO,SAAA+Y,GACpBA,EAAMF,EAAOha,OAAOga,EAAO/Z,MAAQ,KAG9BkB,EAEX,IAAK,qBACH,OAAO8Y,aAAQ9Y,GAAO,SAAA+Y,GACpBA,EAAMxK,WAAWsK,EAAO/Z,OAASkB,EAAMuO,WAAWsK,EAAO/Z,SAE7D,IAAK,2BACH,OAAOga,aAAQ9Y,GAAO,SAAA+Y,GACpBA,EAAMxK,WAAWsK,EAAO/Z,OAASkB,EAAMuO,WAAWsK,EAAO/Z,MACzDia,EAAMvQ,iBAAiBqQ,EAAO/Z,OAASkB,EAAMwI,iBAAiBqQ,EAAO/Z,SAEzE,IAAK,UACH,O,2VAAO,CAAP,GACKkB,EADL,CAEEQ,YAAaqY,EAAOha,QAExB,QACE,OAAOmB,MAKbiZ,IAASC,OACP,kBAAC,IAAD,CAAUP,MAAOA,IACf,kBAAC,KAAD,CAAkB7J,MAAOA,IACvB,kBAAC,GAAD,QAGJ0F,SAASC,eAAe,SD0BpB,kBAAmB0E,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.8f875b62.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","export const SLIDER_CHANGE = 'SLIDER_CHANGE';\r\nexport const INPUT_CHANGE = 'INPUT_CHANGE';\r\nexport const CLIP = 'CLIP';\r\nexport const TOGGLE_UPDATE_DATA = 'TOGGLE_UPDATE_DATA';\r\nexport const SET_TAB = 'SET_TAB';\r\nexport const TOGGLE_PERFORMANCE_CHART = 'TOGGLE_PERFORMANCE_CHART';\r\n\r\nexport const sliderChange = (event, newValue, value, name) => ({type: SLIDER_CHANGE, newValue: newValue, value: value, event: event, name: name});\r\nexport const inputChange = (event, value, name) => ({type: INPUT_CHANGE, event: event, value: value, name: name});\r\nexport const clip = (max, value, name) => ({type: CLIP, max: max, value: value, name: name});\r\nexport const toggleUpdateData = name => ({type: TOGGLE_UPDATE_DATA, name: name});\r\nexport const setTab = (event, value) => ({type: SET_TAB, value: value});\r\nexport const togglePerformanceChart = name => ({type: TOGGLE_PERFORMANCE_CHART, name: name});\r\n","import {AppBar, Slide, Tab, Tabs, useScrollTrigger, TextField, MenuItem, Popover} from '@material-ui/core';\r\nimport React from 'react';\r\nimport {setTab} from '../actions';\r\nimport {connect} from 'react-redux';\r\nimport {ArrowDropDown} from '@material-ui/icons';\r\n\r\nclass NavigationBar extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      statsTab: 'normal'\r\n    }\r\n  }\r\n\r\n  handleOpen = (event) => {\r\n    event.stopPropagation();\r\n    this.setState({\r\n      anchorEl: event.currentTarget\r\n    });\r\n  };\r\n\r\n  changeStatsTab = (event, value) => {\r\n    this.props.setTab(event, value);\r\n    this.handleClose(event);\r\n    this.setState({\r\n      statsTab: value\r\n    })\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      anchorEl: null\r\n    })\r\n  };\r\n\r\n  render() {\r\n    let open = Boolean(this.state.anchorEl);\r\n    return (\r\n      <HideOnScroll>\r\n        <AppBar>\r\n          <Tabs centered value={this.props.selectedTab} onChange={this.props.setTab}>\r\n            <Tab label=\"home\" value={'home'} />\r\n            <Tab classes={{wrapper: 'stats__tab'}} label=\"Stats\" value={this.state.statsTab} icon={<ArrowDropDown />} onClick={this.handleOpen}/>\r\n            <Tab label=\"Spike Trains\" value={'spikeTrains'} />\r\n            <Tab label=\"Ray Tracing\" value={'rayTracing'} />\r\n            <Tab label=\"IPython Notebooks\" value={'ipython'} />\r\n          </Tabs>\r\n          <Popover\r\n            open={open}\r\n            anchorEl={this.state.anchorEl}\r\n            onClose={this.handleClose}\r\n            anchorOrigin={{\r\n              vertical: \"bottom\",\r\n              horizontal: \"left\"\r\n            }}\r\n            transformOrigin={{\r\n              vertical: \"top\",\r\n              horizontal: \"left\"\r\n            }}\r\n          >\r\n            <MenuItem className={'stats__menu'} onClick={event => this.changeStatsTab(event, 'normal')}>\r\n              Normal\r\n            </MenuItem>\r\n            <MenuItem className={'stats__menu'} onClick={event => this.changeStatsTab(event, 'poisson')}>\r\n              Poisson\r\n            </MenuItem>\r\n          </Popover>\r\n        </AppBar>\r\n      </HideOnScroll>\r\n    );\r\n  }\r\n}\r\n\r\nfunction HideOnScroll(props) {\r\n  const {children, window} = props;\r\n  const trigger = useScrollTrigger({target: window ? window() : undefined});\r\n\r\n  return (\r\n    <Slide appear={false} direction=\"down\" in={!trigger}>\r\n      {children}\r\n    </Slide>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    selectedTab: state.selectedTab\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setTab\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(NavigationBar);\r\n","/**\r\n * Analytically calculates the Normal distribution\r\n * @return {number}\r\n */\r\nexport function Gaussian(mu, sigma, x) {\r\n  return (1 / (sigma * Math.sqrt(2 * Math.PI))) * Math.exp(-0.5 * Math.pow((x - mu) / sigma, 2));\r\n}\r\n\r\n\r\n/**\r\n * Analytically calculates the Poisson distribution\r\n * @return {number}\r\n */\r\nexport function Poisson(lambda, x) {\r\n  if (x < 0) {\r\n    return 0\r\n  }\r\n  return (Math.pow(lambda, x) * Math.exp(-lambda)) / (factorial(x))\r\n}\r\n\r\n/**\r\n * Helper function to calculate the factorial of a number recursively\r\n * @return {number}\r\n */\r\nfunction factorial(x) {\r\n  if (x === 0) {\r\n    return 1\r\n  }\r\n  else {\r\n    return x*factorial(x-1);\r\n  }\r\n}\r\n\r\n/**\r\n * Box-Muller transform on the uniform distribution from the built-in Math.random() method\r\n * @param mu - the mean of the distribution\r\n * @param sigma - the variance of the distribution\r\n * @return {number}\r\n */\r\nexport function BoxMuller(mu = 0, sigma = 1) {\r\n  let u = 0, v = 0;\r\n  while (u === 0) u = Math.random();\r\n  while (v === 0) v = Math.random();\r\n  let z1 = Math.sqrt(-2.0 * Math.log(u)) * Math.cos(2.0 * Math.PI * v);\r\n  return z1 * sigma + mu;\r\n}\r\n\r\n/**\r\n * Inverse transform sampling on the formula e^-x to get a Poisson distribution\r\n * @return {number}\r\n */\r\nexport function InverseTransformSampling(lambda = 0) {\r\n  if (lambda > 1000) {\r\n    throw new Error('Value of Lambda too large')\r\n  }\r\n  let x = 0, p = Math.exp(-lambda), s = p, u = Math.random();\r\n  while (s < u) {\r\n    x++;\r\n    p *= lambda / x;\r\n    s += p;\r\n  }\r\n  return x;\r\n}\r\n\r\n/**\r\n * Converts data from generator to histogram\r\n */\r\nexport function createHistogram(data) {\r\n  console.time('histogram');\r\n  let positives = [];\r\n  let negatives = [];\r\n  let hist = [];\r\n  let keys = Object.keys(data[0]).slice(1, data.length);\r\n  data.forEach(item => {\r\n    keys.forEach(key => {\r\n      if (Math.sign(item[key]) === -1) {\r\n        hist = negatives\r\n      }\r\n      else {\r\n        hist = positives\r\n      }\r\n      if (!hist[item[key]]) {\r\n        hist[item[key]] = {};\r\n        keys.forEach(others => {\r\n          hist[item[key]][others] = 0;\r\n        });\r\n        hist[item[key]][key] = 1;\r\n      }\r\n      else {\r\n        hist[item[key]][key] += 1;\r\n      }\r\n    });\r\n  });\r\n  console.timeEnd('histogram');\r\n  return [positives, negatives];\r\n}\r\n\r\n/**\r\n * Converts linear scale to logarithmic scale\r\n * @param x\r\n * @returns {number}\r\n */\r\nexport function linToLog(x) {\r\n  const y = Math.floor((x + Math.floor(x / 10)) / 10);\r\n  return ((x + y) % 10) * Math.pow(10, y);\r\n}\r\n\r\n/**\r\n * Converts logarithmic scale to linear scale\r\n * @param x\r\n * @returns {number}\r\n */\r\nexport function logToLin(x) {\r\n  const y = Math.floor(Math.log10(x === 0 ? 1 : x));\r\n  return (y === 0 ? x : Math.round(x / Math.pow(10, y))) + y * 9;\r\n}\r\n\r\n/**\r\n * Vector (2D) class for ray tracing calculations\r\n * @param x: x component of Vector\r\n * @param y: y component of Vector\r\n * @method vMinus: subtracts two Vectors\r\n * @method vPlus: adds two Vectors\r\n * @method mult: multiplies a Vector by a scalar\r\n * @method dot: returns the scalar dot product between two Vectors\r\n * @method set: sets x and y params of a Vector instance\r\n * @method normalise: normalises the Vector accodring to the L2 norm\r\n * @method p: getter method to obtain the x and y coords as array\r\n * @method l22: getter method to obtain the square of the L2 norm of the vector\r\n */\r\nexport class Vector{\r\n  constructor(x, y){\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n  vMinus(target){\r\n    return new Vector(this.x - target.x, this.y - target.y);\r\n  }\r\n  vPlus(target){\r\n    return new Vector(this.x + target.x, this.y + target.y);\r\n  }\r\n  mult(target){\r\n    return new Vector(this.x * target, this.y * target);\r\n  }\r\n  dot(target){\r\n    return this.x * target.x + this.y * target.y\r\n  }\r\n  set(x, y){\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n  normalise(){\r\n    let l2 = Math.sqrt(this.l22);\r\n    this.x = this.x / l2;\r\n    this.y = this.y / l2;\r\n  }\r\n  get p(){\r\n    return [this.x, this.y]\r\n  }\r\n  get l22(){\r\n    return Math.pow(this.x, 2) + Math.pow(this.y, 2)\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {Slider, Input, Grid, Typography} from '@material-ui/core';\r\nimport {logToLin} from '../utils';\r\n\r\nexport default class SliderInput extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"slider__container\">\r\n        <Typography id=\"input-slider\" gutterBottom>\r\n          {this.props.label}\r\n        </Typography>\r\n        <Grid container spacing={2} alignItems=\"center\">\r\n          <Grid item>{this.props.icon}</Grid>\r\n          <Grid item xs>\r\n            <Slider\r\n              value={logToLin(this.props.value)}\r\n              onChange={(event, newValue) => this.props.sliderChange(event, newValue, this.props.valueName, this.props.name)}\r\n              onChangeCommitted={() => this.props.toggleUpdateData(this.props.name)}\r\n              aria-labelledby=\"input-slider\"\r\n              max={logToLin(this.props.max)}\r\n              className={'slider'}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Input\r\n              className=\"slider__input\"\r\n              value={this.props.value}\r\n              margin=\"dense\"\r\n              onChange={event => this.props.inputChange(event, this.props.valueName, this.props.name)}\r\n              onBlur={() => this.props.handleBlur(this.props.valueName, this.props.max, this.props.name)}\r\n              inputProps={{\r\n                'aria-labelledby': 'input-slider'\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import {Card, CardContent, CardHeader, Collapse, IconButton, Typography} from '@material-ui/core';\r\nimport classNames from 'classnames';\r\nimport {ExpandMore} from '@material-ui/icons';\r\nimport React from 'react';\r\n\r\nexport default function CustomCard(props) {\r\n  const [expanded, setExpanded] = React.useState(true);\r\n\r\n  function handleExpandClick() {\r\n    setExpanded(!expanded);\r\n  }\r\n  return (\r\n    <Card className={props.className}>\r\n      <CardHeader\r\n        className={'card__header'}\r\n        disableTypography={true}\r\n        title={\r\n          <div className={'card__header__content'}>\r\n            <Typography variant={'h5'} className={'card__header__title'}>\r\n              {props.title}\r\n            </Typography>\r\n            <IconButton\r\n              onClick={handleExpandClick}\r\n              aria-expanded={expanded}\r\n              aria-label=\"show more\"\r\n              className={classNames('card__header__expand', expanded ? 'card__header__expand--open' : '')}\r\n            >\r\n              <ExpandMore />\r\n            </IconButton>\r\n          </div>\r\n        }\r\n        avatar={props.avatar}\r\n      />\r\n      <Collapse in={expanded}>\r\n        <CardContent>{props.children}</CardContent>\r\n      </Collapse>\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {Grid, Checkbox, FormControlLabel, FormHelperText, FormControl, FormGroup} from '@material-ui/core';\r\nimport SliderInput from './SliderInput';\r\nimport {clip, inputChange, sliderChange, toggleUpdateData, togglePerformanceChart} from '../../actions';\r\nimport {GraphicEq, ScatterPlot, BlurOn, Tune} from '@material-ui/icons';\r\nimport {connect} from 'react-redux';\r\nimport CustomCard from '../CustomCard';\r\n\r\nclass NormalConfig extends React.Component {\r\n  handleBlur = (valueName, max, name) => {\r\n    this.props.clip(max, valueName, name);\r\n    this.props.toggleUpdateData(name);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <CustomCard title={'Graph Configuration'} avatar={<Tune />}>\r\n        <Grid container>\r\n          <Grid item xs={6}>\r\n            <SliderInput\r\n              label={'Mean'}\r\n              name={'normal'}\r\n              valueName={'mean'}\r\n              value={this.props.mean.normal}\r\n              inputChange={this.props.inputChange}\r\n              sliderChange={this.props.sliderChange}\r\n              toggleUpdateData={this.props.toggleUpdateData}\r\n              handleBlur={this.handleBlur}\r\n              max={100000}\r\n              icon={<GraphicEq />}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <SliderInput\r\n              label={'Standard Deviation'}\r\n              name={'normal'}\r\n              valueName={'stDev'}\r\n              value={this.props.stDev.normal}\r\n              inputChange={this.props.inputChange}\r\n              sliderChange={this.props.sliderChange}\r\n              toggleUpdateData={this.props.toggleUpdateData}\r\n              handleBlur={this.handleBlur}\r\n              max={1000}\r\n              icon={<BlurOn />}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <SliderInput\r\n              label={'Samples'}\r\n              name={'normal'}\r\n              valueName={'samples'}\r\n              value={this.props.samples.normal}\r\n              inputChange={this.props.inputChange}\r\n              sliderChange={this.props.sliderChange}\r\n              toggleUpdateData={this.props.toggleUpdateData}\r\n              handleBlur={this.handleBlur}\r\n              max={1000000}\r\n              icon={<ScatterPlot />}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <FormControl component=\"fieldset\" className={'stats__performance-chart'}>\r\n              <FormGroup>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox checked={this.props.performanceChart.normal} onChange={() => this.props.togglePerformanceChart('normal')} />\r\n                  }\r\n                  label=\"Performance Chart\"\r\n                />\r\n              </FormGroup>\r\n              <FormHelperText margin=\"dense\">Tick for faster rendering (recommended at high variances)</FormHelperText>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n      </CustomCard>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    mean: state.mean,\r\n    stDev: state.stDev,\r\n    samples: state.samples,\r\n    performanceChart: state.performanceChart\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  sliderChange,\r\n  inputChange,\r\n  clip,\r\n  toggleUpdateData,\r\n  togglePerformanceChart\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(NormalConfig);\r\n","import {BoxMuller, InverseTransformSampling} from './utils';\r\n\r\n/**\r\n * Function to generate data object to use in amcharts4 charts\r\n * @param samples - how many samples should be displayed\r\n * @param countries - specifies which countries to include if independent is countries\r\n * @param rules - global rules applied to all data:\r\n *        - positive, ensure all data is positive (caps to zero)\r\n * @param slope - value between -0.5 and 0.5, the higher the more upward the graph will slope if isStatic is set to\r\n *                false (higher values will also mean less variance)\r\n * @param isStatic - if set, data will not accumulate\r\n * @param independent - name for the independent variable\r\n *        - date, sets x-axis to be a dateSeries\r\n *        - id, sets x-axis to be a numerical series\r\n *        - countries, sets x-axis to be a category axis with countries specified in the countries parameter (map chart)\r\n * @param dependent - list of dependent variables with properties\r\n *        - name, specifies name of variable\r\n *        - mean, specifies the mean value around which the data should vary\r\n *        - stDev, specifies standard deviation to indicate variance of data\r\n *        - rules, specific rules for this data series:\r\n *                -- positive, ensure all data is positive (caps to zero)\r\n *                -- uniform, applies Math.random() to get uniform distribution\r\n *                -- poisson, generated data using Poisson distribution (mean is the value for lambda)\r\n * @returns {Array}\r\n */\r\nfunction generateChartData({\r\n  samples = 100,\r\n  countries = undefined,\r\n  rules = [],\r\n  slope = 0.1,\r\n  isStatic = true,\r\n  independent = 'id',\r\n  dependent = [\r\n    {\r\n      name: 'column-1',\r\n      mean: 200,\r\n      stDev: 20,\r\n      rules: ['']\r\n    },\r\n    {\r\n      name: 'column-2',\r\n      mean: 50,\r\n      stDev: 5,\r\n      rules: ['']\r\n    }\r\n  ]\r\n} = {}) {\r\n  //Initialising\r\n  let chartData = [];\r\n  let startingDataPoint = {};\r\n  //Sets initial date for data charts\r\n  if (independent === 'date') {\r\n    let firstDate = new Date();\r\n    firstDate.setDate(firstDate.getDate() - samples);\r\n    startingDataPoint['date'] = firstDate;\r\n  }\r\n  //Initialised normal x-axis values\r\n  else if (independent === 'id') {\r\n    startingDataPoint['id'] = 1;\r\n  }\r\n  //Sets up country data for map chart\r\n  else if (independent === 'country') {\r\n    if (countries) {\r\n      startingDataPoint['id'] = countries[0];\r\n    } else {\r\n      throw new Error('Countries parameter needs to be defined');\r\n    }\r\n  }\r\n  //Set initial independent variables\r\n  dependent.forEach((item, index) => {\r\n    startingDataPoint[item.name] = Math.round(\r\n      BoxMuller(item.mean, item.stDev)\r\n    );\r\n  });\r\n  let prevDataPoint = startingDataPoint;\r\n  let newDataPoint = {};\r\n  //Loop through time range or 100 data points if unspecified\r\n  for (let i = 0; i < (countries ? countries.length : samples); i++) {\r\n    newDataPoint = {};\r\n    //Add independent variable\r\n    switch(independent) {\r\n      case 'date':\r\n        let newDate = new Date();\r\n        newDate.setDate(startingDataPoint.date.getDate() + i);\r\n        newDataPoint['date'] = newDate;\r\n        break;\r\n      case 'id':\r\n        newDataPoint['id'] = startingDataPoint.id + i;\r\n        break;\r\n      case 'country':\r\n        newDataPoint['id'] = countries[i];\r\n        break;\r\n      default:\r\n        throw new Error('Independent variable not valid');\r\n    }\r\n    //Add dependent variables\r\n    dependent.forEach((item, index) => {\r\n      if (item.rules.includes('uniform')) {\r\n        newDataPoint[item.name] = Math.round(\r\n          Math.random() * (6 * (item.stDev)) +\r\n          (item.mean - 3 * (item.stDev))\r\n        );\r\n      }\r\n      else if (item.rules.includes('poisson')) {\r\n        newDataPoint[item.name] = Math.round(InverseTransformSampling(item.mean));\r\n      }\r\n      else {\r\n        newDataPoint[item.name] = Math.round(BoxMuller(item.mean, item.stDev));\r\n      }\r\n      if ((rules.includes('positive') || item.rules.includes('positive')) &&\r\n          newDataPoint[item.name] < 0) {\r\n        newDataPoint[item.name] = 0;\r\n      }\r\n      if (!isStatic) {\r\n        newDataPoint[item.name] = prevDataPoint[item.name] +\r\n          Math.round((Math.random() < 0.5 + slope ? 1 : -1) * newDataPoint[item.name]);\r\n        prevDataPoint = newDataPoint;\r\n      }\r\n    });\r\n    chartData.push(newDataPoint);\r\n  }\r\n  return chartData;\r\n}\r\n\r\nexport default generateChartData;\r\n","import React from 'react';\r\nimport * as am4core from '@amcharts/amcharts4/core';\r\nimport * as am4charts from '@amcharts/amcharts4/charts';\r\nimport dark from '@amcharts/amcharts4/themes/dark';\r\nimport animated from '@amcharts/amcharts4/themes/animated';\r\nimport randomDataGenerator from './randomDataGenerator';\r\nimport * as utils from './utils';\r\nimport {connect} from 'react-redux';\r\nimport {toggleUpdateData} from '../actions';\r\nimport CustomCard from './CustomCard';\r\nimport {BarChart} from '@material-ui/icons';\r\n\r\nclass NormalChart extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.chart = null;\r\n    am4core.options.commercialLicense = true;\r\n    this.prevPerf = false;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.createChart();\r\n  }\r\n\r\n  createData() {\r\n    const samples = this.props.samples.normal;\r\n    const mean = this.props.mean.normal;\r\n    const stDev = this.props.stDev.normal;\r\n    let chart_data = randomDataGenerator({\r\n      samples: samples,\r\n      dependent: [\r\n        {\r\n          name: 'column-1',\r\n          mean: mean,\r\n          stDev: stDev,\r\n          rules: []\r\n        },\r\n        {\r\n          name: 'column-3',\r\n          mean: mean,\r\n          stDev: stDev,\r\n          rules: ['uniform']\r\n        }\r\n      ]\r\n    });\r\n    let d = utils.createHistogram(chart_data);\r\n    //Dealing with negatives is not as easy as it may seem\r\n    let positiveData = d[0];\r\n    let positiveKeys =Object.keys(positiveData);\r\n    let negativeData = d[1];\r\n    let negativeKeys = Object.keys(negativeData).sort((a, b) => {\r\n      return Number(a) - Number(b)\r\n    });\r\n    let keys = negativeKeys.concat(positiveKeys);\r\n    let dummy = [];\r\n    let data = [];\r\n    /**\r\n     * Converts to data object that is readable by amcharts and add analytical and CFD functions\r\n     */\r\n    keys.forEach((item, index) => {\r\n      if (Math.sign(Number(item)) === -1) {\r\n        data = negativeData;\r\n      }\r\n      else {\r\n        data = positiveData;\r\n      }\r\n      let dataPoint = {};\r\n      dataPoint['id'] = Number(item);\r\n      dataPoint['column-1'] = data[item]['column-1'];\r\n      dataPoint['column-2'] = Math.round(utils.Gaussian(mean, stDev, parseInt(item, 10)) * samples);\r\n      dataPoint['column-3'] = data[item]['column-3'];\r\n      if (!dummy[0]) {\r\n        dataPoint['column-4'] = dataPoint['column-1'];\r\n      } else {\r\n        dataPoint['column-4'] = dummy[index - 1]['column-4'] + data[item]['column-1'];\r\n      }\r\n      dummy.push(dataPoint);\r\n    });\r\n    let hasZero = false;\r\n    if (negativeKeys.length !== 0) {\r\n      hasZero = true;\r\n    }\r\n    return [dummy, hasZero];\r\n  }\r\n\r\n  createChart() {\r\n    /* Chart code */\r\n    // Themes begin\r\n    am4core.useTheme(dark);\r\n    if (this.props.performanceChart.normal) {\r\n      am4core.unuseTheme(animated);\r\n    } else {\r\n      am4core.useTheme(animated);\r\n    }\r\n    // Themes end\r\n\r\n    // Create chart instance\r\n    this.chart = am4core.create(this.refs.normal_chart, am4charts.XYChart);\r\n    let chart = this.chart;\r\n    chart.categoryField = 'category';\r\n\r\n    // Add data\r\n    let dummy = this.createData();\r\n    chart.data = dummy[0];\r\n    let hasZero = dummy[1];\r\n\r\n    // Create axes\r\n    let xAxis = chart.xAxes.push(new am4charts.CategoryAxis());\r\n    xAxis.dataFields.category = 'id';\r\n    xAxis.renderer.grid.strokeDasharray = 3;\r\n    // Zero line\r\n    this.range = xAxis.axisRanges.create();\r\n    this.range.category = hasZero ? 0 : undefined;\r\n    this.range.label.paddingTop = 2;\r\n    this.range.label.fontSize = 12;\r\n    this.range.grid.stroke = am4core.color(\"grey\");\r\n    this.range.grid.strokeWidth = 1;\r\n    this.range.grid.strokeOpacity = 0.7;\r\n\r\n    let yAxis1 = chart.yAxes.push(new am4charts.ValueAxis());\r\n    yAxis1.renderer.grid.strokeDasharray = 3;\r\n\r\n    let colorSet = new am4core.ColorSet();\r\n    let yAxis2 = chart.yAxes.push(new am4charts.ValueAxis());\r\n    yAxis2.renderer.grid.template.disabled = true;\r\n    yAxis2.renderer.line.strokeOpacity = 1;\r\n    yAxis2.renderer.line.stroke = colorSet.getIndex(3);\r\n    yAxis2.renderer.line.strokeWidth = 2;\r\n    yAxis2.renderer.opposite = true;\r\n\r\n    // Create series\r\n    let normalBM = chart.series.push(\r\n      this.props.performanceChart.normal ? new am4charts.StepLineSeries() : new am4charts.ColumnSeries()\r\n    );\r\n    normalBM.name = 'Normal (artificial, Box-Muller)';\r\n    normalBM.dataFields.valueY = 'column-1';\r\n    normalBM.dataFields.categoryX = 'id';\r\n    normalBM.strokeWidth = 1;\r\n    normalBM.fillOpacity = 1;\r\n    normalBM.tensionX = 1;\r\n    if (!this.props.performanceChart.normal) {\r\n      normalBM.columns.template.width = am4core.percent(80);\r\n      normalBM.fillOpacity = 0;\r\n    }\r\n\r\n    let normal = chart.series.push(new am4charts.LineSeries());\r\n    normal.name = 'Normal (analytical)';\r\n    normal.dataFields.valueY = 'column-2';\r\n    normal.dataFields.categoryX = 'id';\r\n    normal.strokeWidth = 1;\r\n    normal.tensionX = 1;\r\n\r\n    let uniform = chart.series.push(new am4charts.LineSeries());\r\n    uniform.name = 'Uniform';\r\n    uniform.dataFields.valueY = 'column-3';\r\n    uniform.dataFields.categoryX = 'id';\r\n    uniform.strokeWidth = 1;\r\n    uniform.tensionX = 1;\r\n    uniform.hidden = true;\r\n\r\n    let cfdBM = chart.series.push(new am4charts.LineSeries());\r\n    cfdBM.name = 'CDF (Box-Muller)';\r\n    cfdBM.dataFields.valueY = 'column-4';\r\n    cfdBM.dataFields.categoryX = 'id';\r\n    cfdBM.strokeWidth = 1;\r\n    cfdBM.tensionX = 1;\r\n    cfdBM.yAxis = yAxis2;\r\n\r\n    // Add cursor\r\n    chart.cursor = new am4charts.XYCursor();\r\n\r\n    // Create legend\r\n    chart.legend = new am4charts.Legend();\r\n    let markers = chart.legend.markers.template;\r\n    markers.width = 12;\r\n    markers.height = 12;\r\n    let container = chart.legend.itemContainers.template;\r\n    container.paddingRight = 5;\r\n    container.paddingLeft = 5;\r\n    container.paddingTop = 0;\r\n    container.paddingBottom = 0;\r\n\r\n    // Add padding\r\n    chart.paddingBottom = 20;\r\n    chart.paddingTop = 40;\r\n  }\r\n\r\n  render() {\r\n    if (this.props.updateData.normal) {\r\n      if (this.props.performanceChart.normal && this.prevPerf !== this.props.performanceChart.normal) {\r\n        am4core.options.queue = true;\r\n        am4core.options.minPolylineStep = 5;\r\n        this.prevPerf = !this.prevPerf;\r\n        this.createChart();\r\n      } else if (!this.props.performanceChart.normal && this.prevPerf !== this.props.performanceChart.normal) {\r\n        am4core.options.queue = false;\r\n        am4core.options.minPolylineStep = 0.5;\r\n        this.prevPerf = !this.prevPerf;\r\n        this.createChart();\r\n      } else if (this.props.updateData.normal) {\r\n        // Resets zero line if zero not in view\r\n        let dummy = this.createData();\r\n        this.chart.data = dummy[0];\r\n        let hasZero = dummy[1];\r\n        this.range.category = hasZero ? 0 : undefined;\r\n        this.range.grid.strokeOpacity = hasZero ? 0.7 : 0;\r\n      }\r\n      this.props.toggleUpdateData('normal');\r\n    }\r\n    return (\r\n      <CustomCard title={'Normal Probability Distribution Histograms'} avatar={<BarChart />}>\r\n        <div className={'stats__chart'} ref={'normal_chart'} />\r\n      </CustomCard>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    mean: state.mean,\r\n    stDev: state.stDev,\r\n    samples: state.samples,\r\n    updateData: state.updateData,\r\n    performanceChart: state.performanceChart\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  toggleUpdateData\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(NormalChart);\r\n","import {InlineMath} from 'react-katex';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport React from 'react';\r\n\r\nexport default function Tag(props) {\r\n  const classes = makeStyles(theme => ({\r\n    tag: {\r\n      position: 'relative',\r\n      right: props.right.toString() + 'vw',\r\n      top: props.top.toString() + 'vh',\r\n      height: 0\r\n    }\r\n  }))();\r\n\r\n  return (\r\n    <div className={classes.tag}><InlineMath>{'(' + props.children + ')'}</InlineMath></div>\r\n  )\r\n}\r\n\r\n","import React from 'react';\r\nimport NormalConfig from './components/configDashboards/NormalConfig';\r\nimport {Paper, Grid, Typography, Link} from '@material-ui/core';\r\nimport {InlineMath, BlockMath} from 'react-katex';\r\nimport 'katex/dist/katex.min.css';\r\nimport NormalChart from './components/NormalChart';\r\nimport Tag from './components/Tag';\r\n\r\nfunction Normal() {\r\n  return (\r\n    <Grid container spacing={3} className={'stats__grid'}>\r\n      <Grid item xs={12}>\r\n        <Paper className={'stats__text'}>\r\n          <Typography variant={'h4'} align={'center'} gutterBottom={true}>\r\n            Transforming Random Variable Distributions <br /> &nbsp;\r\n          </Typography>\r\n          <Typography variant={'h6'} align={'center'} gutterBottom={true}>\r\n            Normal distributions\r\n          </Typography>\r\n          <Typography>\r\n            This section compares the performance of an artificially created normal distribution from the uniform\r\n            distribution provided by Javascript's <code>Math.random()</code>\r\n            &nbsp;function. In order to achieve this, a method called the&nbsp;\r\n            <Link className={'link'} target=\"_blank\" href={'https://en.wikipedia.org/wiki/Box%E2%80%93Muller_transform'}>\r\n              Box-Muller transform\r\n            </Link>\r\n            &nbsp; was used. If we have two uniformly distributed random variables\r\n            <InlineMath>{'U_1'}</InlineMath> and <InlineMath>{'U_2'}</InlineMath>, then:\r\n            <BlockMath>{'Z_0 = R \\\\cos{(\\\\Theta)}'}</BlockMath>\r\n            <BlockMath>{'Z_1 = R \\\\sin{(\\\\Theta)}'}</BlockMath>\r\n            where <InlineMath>{'Z_0'}</InlineMath> and <InlineMath>{'Z_1'}</InlineMath> are normally distributed\r\n            random variables and\r\n            <BlockMath>{'R^2 = -2 \\\\ln{U_1}'}</BlockMath>\r\n            <BlockMath>{'\\\\Theta = 2\\\\pi U_2'}</BlockMath>\r\n            this leads to the final two equations:\r\n            <BlockMath>{'Z_0 = \\\\sqrt{-2\\\\ln{U_1}} \\\\cos{(2\\\\pi U_2)}'}</BlockMath>\r\n            <Tag right={-80} top={-4}>1</Tag>\r\n            <BlockMath>{'Z_1 = \\\\sqrt{-2\\\\ln{U_1}} \\\\sin{(2\\\\pi U_2)}'}</BlockMath>\r\n            <Tag right={-80} top={-4}>2</Tag>\r\n            In the graph below, we can see its performance in a histogram compared to the analytic\r\n            function of the normal distribution:\r\n            <BlockMath>\r\n              {'\\\\large{\\\\mathcal{N}(x \\\\hspace{2pt} ; \\\\hspace{2pt} \\\\mu,\\\\sigma) =' +\r\n              ' \\\\frac{1}{\\\\sqrt{2\\\\pi\\\\sigma^2}}e^{-\\\\frac{(x-\\\\mu)^2}{2\\\\sigma^2}}}'}\r\n            </BlockMath>\r\n            There is also an option to show the source of the random variable by ticking the 'Uniform' legend which\r\n            will show raw output from <code>Math.random()</code>\r\n            . The CDF of our transformed distribution is also shown to further our comparison.\r\n            <br />\r\n            Below the graph, there is a panel that allows you to change the three parameters that define the graph:\r\n            the mean, variance and number of samples.\r\n          </Typography>\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <NormalChart />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <NormalConfig />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Normal;\r\n","import React from 'react';\r\nimport {Grid, Checkbox, FormControlLabel, FormHelperText, FormControl, FormGroup} from '@material-ui/core';\r\nimport SliderInput from './SliderInput';\r\nimport {clip, inputChange, sliderChange, toggleUpdateData, togglePerformanceChart} from '../../actions';\r\nimport {GraphicEq, ScatterPlot, Tune} from '@material-ui/icons';\r\nimport {connect} from 'react-redux';\r\nimport CustomCard from '../CustomCard';\r\n\r\nclass PoissonConfig extends React.Component {\r\n  handleBlur = (valueName, max, name) => {\r\n    this.props.clip(max, valueName, name);\r\n    this.props.toggleUpdateData(name);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <CustomCard title={'Graph Configuration'} avatar={<Tune />}>\r\n        <Grid container>\r\n          <Grid item xs={6}>\r\n            <SliderInput\r\n              label={'Lambda'}\r\n              name={'poisson'}\r\n              valueName={'lambda'}\r\n              value={this.props.lambda.poisson}\r\n              inputChange={this.props.inputChange}\r\n              sliderChange={this.props.sliderChange}\r\n              toggleUpdateData={this.props.toggleUpdateData}\r\n              handleBlur={this.handleBlur}\r\n              max={745}\r\n              icon={<GraphicEq />}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <SliderInput\r\n              label={'Samples'}\r\n              name={'poisson'}\r\n              valueName={'samples'}\r\n              value={this.props.samples.poisson}\r\n              inputChange={this.props.inputChange}\r\n              sliderChange={this.props.sliderChange}\r\n              toggleUpdateData={this.props.toggleUpdateData}\r\n              handleBlur={this.handleBlur}\r\n              max={1000000}\r\n              icon={<ScatterPlot />}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <FormControl component=\"fieldset\" className={'stats__performance-chart'}>\r\n              <FormGroup>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox checked={this.props.performanceChart.poisson} onChange={() => this.props.togglePerformanceChart('poisson')} />\r\n                  }\r\n                  label=\"Performance Chart\"\r\n                />\r\n              </FormGroup>\r\n              <FormHelperText margin=\"dense\">Tick for faster rendering (recommended at high variances)</FormHelperText>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n      </CustomCard>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    lambda: state.lambda,\r\n    samples: state.samples,\r\n    performanceChart: state.performanceChart\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  sliderChange,\r\n  inputChange,\r\n  clip,\r\n  toggleUpdateData,\r\n  togglePerformanceChart\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PoissonConfig);\r\n","import React from 'react';\r\nimport * as am4core from '@amcharts/amcharts4/core';\r\nimport * as am4charts from '@amcharts/amcharts4/charts';\r\nimport dark from '@amcharts/amcharts4/themes/dark';\r\nimport animated from '@amcharts/amcharts4/themes/animated';\r\nimport randomDataGenerator from './randomDataGenerator';\r\nimport * as utils from './utils';\r\nimport {connect} from 'react-redux';\r\nimport {toggleUpdateData} from '../actions';\r\nimport CustomCard from './CustomCard';\r\nimport {BarChart} from '@material-ui/icons';\r\n\r\nclass PoissonChart extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.chart = null;\r\n    am4core.options.commercialLicense = true;\r\n    this.prevPerf = false;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.createChart();\r\n  }\r\n\r\n  createData() {\r\n    const lambda = this.props.lambda.poisson;\r\n    const samples = this.props.samples.poisson;\r\n    let chart_data = randomDataGenerator({\r\n      samples: samples,\r\n      dependent: [\r\n        {\r\n          name: 'column-1',\r\n          mean: lambda,\r\n          rules: ['poisson', 'positive']\r\n        }\r\n      ]\r\n    });\r\n    let d = utils.createHistogram(chart_data);\r\n    //Dealing with negatives is not as easy as it may seem\r\n    let positiveData = d[0];\r\n    let positiveKeys =Object.keys(positiveData);\r\n    let negativeData = d[1];\r\n    let negativeKeys = Object.keys(negativeData).sort((a, b) => {\r\n      return Number(a) - Number(b)\r\n    });\r\n    let keys = negativeKeys.concat(positiveKeys);\r\n    let dummy = [];\r\n    let data = [];\r\n    /**\r\n     * Converts to data object that is readable by amcharts and add analytical and CFD functions\r\n     */\r\n    keys.forEach((item, index) => {\r\n      if (Math.sign(Number(item)) === -1) {\r\n        data = negativeData;\r\n      }\r\n      else {\r\n        data = positiveData;\r\n      }\r\n      let dataPoint = {};\r\n      dataPoint['id'] = Number(item);\r\n      dataPoint['column-1'] = data[item]['column-1'];\r\n      dataPoint['column-2'] = Math.round(utils.Poisson(lambda, parseInt(item, 10)) * samples);\r\n      if (!dummy[0]) {\r\n        dataPoint['column-4'] = dataPoint['column-2'];\r\n      } else {\r\n        dataPoint['column-4'] = dummy[index - 1]['column-4'] + dataPoint['column-2'];\r\n      }\r\n      dummy.push(dataPoint);\r\n    });\r\n    let hasZero = false;\r\n    if (negativeKeys.length !== 0) {\r\n      hasZero = true;\r\n    }\r\n    return [dummy, hasZero];\r\n  }\r\n\r\n  createChart() {\r\n    /* Chart code */\r\n    // Themes begin\r\n    am4core.useTheme(dark);\r\n    if (this.props.performanceChart.poisson) {\r\n      am4core.unuseTheme(animated);\r\n    } else {\r\n      am4core.useTheme(animated);\r\n    }\r\n    // Themes end\r\n\r\n    // Create chart instance\r\n    this.chart = am4core.create(this.refs.poisson_chart, am4charts.XYChart);\r\n    let chart = this.chart;\r\n    chart.categoryField = 'category';\r\n\r\n    // Add data\r\n    let dummy = this.createData();\r\n    chart.data = dummy[0];\r\n    let hasZero = dummy[1];\r\n\r\n    // Create axes\r\n    let xAxis = chart.xAxes.push(new am4charts.CategoryAxis());\r\n    xAxis.id = 'xAxis';\r\n    xAxis.dataFields.category = 'id';\r\n    xAxis.renderer.grid.strokeDasharray = 3;\r\n    // Zero line\r\n    this.range = xAxis.axisRanges.create();\r\n    this.range.category = hasZero ? 0 : undefined;\r\n    this.range.label.paddingTop = 2;\r\n    this.range.label.fontSize = 12;\r\n    this.range.grid.stroke = am4core.color(\"grey\");\r\n    this.range.grid.strokeWidth = 1;\r\n    this.range.grid.strokeOpacity = 0.7;\r\n    let yAxis1 = chart.yAxes.push(new am4charts.ValueAxis());\r\n    yAxis1.renderer.grid.strokeDasharray = 3;\r\n\r\n    let colorSet = new am4core.ColorSet();\r\n    let yAxis2 = chart.yAxes.push(new am4charts.ValueAxis());\r\n    yAxis2.renderer.grid.template.disabled = true;\r\n    yAxis2.renderer.line.strokeOpacity = 1;\r\n    yAxis2.renderer.line.stroke = colorSet.getIndex(3);\r\n    yAxis2.renderer.line.strokeWidth = 2;\r\n    yAxis2.renderer.opposite = true;\r\n\r\n    // Create series\r\n    let poissonITS = chart.series.push(\r\n      this.props.performanceChart.poisson ? new am4charts.StepLineSeries() : new am4charts.ColumnSeries()\r\n    );\r\n    poissonITS.name = 'Poisson (inverse transform sampling)';\r\n    poissonITS.dataFields.valueY = 'column-1';\r\n    poissonITS.dataFields.categoryX = 'id';\r\n    poissonITS.strokeWidth = 1;\r\n    poissonITS.fillOpacity = 1;\r\n    poissonITS.tensionX = 1;\r\n    if (!this.props.performanceChart.poisson) {\r\n      poissonITS.columns.template.width = am4core.percent(80);\r\n      poissonITS.fillOpacity = 0;\r\n    }\r\n\r\n    let poisson = chart.series.push(new am4charts.LineSeries());\r\n    poisson.name = 'Poisson (analytical)';\r\n    poisson.dataFields.valueY = 'column-2';\r\n    poisson.dataFields.categoryX = 'id';\r\n    poisson.strokeWidth = 1;\r\n    poisson.tensionX = 1;\r\n\r\n    let cfd = chart.series.push(new am4charts.LineSeries());\r\n    cfd.name = 'CDF (analytical)';\r\n    cfd.dataFields.valueY = 'column-4';\r\n    cfd.dataFields.categoryX = 'id';\r\n    cfd.strokeWidth = 1;\r\n    cfd.tensionX = 1;\r\n    cfd.yAxis = yAxis2;\r\n\r\n    // Add cursor\r\n    chart.cursor = new am4charts.XYCursor();\r\n\r\n    // Create legend\r\n    chart.legend = new am4charts.Legend();\r\n    let markers = chart.legend.markers.template;\r\n    markers.width = 12;\r\n    markers.height = 12;\r\n    let container = chart.legend.itemContainers.template;\r\n    container.paddingRight = 5;\r\n    container.paddingLeft = 5;\r\n    container.paddingTop = 0;\r\n    container.paddingBottom = 0;\r\n\r\n    // Add padding\r\n    chart.paddingBottom = 20;\r\n    chart.paddingTop = 40;\r\n  }\r\n\r\n  render() {\r\n    if (this.props.updateData.poisson) {\r\n      if (this.props.performanceChart.poisson && this.prevPerf !== this.props.performanceChart.poisson) {\r\n        am4core.options.queue = true;\r\n        am4core.options.minPolylineStep = 5;\r\n        this.prevPerf = !this.prevPerf;\r\n        this.createChart();\r\n      } else if (!this.props.performanceChart.poisson && this.prevPerf !== this.props.performanceChart.poisson) {\r\n        am4core.options.queue = false;\r\n        am4core.options.minPolylineStep = 0.5;\r\n        this.prevPerf = !this.prevPerf;\r\n        this.createChart();\r\n      } else if (this.props.updateData.poisson) {\r\n        // Resets zero line if zero not in view\r\n        let dummy = this.createData();\r\n        this.chart.data = dummy[0];\r\n        let hasZero = dummy[1];\r\n        this.range.category = hasZero ? 0 : undefined;\r\n        this.range.grid.strokeOpacity = hasZero ? 0.7 : 0;\r\n      }\r\n      this.props.toggleUpdateData('poisson');\r\n    }\r\n    return (\r\n      <CustomCard title={'Poisson Probability Distribution Histograms'} avatar={<BarChart />}>\r\n        <div className={'stats__chart'} ref={'poisson_chart'} />\r\n      </CustomCard>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    lambda: state.lambda,\r\n    samples: state.samples,\r\n    updateData: state.updateData,\r\n    performanceChart: state.performanceChart\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  toggleUpdateData\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PoissonChart);\r\n","import React from 'react';\r\nimport PoissonConfig from './components/configDashboards/PoissonConfig';\r\nimport {Paper, Grid, Typography, Link} from '@material-ui/core';\r\nimport {InlineMath, BlockMath} from 'react-katex';\r\nimport 'katex/dist/katex.min.css';\r\nimport PoissonChart from './components/PoissonChart';\r\nimport Tag from './components/Tag';\r\n\r\nfunction Poisson() {\r\n  return (\r\n    <Grid container spacing={3} className={'stats__grid'}>\r\n      <Grid item xs={12}>\r\n        <Paper className={'stats__text'}>\r\n          <Typography variant={'h4'} align={'center'} gutterBottom={true}>\r\n            Transforming Random Variable Distributions <br /> &nbsp;\r\n          </Typography>\r\n          <Typography variant={'h6'} align={'center'} gutterBottom={true}>\r\n            Poisson distributions\r\n          </Typography>\r\n          <Typography>\r\n            We now turn to the Poisson distribution, another very prominent distribution that describes random events\r\n            happening at a constant rate independently of time. The analytic function is:\r\n            <BlockMath>\r\n              {'\\\\large{\\\\text{Po}(x\\\\hspace{2pt} ; \\\\hspace{2pt} \\\\lambda) = \\\\frac{\\\\lambda^x}{x!}e^{-\\\\lambda}}'}\r\n            </BlockMath>\r\n            To transform our uniform distribution to a Poisson one, we can use the Knuth algorithm or we can use\r\n            inverse transform sampling to obtain a practical estimate to the analytic distribution (\r\n            <Link className={'link'} target=\"_blank\" href={'https://en.wikipedia.org/wiki/Poisson_distribution#Generating_Poisson-distributed_random_variables'}>\r\n              source\r\n            </Link>). Since the Knuth algorithm can have underflow errors at high <InlineMath>{'\\\\lambda'}</InlineMath>\r\n            &nbsp; due to the very small <InlineMath>{'e^{\\\\lambda}'}</InlineMath>, another algorithm is also used that\r\n            uses a smallest value of <InlineMath>{'e^{-\\\\lambda}'}</InlineMath> using a separate parameter &nbsp;\r\n            <InlineMath>{'{\\\\footnotesize{\\\\text{STEP}}}'}</InlineMath>.\r\n          </Typography>\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <PoissonChart />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <PoissonConfig />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Poisson;\r\n","import React from 'react';\r\nimport * as am4core from '@amcharts/amcharts4/core';\r\nimport * as am4charts from '@amcharts/amcharts4/charts';\r\nimport dark from '@amcharts/amcharts4/themes/dark';\r\nimport animated from '@amcharts/amcharts4/themes/animated';\r\nimport randomDataGenerator from './components/randomDataGenerator';\r\nimport CustomCard from './components/CustomCard';\r\nimport * as utils from './components/utils';\r\nimport {BarChart} from '@material-ui/icons';\r\nimport {Grid, Paper, Typography} from '@material-ui/core';\r\n\r\nexport default class SpikeTrain extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.chart = null;\r\n    am4core.options.commercialLicense = true;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.createChart();\r\n  }\r\n\r\n  createData() {\r\n    const samples = 10;\r\n    const mean = 10;\r\n    const st_div = 10;\r\n    let chart_data = randomDataGenerator({\r\n      samples: samples,\r\n      variance_divisor: mean / st_div,\r\n      isStatic: true,\r\n      independent: 'id',\r\n      rules: ['positive'],\r\n      dependent: [{name: 'column-1', typical: mean, rules: []}]\r\n    });\r\n    return chart_data;\r\n  }\r\n\r\n  createChart() {\r\n    /* Chart code */\r\n    // Themes begin\r\n    am4core.useTheme(dark);\r\n    am4core.useTheme(animated);\r\n    // Themes end\r\n\r\n    // Create chart instance\r\n    let chart = am4core.create(this.refs.chart, am4charts.XYChart);\r\n    chart.categoryField = 'category';\r\n\r\n    // Add data\r\n    chart.data = this.createData();\r\n\r\n    // Create axes\r\n    let xAxis = chart.xAxes.push(new am4charts.CategoryAxis());\r\n    xAxis.id = 'xAxis';\r\n    xAxis.dataFields.category = 'id';\r\n    xAxis.renderer.grid.strokeDasharray = 3;\r\n\r\n    let yAxis1 = chart.yAxes.push(new am4charts.ValueAxis());\r\n    yAxis1.renderer.grid.strokeDasharray = 3;\r\n\r\n    // Create series\r\n    let spikes = chart.series.push(new am4charts.ColumnSeries());\r\n    spikes.name = 'Spike Train';\r\n    spikes.dataFields.valueY = 'column-1';\r\n    spikes.dataFields.categoryX = 'id';\r\n    spikes.columns.template.width = am4core.percent(1);\r\n    spikes.strokeWidth = 1;\r\n    spikes.tensionX = 1;\r\n    spikes.fillOpacity = 0;\r\n    spikes.stroke = am4core.color('#FF8000');\r\n\r\n    // Add cursor\r\n    chart.cursor = new am4charts.XYCursor();\r\n\r\n    // Create legend\r\n    chart.legend = new am4charts.Legend();\r\n    let markers = chart.legend.markers.template;\r\n    markers.width = 12;\r\n    markers.height = 12;\r\n    let container = chart.legend.itemContainers.template;\r\n    container.paddingRight = 5;\r\n    container.paddingLeft = 5;\r\n    container.paddingTop = 0;\r\n    container.paddingBottom = 0;\r\n\r\n    // Chart padding\r\n    chart.paddingTop = 50;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Grid container spacing={3} className={'stats__grid'}>\r\n        <Grid item xs={12}>\r\n          <Paper className={'stats__text'}>\r\n            <Typography variant={'h4'} align={'center'} gutterBottom={true}>\r\n              Spike Trains <br /> &nbsp;\r\n            </Typography>\r\n            <Typography align={'center'} gutterBottom={true}>\r\n              This section is still under development.\r\n            </Typography>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <CustomCard title={'Spike Train'} avatar={<BarChart />}>\r\n            <div className=\"stats__chart\" ref={'chart'} />\r\n          </CustomCard>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n","import {Grid, Link, Paper, Typography} from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nexport default class IPython extends React.Component {\r\n  render() {\r\n    return (\r\n      <Grid container spacing={3} className={'stats__grid'}>\r\n        <Grid item xs={12}>\r\n          <Paper className={'stats__text'}>\r\n            <Typography variant={'h4'} align={'center'} gutterBottom={true}>\r\n              Google Colab notebooks: <br/> <br/>\r\n            </Typography>\r\n            <Typography variant={'h6'} align={'center'} gutterBottom={true}>\r\n              <Link className={'link'} target=\"_blank\" href={'http://bit.ly/2MLMApR'}>\r\n                Gradient descent and Backpropagation\r\n              </Link>\r\n              <br/>\r\n              <Link className={'link'} target=\"_blank\" href={'http://bit.ly/2METBIW'}>\r\n                Regularisation and Cross-Entropy\r\n              </Link>\r\n              <br/>\r\n              <Link className={'link'} target=\"_blank\" href={'http://bit.ly/2QG9HnC'}>\r\n              k-means Clustering\r\n              </Link>\r\n            </Typography>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport {Vector} from './components/utils'\r\nimport {Paper} from '@material-ui/core';\r\n\r\nexport default class RayTracing extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      refractiveIndex: 1.33,\r\n      shootDelay: 300\r\n    };\r\n    this.source = new Vector(null, null);\r\n    this.view = new Vector(null, null);\r\n    this.addMode = false;\r\n    this.objects = [];\r\n    this.normals = [];\r\n    this.frame_on = true;\r\n    this.dist = 0;\r\n    this.recursionDepth = 3;\r\n    this.numberOfRays = 0;\r\n    this.refraction = true;\r\n    this.showNormals = false;\r\n    this.popped = false;\r\n    this.polyDraw = false;\r\n    this.addedFirstVertex = false;\r\n    this.multiRayMode = false;\r\n    this.polyRadius = 50;\r\n    this.polyN = 8;\r\n    this.polyAngle = 0;\r\n    this.multiRayN = 12;\r\n    this.shootMode = false;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.cvs = document.getElementById('canvas');\r\n    this.ctx = this.cvs.getContext('2d');\r\n\r\n    this.frame = [new Vector(0, 0), new Vector(0, this.cvs.height),\r\n      new Vector(this.cvs.width, this.cvs.height), new Vector(this.cvs.width, 0)];\r\n    this.frame_normals = [new Vector(1, 0), new Vector(0, 1),\r\n      new Vector(-1, 0), new Vector(0, -1)];\r\n\r\n    this.cvs.addEventListener(\"mousedown\", this.clicked);\r\n    this.cvs.addEventListener(\"mousemove\", this.onMouseMove);\r\n    document.addEventListener(\"keydown\", this.addObject);\r\n    document.addEventListener('wheel', this.onScroll);\r\n\r\n    this.recursionDepthText = document.getElementById('recursionDepth');\r\n    this.objectsText = document.getElementById('objects');\r\n    this.edgesText = document.getElementById('edges');\r\n    this.frameText = document.getElementById('frame');\r\n    this.raysText = document.getElementById('rays');\r\n    this.refractionText = document.getElementById('refraction');\r\n    this.normalsText = document.getElementById('normals');\r\n    this.polyDrawText = document.getElementById('polyDraw');\r\n    this.multiRayText = document.getElementById('multiRay');\r\n    this.shootModeText = document.getElementById('shootMode');\r\n\r\n    this.recursionDepthText.innerHTML = \"Recursion depth: \" + this.recursionDepth.toString();\r\n    this.objectsText.innerHTML = \"Number of objects: \" + this.objects.length.toString();\r\n    this.edgesText.innerHTML = \"Number of edges: \" + this.normals.length.toString();\r\n    this.frameText.innerHTML = \"Frame (F): \" + (this.frame_on ? \"On\" : \"Off\");\r\n    this.raysText.innerHTML = \"Number of rays: \" + this.numberOfRays.toString();\r\n    this.refractionText.innerHTML = \"Refraction (T): \" + (this.refraction ? \"On\" : \"Off\");\r\n    this.normalsText.innerHTML = \"Surface normals (S): \" + (this.showNormals ? \"On\" : \"Off\");\r\n    this.polyDrawText.innerHTML = \"Polygon draw mode (P): \" + (this.polyDraw ?\r\n      \"On (N=\"+this.polyN.toString()+\", R=\"+this.polyRadius.toString()+\", \" +\r\n      \"θ=\"+(this.round((this.polyAngle*(180/Math.PI)%360), 3)).toString()+\"°)\"  : \"Off\");\r\n    this.multiRayText.innerHTML = \"Multi-ray mode (M): \" + (this.multiRayMode ? \"On (N:\"+this.multiRayN.toString()+\")\" : \"Off\");\r\n    this.shootModeText.innerHTML = \"Shoot mode (Q): \" + (this.shootMode ? \"On\" : \"Off\");\r\n  }\r\n\r\n  calculateIntersect(a, b, c, d){\r\n    let p = b.vMinus(a);\r\n    let q = c.vMinus(a);\r\n    let r = d.vMinus(c);\r\n\r\n    let mu = this.round((p.y*q.x - p.x*q.y) / (p.x*r.y - p.y*r.x), 5);\r\n    let lambda = 0;\r\n    if (p.y === 0) {\r\n      lambda = this.round((q.x + r.x*mu) / p.x, 5);\r\n    }\r\n    else{\r\n      lambda = this.round((q.y + r.y*mu) / p.y, 5);\r\n    }\r\n    if (mu <= 1 && mu >= 0 && lambda > 0) {\r\n      return c.vPlus(r.mult(mu))\r\n    }\r\n  }\r\n\r\n  round(x, d) {\r\n    return Math.round(x*Math.pow(10, d))/Math.pow(10, d);\r\n  }\r\n\r\n\r\n\r\n  reflect(a, b){\r\n    return a.vMinus(b.mult(2*a.dot(b)))\r\n  }\r\n\r\n  refract(a, b, n){\r\n    a.normalise();\r\n\r\n    let cosi = Math.min(Math.max(a.dot(b), -1), 1);\r\n    let etai = 1;\r\n    let etat = n;\r\n    let N = b;\r\n    if (cosi < 0){\r\n      cosi = -cosi;\r\n    }\r\n    else {\r\n      let temp = etai;\r\n      etai = etat;\r\n      etat = temp;\r\n      N = b.mult(-1);\r\n    }\r\n    let eta = etai / etat;\r\n    let k = 1 - (eta * eta) * (1 - (cosi * cosi));\r\n    if (k <= 0){\r\n      return new Vector(0, 0)\r\n    }\r\n    else {\r\n      return a.mult(eta).vPlus(N.mult((eta * cosi) - Math.sqrt(k)))\r\n    }\r\n  }\r\n\r\n  drawLine(a, b){\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(...a.p);\r\n    this.ctx.lineTo(...b.p);\r\n    this.ctx.closePath();\r\n    this.ctx.strokeStyle = 'rgb(255, 255, 255)';\r\n    this.ctx.stroke();\r\n  }\r\n\r\n  drawCircle(a, r){\r\n    this.ctx.beginPath();\r\n    this.ctx.arc(...a.p, r, 0, 2 * Math.PI);\r\n    this.ctx.fillStyle = 'rgb(0, 0, 255)';\r\n    this.ctx.fill();\r\n  }\r\n\r\n  drawArrow(a, r, d){\r\n    this.ctx.moveTo(...a.p);\r\n    r.normalise();\r\n    r = r.mult(d);\r\n    let t = r.vPlus(a);\r\n    this.ctx.lineTo(...t.p);\r\n    let angle = Math.atan2(t.y - a.y, t.x - a.x);\r\n    let head1 = new Vector(Math.cos(angle + Math.PI / 6), Math.sin(angle + Math.PI / 6)).mult(d/5);\r\n    let head2 = new Vector(Math.cos(angle - Math.PI / 6), Math.sin(angle - Math.PI / 6)).mult(d/5);\r\n    this.ctx.lineTo(...t.vMinus(head1).p);\r\n    this.ctx.moveTo(...t.p);\r\n    this.ctx.lineTo(...t.vMinus(head2).p);\r\n  }\r\n\r\n  drawPolygon(a, r, n, angle, getVector){\r\n    this.ctx.beginPath();\r\n    let theta = Math.PI * (2 / n);\r\n    //angle = angle % theta;\r\n    let segment = 2*r*Math.sin(angle/2);\r\n    let phi = (Math.PI / 8) - (angle / 2);\r\n    let d = 2*r*Math.sin(theta/2);\r\n    let x = a.x - d/2 + segment*Math.cos(phi);\r\n    let y = a.y - r - segment*Math.sin(phi);\r\n    let polyVector = [new Vector(x, y)];\r\n    let polyNormals = [];\r\n    this.ctx.moveTo(x, y);\r\n    for (let i=0; i<n-1; i++){\r\n      x += d * Math.cos(i*theta + angle);\r\n      y += d * Math.sin( i*theta + angle);\r\n      if (getVector) {\r\n        polyVector.push(new Vector(x, y));\r\n        polyNormals.push(this.calculateNormal(polyVector[polyVector.length-2], polyVector[polyVector.length-1]));\r\n      }\r\n      else {\r\n        this.ctx.lineTo(x, y);\r\n      }\r\n    }\r\n    this.ctx.closePath();\r\n    this.ctx.stroke();\r\n    if (getVector) {\r\n      polyNormals.push(this.calculateNormal(polyVector[polyVector.length-1], polyVector[0]));\r\n      return [polyVector, polyNormals]\r\n    }\r\n  }\r\n\r\n  recursiveReflection = (start, target, n) => {\r\n    // Takes in the previous reflection point or source and the reflected ray or viewing direction\r\n    // Initialise with source and viewing direction\r\n    // n is recursion depth\r\n    if (n === 0){\r\n      return 1\r\n    }\r\n\r\n    // Calculate all intersections\r\n    let intersections = [];\r\n    for (let i=0; i<this.objects.length; i++){\r\n      for (let j=1; j<this.objects[i].length; j++){\r\n        intersections.push(this.calculateIntersect(start, target, this.objects[i][j-1], this.objects[i][j]));\r\n      }\r\n      // Add last intersection (between first and last vertex) if not a line segment\r\n      if (this.objects[i].length > 2) {\r\n        intersections.push(this.calculateIntersect(start, target, this.objects[i][this.objects[i].length-1], this.objects[i][0]));\r\n      }\r\n    }\r\n    if (this.frame.length > 0) {\r\n      for (let i = 1; i < this.frame.length; i++) {\r\n        intersections.push(this.calculateIntersect(start, target, this.frame[i - 1], this.frame[i]));\r\n      }\r\n      intersections.push(this.calculateIntersect(start, target, this.frame[this.frame.length-1], this.frame[0]));\r\n    }\r\n\r\n    // Find intersection closest to reflection point\r\n    let minDist = 100000000;\r\n    let nearestIntersectIndex = -1;\r\n    let dist = 0;\r\n    for (let i=0; i<intersections.length; i++){\r\n      if (intersections[i]) {\r\n        dist = intersections[i].vMinus(start).l22;\r\n        if (dist < minDist){\r\n          nearestIntersectIndex = i;\r\n          minDist = dist;\r\n        }\r\n      }\r\n    }\r\n    if (nearestIntersectIndex >= 0) {\r\n      // Draw intersection and reflection ray\r\n      this.drawLine(start, intersections[nearestIntersectIndex]);\r\n      this.numberOfRays++;\r\n      let normal = new Vector(null, null);\r\n      if (nearestIntersectIndex >= this.normals.length) {\r\n        normal = this.frame_normals[nearestIntersectIndex - this.normals.length];\r\n      }\r\n      else {\r\n        normal = this.normals[nearestIntersectIndex]\r\n      }\r\n      if (!normal) {\r\n        normal = this.frame_normals[nearestIntersectIndex - this.normals.length - 1];\r\n      }\r\n      this.drawCircle(intersections[nearestIntersectIndex], 4);\r\n      let reflectedRay = this.reflect(intersections[nearestIntersectIndex].vMinus(start),\r\n        normal).vPlus(intersections[nearestIntersectIndex]);\r\n      if (this.shootMode){\r\n        setTimeout( () => {\r\n          this.recursiveReflection(intersections[nearestIntersectIndex], reflectedRay, n - 1)\r\n        }, this.state.shootDelay);\r\n        if (this.refraction) {\r\n          let refractedRay = this.refract(intersections[nearestIntersectIndex].vMinus(start),\r\n            normal,this.state.refractiveIndex).vPlus(intersections[nearestIntersectIndex]);\r\n          setTimeout(  () => {\r\n            this.recursiveReflection(intersections[nearestIntersectIndex], refractedRay, n - 1)\r\n          }, this.state.shootDelay);\r\n        }\r\n      }\r\n      else {\r\n        this.recursiveReflection(intersections[nearestIntersectIndex], reflectedRay, n - 1);\r\n        if (this.refraction) {\r\n          let refractedRay = this.refract(intersections[nearestIntersectIndex].vMinus(start),\r\n            normal,this.state.refractiveIndex).vPlus(intersections[nearestIntersectIndex]);\r\n          this.recursiveReflection(intersections[nearestIntersectIndex], refractedRay, n - 1);\r\n        }\r\n      }\r\n\r\n\r\n    }\r\n  };\r\n\r\n\r\n  calculateNormal(a, b){\r\n    let c = b.vMinus(a);\r\n    let n = new Vector(c.y, -c.x);\r\n    n.normalise();\r\n    return n;\r\n  }\r\n\r\n  clicked = (event) =>{\r\n    let rect = this.cvs.getBoundingClientRect();\r\n    if (!this.addMode && !this.polyDraw) {\r\n      this.source.set(event.x - rect.left, event.y - rect.top);\r\n      this.draw();\r\n    }\r\n    else if (this.polyDraw) {\r\n      let poly = this.drawPolygon(new Vector(event.x - rect.left, event.y - rect.top), this.polyRadius, this.polyN, this.polyAngle, true);\r\n      this.objects.push(poly[0]);\r\n      this.normals.push(...poly[1]);\r\n      this.objectsText.innerHTML = \"Number of objects: \" + this.objects.length.toString();\r\n      this.edgesText.innerHTML = \"Number of edges: \" + this.normals.length.toString();\r\n    }\r\n    else {\r\n      if (!this.addedFirstVertex) {\r\n        this.objects.push([]);\r\n        this.addedFirstVertex = true;\r\n      }\r\n      this.objects[this.objects.length - 1].push(new Vector(event.x - rect.left, event.y - rect.top));\r\n      if (this.objects[this.objects.length - 1].length > 1) {\r\n        this.normals.push(this.calculateNormal(this.objects[this.objects.length - 1][this.objects[this.objects.length - 1].length - 1],\r\n          this.objects[this.objects.length - 1][this.objects[this.objects.length - 1].length - 2]));\r\n        this.edgesText.innerHTML = \"Number of edges: \" + this.normals.length.toString();\r\n      }\r\n      this.draw();\r\n    }\r\n  };\r\n\r\n  onScroll = (event) =>{\r\n    if (this.polyDraw) {\r\n      if (!(this.polyN === 3 && event.deltaY > 0)){\r\n        this.polyN -= event.deltaY / 200;\r\n        this.polyDrawText.innerHTML = \"Polygon draw mode (P): \" + (this.polyDraw ?\r\n          \"On (N=\"+this.polyN.toString()+\", R=\"+this.polyRadius.toString()+\", \" +\r\n          \"θ=\"+(this.round((this.polyAngle*(180/Math.PI)%360), 3)).toString()+\"°)\"  : \"Off\");\r\n        this.draw();\r\n      }\r\n    }\r\n    if (this.multiRayMode) {\r\n      if (!(this.multiRayN === 1 && event.deltaY > 0)){\r\n        this.multiRayN -= event.deltaY / 200;\r\n        this.multiRayText.innerHTML = \"Multi-ray mode (M): \" + (this.multiRayMode ? \"On (N:\"+this.multiRayN.toString()+\")\" : \"Off\");\r\n        this.draw();\r\n      }\r\n    }\r\n  };\r\n\r\n  onMouseMove = (event) => {\r\n    if (!(this.addMode && !this.polyDraw)) {\r\n      let rect = this.cvs.getBoundingClientRect();\r\n      this.view.set(event.x - rect.left , event.y - rect.top);\r\n      if (!this.shootMode){\r\n        this.draw();\r\n      }\r\n    }\r\n  };\r\n\r\n  addObject = (event) => {\r\n    if (event.keyCode === 65) {\r\n      this.addMode = !this.addMode;\r\n      if (this.addMode) {\r\n        this.addedFirstVertex = false;\r\n        this.draw();\r\n      }\r\n      if (!this.addMode) {\r\n        if (this.objects.length > 0) {\r\n          if (this.objects[this.objects.length - 1].length > 2) {\r\n            this.normals.push(this.calculateNormal(this.objects[this.objects.length - 1][0],\r\n              this.objects[this.objects.length - 1][this.objects[this.objects.length - 1].length - 1]));\r\n            this.edgesText.innerHTML = \"Number of edges: \" + this.normals.length.toString();\r\n            this.objectsText.innerHTML = \"Number of objects: \" + this.objects.length.toString();\r\n          } else if (this.objects[this.objects.length - 1].length === 2) {\r\n            this.objectsText.innerHTML = \"Number of objects: \" + this.objects.length.toString();\r\n          }\r\n          else {\r\n            this.objects.pop();\r\n          }\r\n        }\r\n        this.draw();\r\n      }\r\n    }\r\n    if (event.keyCode === 70) {\r\n      if (this.frame_on){\r\n        this.frame = [];\r\n        this.frame_normals = [];\r\n      }\r\n      else {\r\n        this.frame.push(new Vector(0, 0), new Vector(0, this.cvs.height),\r\n          new Vector(this.cvs.width, this.cvs.height), new Vector(this.cvs.width, 0));\r\n        this.frame_normals.push(new Vector(1, 0), new Vector(0, 1),\r\n          new Vector(-1, 0), new Vector(0, -1));\r\n      }\r\n      this.frame_on = !this.frame_on;\r\n      this.frameText.innerHTML = \"Frame (F): \" + (this.frame_on ? \"On\" : \"Off\");\r\n      this.draw();\r\n    }\r\n    if (event.keyCode === 37) {\r\n      if (this.polyDraw) {\r\n        this.polyAngle -= Math.PI / 16;\r\n        this.polyDrawText.innerHTML = \"Polygon draw mode (P): \" + (this.polyDraw ?\r\n          \"On (N=\"+this.polyN.toString()+\", R=\"+this.polyRadius.toString()+\", \" +\r\n          \"θ=\"+(this.round((this.polyAngle*(180/Math.PI)%360), 3)).toString()+\"°)\"  : \"Off\");\r\n      }\r\n      this.draw();\r\n    }\r\n    if (event.keyCode === 38) {\r\n      if (this.polyDraw) {\r\n        this.polyRadius += 10;\r\n        this.polyDrawText.innerHTML = \"Polygon draw mode (P): \" + (this.polyDraw ?\r\n          \"On (N=\"+this.polyN.toString()+\", R=\"+this.polyRadius.toString()+\", \" +\r\n          \"θ=\"+(this.round((this.polyAngle*(180/Math.PI)%360), 3)).toString()+\"°)\"  : \"Off\");\r\n      }\r\n      else {\r\n        this.recursionDepth++;\r\n        this.recursionDepthText.innerHTML = \"Recursion depth: \" + this.recursionDepth.toString();\r\n      }\r\n      this.draw();\r\n    }\r\n    if (event.keyCode === 39) {\r\n      if (this.polyDraw) {\r\n        this.polyAngle += Math.PI / 16;\r\n        this.polyDrawText.innerHTML = \"Polygon draw mode (P): \" + (this.polyDraw ?\r\n          \"On (N=\"+this.polyN.toString()+\", R=\"+this.polyRadius.toString()+\", \" +\r\n          \"θ=\"+(this.round((this.polyAngle*(180/Math.PI)%360), 3)).toString()+\"°)\"  : \"Off\");\r\n      }\r\n      this.draw();\r\n    }\r\n    if (event.keyCode === 40) {\r\n      if (this.polyDraw) {\r\n        if (this.polyRadius >= 20) {\r\n          this.polyRadius -= 10;\r\n          this.polyDrawText.innerHTML = \"Polygon draw mode (P): \" + (this.polyDraw ?\r\n            \"On (N=\"+this.polyN.toString()+\", R=\"+this.polyRadius.toString()+\", \" +\r\n            \"θ=\"+(this.round((this.polyAngle*(180/Math.PI)%360), 3)).toString()+\"°)\"  : \"Off\");\r\n        }\r\n      }\r\n      else {\r\n        if (this.recursionDepth !== 1) {\r\n          this.recursionDepth--;\r\n          this.recursionDepthText.innerHTML = \"Recursion depth: \" + this.recursionDepth.toString();\r\n        }\r\n      }\r\n      this.draw();\r\n    }\r\n    if (event.keyCode === 82) {\r\n      if (this.polyDraw){\r\n        this.polyRadius = 50;\r\n        this.polyN = 8;\r\n        this.polyAngle = 0;\r\n        this.polyDrawText.innerHTML = \"Polygon draw mode (P): \" + (this.polyDraw ?\r\n          \"On (N=\"+this.polyN.toString()+\", R=\"+this.polyRadius.toString()+\", \" +\r\n          \"θ=\"+(this.round((this.polyAngle*(180/Math.PI)%360), 3)).toString()+\"°)\"  : \"Off\");\r\n      }\r\n      else {\r\n        this.recursionDepth = 3;\r\n        this.recursionDepthText.innerHTML = \"Recursion depth: \" + this.recursionDepth.toString();\r\n        this.multiRayN = 12;\r\n        this.multiRayText.innerHTML = \"Multi-ray mode (M): \" + (this.multiRayMode ? \"On (N:\"+this.multiRayN.toString()+\")\" : \"Off\");\r\n      }\r\n      this.draw();\r\n    }\r\n    if (event.keyCode === 67) {\r\n      this.objects = [];\r\n      this.normals = [];\r\n      this.objectsText.innerHTML = \"Number of objects: \" + this.objects.length.toString();\r\n      this.edgesText.innerHTML = \"Number of edges: \" + this.normals.length.toString();\r\n      this.draw();\r\n    }\r\n    if (event.keyCode === 84) {\r\n      this.refraction = !this.refraction;\r\n      this.refractionText.innerHTML = \"Refraction (T): \" + (this.refraction ? \"On\" : \"Off\");\r\n      this.draw();\r\n    }\r\n    if (event.keyCode === 83) {\r\n      this.showNormals = !this.showNormals;\r\n      this.normalsText.innerHTML = \"Surface normals (S): \" + (this.showNormals ? \"On\" : \"Off\");\r\n      if (this.addMode && (!(this.objects.length > 0) || !(this.objects[this.objects.length - 1].length > 0))){\r\n        this.objects.pop();\r\n        this.popped = !this.popped;\r\n      }\r\n      this.draw();\r\n    }\r\n    if (event.keyCode === 80) {\r\n      this.polyDraw = !this.polyDraw;\r\n      this.polyDrawText.innerHTML = \"Polygon draw mode (P): \" + (this.polyDraw ?\r\n        \"On (N=\"+this.polyN.toString()+\", R=\"+this.polyRadius.toString()+\", \" +\r\n        \"θ=\"+(this.round((this.polyAngle*(180/Math.PI)%360), 3)).toString()+\"°)\"  : \"Off\");\r\n      this.draw();\r\n    }\r\n    if (event.keyCode === 77) {\r\n      this.multiRayMode = !this.multiRayMode;\r\n      this.multiRayText.innerHTML = \"Multi-ray mode (M): \" + (this.multiRayMode ? \"On (N:\"+this.multiRayN.toString()+\")\" : \"Off\");\r\n      this.draw();\r\n    }\r\n    if (event.keyCode === 81) {\r\n      this.shootMode = !this.shootMode;\r\n      this.shootModeText.innerHTML = \"Shoot mode (Q): \" + (this.shootMode ? \"On\" : \"Off\");\r\n      this.draw();\r\n    }\r\n    if (event.keyCode === 32) {\r\n      if (this.shootMode) {\r\n        this.draw();\r\n      }\r\n    }\r\n  };\r\n\r\n  draw_border(){\r\n    this.ctx.clearRect(0, 0, this.cvs.width, this.cvs.height);\r\n    // Draw frame\r\n    if (this.frame.length > 0) {\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(...this.frame[0].p);\r\n      for (let i = 1; i < this.frame.length; i++) {\r\n        this.ctx.lineTo(...this.frame[i].p);\r\n      }\r\n      this.ctx.closePath();\r\n      this.ctx.strokeStyle = 'rgb(255, 0, 0)';\r\n      this.ctx.lineWidth = 4;\r\n      this.ctx.stroke();\r\n      this.ctx.strokeStyle = 'rgb(0, 0, 0)';\r\n      this.ctx.lineWidth = 1;\r\n    }\r\n    else {\r\n      this.ctx.lineWidth = 4;\r\n      this.ctx.strokeStyle = 'rgb(255, 255, 255)';\r\n      this.ctx.strokeRect(0, 0, this.cvs.width, this.cvs.height);\r\n      this.ctx.lineWidth = 1;\r\n    }\r\n  }\r\n\r\n  drawNormals(){\r\n    let k = 0;\r\n    this.ctx.beginPath();\r\n    for (let i = 0; i < this.objects.length; i++) {\r\n      for (let j = 1; j < this.objects[i].length; j++) {\r\n        this.drawArrow(this.objects[i][j].vPlus(this.objects[i][j-1]).mult(0.5), this.normals[k], 30);\r\n        k++;\r\n      }\r\n      if (this.objects[i].length > 2){\r\n        if (!this.normals[k]) {\r\n          this.drawArrow(this.objects[i][0].vPlus(this.objects[i][this.objects[i].length-1]).mult(0.5),\r\n            this.calculateNormal(this.objects[i][0], this.objects[i][this.objects[i].length - 1]) ,30);\r\n        }\r\n        else {\r\n          this.drawArrow(this.objects[i][0].vPlus(this.objects[i][this.objects[i].length-1]).mult(0.5), this.normals[k], 30);\r\n        }\r\n        k++;\r\n      }\r\n    }\r\n    this.ctx.closePath();\r\n    this.ctx.strokeStyle = 'rgb(255, 255, 255)';\r\n    this.ctx.stroke();\r\n  }\r\n\r\n  drawObjects(){\r\n    if (this.objects.length > 0) {\r\n      if (this.objects[this.objects.length - 1].length > 0) {\r\n        for (let i = 0; i < this.objects.length; i++) {\r\n          this.ctx.beginPath();\r\n          this.ctx.moveTo(...this.objects[i][0].p);\r\n          for (let j = 1; j < this.objects[i].length; j++) {\r\n            this.ctx.lineTo(...this.objects[i][j].p);\r\n          }\r\n          this.ctx.closePath();\r\n          this.ctx.strokeStyle = 'rgb(255, 255, 255)';\r\n          this.ctx.stroke();\r\n          if (this.refraction) {\r\n            this.ctx.fillStyle = 'rgba(255,148,0,0.38)';\r\n            this.ctx.fill();\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  drawMultiRays(){\r\n    let ray = new Vector(0, 0);\r\n    let angle = Math.PI * (2 / this.multiRayN);\r\n    for (let i=0; i<this.multiRayN; i++) {\r\n      ray = new Vector(this.round(Math.sin(i*angle), 4), -this.round(Math.cos(i*angle), 4));\r\n      this.recursiveReflection(this.view, this.view.vPlus(ray), this.recursionDepth);\r\n    }\r\n  }\r\n\r\n  draw(){\r\n    this.draw_border();\r\n    this.numberOfRays = 0;\r\n    // Draw edit mode background\r\n    if (this.addMode){\r\n      this.ctx.fillStyle = 'rgb(0, 0, 255, 0.2)';\r\n      this.ctx.fillRect(2, 2, this.cvs.width-4, this.cvs.height-4);\r\n    }\r\n    // Draw source\r\n    if (!this.multiRayMode) {\r\n      this.drawCircle(this.source, 3);\r\n    }\r\n    // Polygon mode\r\n    if (this.polyDraw) {\r\n      this.drawPolygon(this.view, this.polyRadius, this.polyN, this.polyAngle, false);\r\n    }\r\n\r\n    //Draw objects\r\n    this.drawObjects();\r\n\r\n    if (this.showNormals){\r\n      this.drawNormals();\r\n    }\r\n    if (this.popped){\r\n      this.objects.push([]);\r\n      this.popped = !this.popped;\r\n    }\r\n    if (!(this.polyDraw)) {\r\n      if (this.multiRayMode){\r\n        this.drawMultiRays();\r\n      }\r\n      else {\r\n        this.recursiveReflection(this.source, this.view, this.recursionDepth);\r\n      }\r\n    }\r\n    this.raysText.innerHTML = \"Number of rays: \" + this.numberOfRays.toString();\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Paper className={\"rayPaper\"}>\r\n        <div style={{height: \"5em\"}}/>\r\n        <canvas id=\"canvas\" width={0.99*window.innerWidth} height={0.73*window.innerHeight}/>\r\n        <section className=\"info\">\r\n          <div className=\"row\">\r\n            <div className=\"rtcard\" id=\"recursionDepth\"/>\r\n            <div className=\"rtcard\" id=\"objects\"/>\r\n            <div className=\"rtcard\" id=\"edges\"/>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"rtcard\" id=\"frame\"/>\r\n            <div className=\"rtcard\" id=\"refraction\"/>\r\n            <div className=\"rtcard\" id=\"normals\"/>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"rtcard\" id=\"polyDraw\"/>\r\n            <div className=\"refr\">\r\n              <label htmlFor=\"refractiveIndex\">Refractive index: </label>\r\n              <input value={this.state.refractiveIndex} placeholder=\"1.33\" id=\"refractiveIndex\"\r\n                     onChange={event=>{this.setState({refractiveIndex: event.target.value})}} />\r\n            </div>\r\n            <div className=\"rtcard\" id=\"rays\"/>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"rtcard\" id=\"multiRay\"/>\r\n            <div className=\"refr\">\r\n              <div id=\"shootMode\"/>\r\n              <input value={this.state.shootDelay} placeholder=\"300\" id=\"shootDelay\"\r\n                     onChange={event=>{this.setState({shootDelay: event.target.value})}} />\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport {Switch, Route} from 'react-router-dom';\r\nimport NavigationBar from './components/NavigationBar';\r\nimport {connect} from 'react-redux';\r\nimport Normal from './Normal';\r\nimport Poisson from './Poisson';\r\nimport SpikeTrains from './spikeTrain';\r\nimport IPython from './ipython';\r\nimport RayTracing from './rayTracing';\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavigationBar />\r\n        <div className={this.props.selectedTab === 'home' ? '' : 'invisible'}>\r\n          <header className={'App-header'}>\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n            Data Visualisation\r\n          </header>\r\n        </div>\r\n        <div className={this.props.selectedTab === 'normal' ? '' : 'invisible'}>\r\n          <Normal />\r\n        </div>\r\n        <div className={this.props.selectedTab === 'poisson' ? '' : 'invisible'}>\r\n          <Poisson />\r\n        </div>\r\n        <div className={this.props.selectedTab === 'spikeTrains' ? '' : 'invisible'}>\r\n          <SpikeTrains />\r\n        </div>\r\n        <div className={this.props.selectedTab === 'rayTracing' ? '' : 'invisible'}>\r\n          <RayTracing />\r\n        </div>\r\n        <div className={this.props.selectedTab === 'ipython' ? '' : 'invisible'}>\r\n          <IPython />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // return (\r\n  //   <Switch>\r\n  //     <Route exact path=\"/\" component={Header} />\r\n  //     <Route path=\"/stats\" component={Stats} />\r\n  //   </Switch>\r\n  // );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    selectedTab: state.selectedTab\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport {createStore} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport produce from 'immer';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport {linToLog} from './components/utils';\r\nimport {createMuiTheme, MuiThemeProvider} from '@material-ui/core';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: 'dark',\r\n    secondary: {\r\n      main: '#FFFFFF'\r\n    }\r\n  }\r\n});\r\n\r\nconst initialState = {\r\n  mean: {\r\n    normal: 1,\r\n    poisson: 100\r\n  },\r\n  stDev: {\r\n    normal: 10,\r\n    poisson: 10\r\n  },\r\n  lambda : {\r\n    poisson: 5\r\n  },\r\n  samples: {\r\n    normal: 1000,\r\n    poisson: 1000\r\n  },\r\n  updateData: {\r\n    normal: false,\r\n    poisson: false\r\n  },\r\n  performanceChart: {\r\n    normal: false,\r\n    poisson: false\r\n  },\r\n  selectedTab: 'home',\r\n};\r\n\r\nfunction reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'SLIDER_CHANGE':\r\n      return produce(state, draft => {\r\n        draft[action.value][action.name] = linToLog(action.newValue);\r\n      });\r\n    case 'INPUT_CHANGE':\r\n      return produce(state, draft => {\r\n        draft[action.value][action.name] = action.event.target.value === '' ? '' : Number(action.event.target.value);\r\n      });\r\n    case 'CLIP':\r\n      if (state[action.value][action.name] > action.max) {\r\n        return produce(state, draft => {\r\n          draft[action.value][action.name] = action.max;\r\n        });\r\n      } else if (state[action.value][action.name] < 0) {\r\n        return produce(state, draft => {\r\n          draft[action.value][action.name] = 0;\r\n        });\r\n      } else {\r\n        return state;\r\n      }\r\n    case 'TOGGLE_UPDATE_DATA':\r\n      return produce(state, draft => {\r\n        draft.updateData[action.name] = !state.updateData[action.name];\r\n      });\r\n    case 'TOGGLE_PERFORMANCE_CHART':\r\n      return produce(state, draft => {\r\n        draft.updateData[action.name] = !state.updateData[action.name];\r\n        draft.performanceChart[action.name] = !state.performanceChart[action.name];\r\n      });\r\n    case 'SET_TAB':\r\n      return {\r\n        ...state,\r\n        selectedTab: action.value\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nconst store = createStore(reducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <MuiThemeProvider theme={theme}>\r\n      <App />\r\n    </MuiThemeProvider>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}